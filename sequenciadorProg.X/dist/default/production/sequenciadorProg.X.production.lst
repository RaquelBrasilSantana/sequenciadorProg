

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Nov 06 16:35:36 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_clearLCD
  1180                           	FNCALL	_main,_currentKey
  1181                           	FNCALL	_main,_delFIFO
  1182                           	FNCALL	_main,_displayFIFO
  1183                           	FNCALL	_main,_getFIFO
  1184                           	FNCALL	_main,_initKeyboard
  1185                           	FNCALL	_main,_initLCD
  1186                           	FNCALL	_main,_initSerialIO
  1187                           	FNCALL	_main,_keyboardScan
  1188                           	FNCALL	_main,_lcd
  1189                           	FNCALL	_main,_previousKey
  1190                           	FNCALL	_main,_putFIFO
  1191                           	FNCALL	_main,_screen_car
  1192                           	FNCALL	_main,_screen_menu
  1193                           	FNCALL	_main,_serialIOscan
  1194                           	FNCALL	_serialIOscan,_serialIObyteShift
  1195                           	FNCALL	_serialIOscan,_serialIOload
  1196                           	FNCALL	_screen_menu,_lcd
  1197                           	FNCALL	_screen_car,_clearLCD
  1198                           	FNCALL	_screen_car,_lcd
  1199                           	FNCALL	_lcd,_lcddat
  1200                           	FNCALL	_lcd,_lcdxy
  1201                           	FNCALL	_lcdxy,_lcdcmd
  1202                           	FNCALL	_clearLCD,_lcdcmd
  1203                           	FNCALL	_initLCD,_lcdcmd
  1204                           	FNROOT	_main
  1205                           	global	_keyboardMatrix
  1206                           psect	strings,class=STRING,delta=2,noexec
  1207                           global __pstrings
  1208                           __pstrings:
  1209  0003                     stringtab:
  1210  0003                     	global    __stringtab
  1211                           __stringtab:
  1212  0003                     ;	String table - string pointers are 1 byte each
  1213                           	btfsc	(btemp+1),7
  1214  0003  1BFF               	ljmp	stringcode
  1215  0004  280D               	bcf	status,7
  1216  0005  1383               	btfsc	(btemp+1),0
  1217  0006  187F               	bsf	status,7
  1218  0007  1783               	movf	indf,w
  1219  0008  0800               	incf fsr
  1220  0009  0A84               skipnz
  1221  000A  1903               incf btemp+1
  1222  000B  0AFF               	return
  1223  000C  0008               stringcode:stringdir:
  1224  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
  1225  000D  3000               movwf pclath
  1226  000E  008A               movf fsr,w
  1227  000F  0804               incf fsr
  1228  0010  0A84               	addwf pc
  1229  0011  0782               	global __stringbase
  1230                           __stringbase:
  1231  0012                     	retlw	0
  1232  0012  3400               psect	strings
  1233                           	global    __end_of__stringtab
  1234                           __end_of__stringtab:
  1235  0013                     	file	"keyboard.c"
  1236                           	line	39
  1237                           _keyboardMatrix:
  1238  0013                     	retlw	031h
  1239  0013  3431               	retlw	032h
  1240  0014  3432               	retlw	033h
  1241  0015  3433               	retlw	041h
  1242  0016  3441               	retlw	034h
  1243  0017  3434               	retlw	035h
  1244  0018  3435               	retlw	036h
  1245  0019  3436               	retlw	042h
  1246  001A  3442               	retlw	037h
  1247  001B  3437               	retlw	038h
  1248  001C  3438               	retlw	039h
  1249  001D  3439               	retlw	043h
  1250  001E  3443               	retlw	02Ah
  1251  001F  342A               	retlw	030h
  1252  0020  3430               	retlw	023h
  1253  0021  3423               	retlw	044h
  1254  0022  3444               	global __end_of_keyboardMatrix
  1255                           __end_of_keyboardMatrix:
  1256  0023                     	global	_keyboardMatrix
  1257                           	global	_fifoTail
  1258                           	global	_fifoHead
  1259                           	global	_lenSerialIO
  1260                           	global	_ptrSerialOut
  1261                           	global	_ptrSerialIn
  1262                           	global	_currKey
  1263                           	global	_prevKey
  1264                           	global	_fifo
  1265                           	global	_SERIALIO
  1266                           _SERIALIO	set	9
  1267  0009                     	global	_PORTEbits
  1268                           _PORTEbits	set	0x9
  1269  0009                     	global	_PORTAbits
  1270                           _PORTAbits	set	0x5
  1271  0005                     	global	_LCDbits
  1272                           _LCDbits	set	8
  1273  0008                     	global	_PORTB
  1274                           _PORTB	set	0x6
  1275  0006                     	global	_KEYBOARDbits
  1276                           _KEYBOARDbits	set	0x6
  1277  0006                     	global	_TRISAbits
  1278                           _TRISAbits	set	0x85
  1279  0085                     	global	_TRISEbits
  1280                           _TRISEbits	set	0x89
  1281  0089                     	global	_TRISD
  1282                           _TRISD	set	0x88
  1283  0088                     	global	_OPTION_REGbits
  1284                           _OPTION_REGbits	set	0x81
  1285  0081                     	global	_WPUB
  1286                           _WPUB	set	0x95
  1287  0095                     	global	_TRISB
  1288                           _TRISB	set	0x86
  1289  0086                     	global	_ANSELbits
  1290                           _ANSELbits	set	0x188
  1291  0188                     	global	_ANSELH
  1292                           _ANSELH	set	0x189
  1293  0189                     	
  1294                           STR_3:	
  1295  0023                     	retlw	73	;'I'
  1296  0023  3449               	retlw	78	;'N'
  1297  0024  344E               	retlw	83	;'S'
  1298  0025  3453               	retlw	73	;'I'
  1299  0026  3449               	retlw	82	;'R'
  1300  0027  3452               	retlw	65	;'A'
  1301  0028  3441               	retlw	32	;' '
  1302  0029  3420               	retlw	65	;'A'
  1303  002A  3441               	retlw	32	;' '
  1304  002B  3420               	retlw	83	;'S'
  1305  002C  3453               	retlw	69	;'E'
  1306  002D  3445               	retlw	81	;'Q'
  1307  002E  3451               	retlw	85	;'U'
  1308  002F  3455               	retlw	69	;'E'
  1309  0030  3445               	retlw	78	;'N'
  1310  0031  344E               	retlw	46	;'.'
  1311  0032  342E               	retlw	0
  1312  0033  3400               psect	strings
  1313                           	
  1314                           STR_1:	
  1315  0034                     	retlw	83	;'S'
  1316  0034  3453               	retlw	69	;'E'
  1317  0035  3445               	retlw	81	;'Q'
  1318  0036  3451               	retlw	85	;'U'
  1319  0037  3455               	retlw	69	;'E'
  1320  0038  3445               	retlw	78	;'N'
  1321  0039  344E               	retlw	67	;'C'
  1322  003A  3443               	retlw	73	;'I'
  1323  003B  3449               	retlw	65	;'A'
  1324  003C  3441               	retlw	68	;'D'
  1325  003D  3444               	retlw	79	;'O'
  1326  003E  344F               	retlw	82	;'R'
  1327  003F  3452               	retlw	0
  1328  0040  3400               psect	strings
  1329                           	
  1330                           STR_4:	
  1331  0041                     	retlw	84	;'T'
  1332  0041  3454               	retlw	69	;'E'
  1333  0042  3445               	retlw	77	;'M'
  1334  0043  344D               	retlw	80	;'P'
  1335  0044  3450               	retlw	79	;'O'
  1336  0045  344F               	retlw	32	;' '
  1337  0046  3420               	retlw	82	;'R'
  1338  0047  3452               	retlw	69	;'E'
  1339  0048  3445               	retlw	65	;'A'
  1340  0049  3441               	retlw	76	;'L'
  1341  004A  344C               	retlw	58	;':'
  1342  004B  343A               	retlw	0
  1343  004C  3400               psect	strings
  1344                           	
  1345                           STR_2:	
  1346  004D                     	retlw	80	;'P'
  1347  004D  3450               	retlw	82	;'R'
  1348  004E  3452               	retlw	79	;'O'
  1349  004F  344F               	retlw	71	;'G'
  1350  0050  3447               	retlw	82	;'R'
  1351  0051  3452               	retlw	65	;'A'
  1352  0052  3441               	retlw	77	;'M'
  1353  0053  344D               	retlw	65	;'A'
  1354  0054  3441               	retlw	86	;'V'
  1355  0055  3456               	retlw	69	;'E'
  1356  0056  3445               	retlw	76	;'L'
  1357  0057  344C               	retlw	0
  1358  0058  3400               psect	strings
  1359                           ; #config settings
  1360                           global __CFG_FOSC$INTRC_NOCLKOUT
  1361                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1362  0000                     global __CFG_WDTE$OFF
  1363                           __CFG_WDTE$OFF equ 0x0
  1364  0000                     global __CFG_MCLRE$OFF
  1365                           __CFG_MCLRE$OFF equ 0x0
  1366  0000                     global __CFG_LVP$OFF
  1367                           __CFG_LVP$OFF equ 0x0
  1368  0000                     	file	"C:\Users\18263814\AppData\Local\Temp\s98k."
  1369                           	line	#
  1370                           psect cinit,class=CODE,delta=2
  1371                           global start_initialization
  1372                           start_initialization:
  1373  07F1                     
  1374                           global __initialization
  1375                           __initialization:
  1376  07F1                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1377                           global __pbssCOMMON
  1378                           __pbssCOMMON:
  1379  007C                     _fifoTail:
  1380  007C                            ds      1
  1381  007C                     
  1382                           _fifoHead:
  1383  007D                            ds      1
  1384  007D                     
  1385                           psect	bssBANK0,class=BANK0,space=1,noexec
  1386                           global __pbssBANK0
  1387                           __pbssBANK0:
  1388  0020                     _lenSerialIO:
  1389  0020                            ds      1
  1390  0020                     
  1391                           _ptrSerialOut:
  1392  0021                            ds      1
  1393  0021                     
  1394                           _ptrSerialIn:
  1395  0022                            ds      1
  1396  0022                     
  1397                           _currKey:
  1398  0023                            ds      1
  1399  0023                     
  1400                           _prevKey:
  1401  0024                            ds      1
  1402  0024                     
  1403                           _fifo:
  1404  0025                            ds      16
  1405  0025                     
  1406                           	file	"C:\Users\18263814\AppData\Local\Temp\s98k."
  1407                           	line	#
  1408                           psect clrtext,class=CODE,delta=2
  1409                           global clear_ram0
  1410                           ;	Called with FSR containing the base address, and
  1411                           ;	W with the last address+1
  1412                           clear_ram0:
  1413  00BF                     	clrwdt			;clear the watchdog before getting into this loop
  1414  00BF  0064               clrloop0:
  1415  00C0                     	clrf	indf		;clear RAM location pointed to by FSR
  1416  00C0  0180               	incf	fsr,f		;increment pointer
  1417  00C1  0A84               	xorwf	fsr,w		;XOR with final address
  1418  00C2  0604               	btfsc	status,2	;have we reached the end yet?
  1419  00C3  1903               	retlw	0		;all done for this memory range, return
  1420  00C4  3400               	xorwf	fsr,w		;XOR again to restore value
  1421  00C5  0604               	goto	clrloop0		;do the next byte
  1422  00C6  28C0               
  1423                           ; Clear objects allocated to COMMON
  1424                           psect cinit,class=CODE,delta=2,merge=1
  1425                           	clrf	((__pbssCOMMON)+0)&07Fh
  1426  07F1  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
  1427  07F2  01FD               ; Clear objects allocated to BANK0
  1428                           psect cinit,class=CODE,delta=2,merge=1
  1429                           	bcf	status, 7	;select IRP bank0
  1430  07F3  1383               	movlw	low(__pbssBANK0)
  1431  07F4  3020               	movwf	fsr
  1432  07F5  0084               	movlw	low((__pbssBANK0)+015h)
  1433  07F6  3035               	fcall	clear_ram0
  1434  07F7  120A  118A  20BF  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1435                           global end_of_initialization,__end_of__initialization
  1436                           
  1437                           ;End of C runtime variable initialization code
  1438                           
  1439                           end_of_initialization:
  1440  07FC                     __end_of__initialization:
  1441  07FC                     clrf status
  1442  07FC  0183               ljmp _main	;jump to C main() function
  1443  07FD  120A  118A  2BA9   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1444                           global __pcstackCOMMON
  1445                           __pcstackCOMMON:
  1446  0070                     ?_displayFIFO:	; 1 bytes @ 0x0
  1447  0070                     ??_displayFIFO:	; 1 bytes @ 0x0
  1448  0070                     ?_clearLCD:	; 1 bytes @ 0x0
  1449  0070                     ?_initSerialIO:	; 1 bytes @ 0x0
  1450  0070                     ?_serialIOscan:	; 1 bytes @ 0x0
  1451  0070                     ?_putFIFO:	; 1 bytes @ 0x0
  1452  0070                     ??_putFIFO:	; 1 bytes @ 0x0
  1453  0070                     ?_getFIFO:	; 1 bytes @ 0x0
  1454  0070                     ??_getFIFO:	; 1 bytes @ 0x0
  1455  0070                     ?_delFIFO:	; 1 bytes @ 0x0
  1456  0070                     ??_delFIFO:	; 1 bytes @ 0x0
  1457  0070                     ?_previousKey:	; 1 bytes @ 0x0
  1458  0070                     ??_previousKey:	; 1 bytes @ 0x0
  1459  0070                     ?_currentKey:	; 1 bytes @ 0x0
  1460  0070                     ??_currentKey:	; 1 bytes @ 0x0
  1461  0070                     ?_keyboardScan:	; 1 bytes @ 0x0
  1462  0070                     ??_keyboardScan:	; 1 bytes @ 0x0
  1463  0070                     ?_initKeyboard:	; 1 bytes @ 0x0
  1464  0070                     ??_initKeyboard:	; 1 bytes @ 0x0
  1465  0070                     ?_lcdcmd:	; 1 bytes @ 0x0
  1466  0070                     ??_lcdcmd:	; 1 bytes @ 0x0
  1467  0070                     ?_lcddat:	; 1 bytes @ 0x0
  1468  0070                     ??_lcddat:	; 1 bytes @ 0x0
  1469  0070                     ?_screen_car:	; 1 bytes @ 0x0
  1470  0070                     ?_screen_menu:	; 1 bytes @ 0x0
  1471  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1472  0070                     ?_main:	; 1 bytes @ 0x0
  1473  0070                     ?_serialIOload:	; 1 bytes @ 0x0
  1474  0070                     ??_serialIOload:	; 1 bytes @ 0x0
  1475  0070                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  1476  0070                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  1477  0070                     	global	initSerialIO@ptrOut
  1478                           initSerialIO@ptrOut:	; 1 bytes @ 0x0
  1479  0070                     	ds	1
  1480  0070                     	global	putFIFO@c
  1481                           putFIFO@c:	; 1 bytes @ 0x1
  1482  0071                     	global	getFIFO@aux
  1483                           getFIFO@aux:	; 1 bytes @ 0x1
  1484  0071                     	global	delFIFO@n
  1485                           delFIFO@n:	; 1 bytes @ 0x1
  1486  0071                     	global	lcddat@dat
  1487                           lcddat@dat:	; 1 bytes @ 0x1
  1488  0071                     	global	serialIObyteShift@dataIn
  1489                           serialIObyteShift@dataIn:	; 1 bytes @ 0x1
  1490  0071                     	global	initSerialIO@length
  1491                           initSerialIO@length:	; 1 bytes @ 0x1
  1492  0071                     	ds	1
  1493  0071                     ??_initSerialIO:	; 1 bytes @ 0x2
  1494  0072                     	global	delFIFO@ret
  1495                           delFIFO@ret:	; 1 bytes @ 0x2
  1496  0072                     	global	lcdcmd@cmd
  1497                           lcdcmd@cmd:	; 1 bytes @ 0x2
  1498  0072                     	global	lcddat@nibble
  1499                           lcddat@nibble:	; 1 bytes @ 0x2
  1500  0072                     	global	serialIObyteShift@dataOut
  1501                           serialIObyteShift@dataOut:	; 1 bytes @ 0x2
  1502  0072                     	ds	1
  1503  0072                     	global	lcdcmd@nibble
  1504                           lcdcmd@nibble:	; 1 bytes @ 0x3
  1505  0073                     	global	serialIObyteShift@dataBit
  1506                           serialIObyteShift@dataBit:	; 1 bytes @ 0x3
  1507  0073                     	global	initSerialIO@ptrIn
  1508                           initSerialIO@ptrIn:	; 1 bytes @ 0x3
  1509  0073                     	ds	1
  1510  0073                     ??_clearLCD:	; 1 bytes @ 0x4
  1511  0074                     ??_serialIOscan:	; 1 bytes @ 0x4
  1512  0074                     ?_lcdxy:	; 1 bytes @ 0x4
  1513  0074                     ??_initLCD:	; 1 bytes @ 0x4
  1514  0074                     	global	lcdxy@y
  1515                           lcdxy@y:	; 1 bytes @ 0x4
  1516  0074                     	ds	1
  1517  0074                     ??_lcdxy:	; 1 bytes @ 0x5
  1518  0075                     	ds	1
  1519  0075                     	global	lcdxy@x
  1520                           lcdxy@x:	; 1 bytes @ 0x6
  1521  0076                     	ds	1
  1522  0076                     ?_lcd:	; 1 bytes @ 0x7
  1523  0077                     	global	lcd@y
  1524                           lcd@y:	; 1 bytes @ 0x7
  1525  0077                     	global	serialIOscan@j
  1526                           serialIOscan@j:	; 1 bytes @ 0x7
  1527  0077                     	ds	1
  1528  0077                     	global	keyboardScan@aux
  1529                           keyboardScan@aux:	; 1 bytes @ 0x8
  1530  0078                     	global	serialIOscan@i
  1531                           serialIOscan@i:	; 1 bytes @ 0x8
  1532  0078                     	global	lcd@ptr
  1533                           lcd@ptr:	; 2 bytes @ 0x8
  1534  0078                     	ds	1
  1535  0078                     	global	keyboardScan@i
  1536                           keyboardScan@i:	; 1 bytes @ 0x9
  1537  0079                     	ds	1
  1538  0079                     ??_lcd:	; 1 bytes @ 0xA
  1539  007A                     	global	keyboardScan@j
  1540                           keyboardScan@j:	; 1 bytes @ 0xA
  1541  007A                     	ds	1
  1542  007A                     	global	lcd@x
  1543                           lcd@x:	; 1 bytes @ 0xB
  1544  007B                     	ds	1
  1545  007B                     ??_screen_menu:	; 1 bytes @ 0xC
  1546  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1547                           global __pcstackBANK0
  1548                           __pcstackBANK0:
  1549  0035                     ??_screen_car:	; 1 bytes @ 0x0
  1550  0035                     	ds	3
  1551  0035                     ??_main:	; 1 bytes @ 0x3
  1552  0038                     	ds	3
  1553  0038                     	global	main@a
  1554                           main@a:	; 1 bytes @ 0x6
  1555  003B                     	ds	1
  1556  003B                     	global	main@b
  1557                           main@b:	; 1 bytes @ 0x7
  1558  003C                     	ds	1
  1559  003C                     	global	main@c
  1560                           main@c:	; 1 bytes @ 0x8
  1561  003D                     	ds	1
  1562  003D                     	global	main@d
  1563                           main@d:	; 1 bytes @ 0x9
  1564  003E                     	ds	1
  1565  003E                     	global	main@atuador
  1566                           main@atuador:	; 1 bytes @ 0xA
  1567  003F                     	ds	1
  1568  003F                     	global	main@sensor
  1569                           main@sensor:	; 1 bytes @ 0xB
  1570  0040                     	ds	1
  1571  0040                     	global	main@tecla
  1572                           main@tecla:	; 1 bytes @ 0xC
  1573  0041                     	ds	1
  1574  0041                     	global	main@estado
  1575                           main@estado:	; 2 bytes @ 0xD
  1576  0042                     	ds	2
  1577  0042                     	global	main@rest
  1578                           main@rest:	; 1 bytes @ 0xF
  1579  0044                     	ds	1
  1580  0044                     ;!
  1581                           ;!Data Sizes:
  1582                           ;!    Strings     54
  1583                           ;!    Constant    16
  1584                           ;!    Data        0
  1585                           ;!    BSS         23
  1586                           ;!    Persistent  0
  1587                           ;!    Stack       0
  1588                           ;!
  1589                           ;!Auto Spaces:
  1590                           ;!    Space          Size  Autos    Used
  1591                           ;!    COMMON           14     12      14
  1592                           ;!    BANK0            80     16      37
  1593                           ;!    BANK1            80      0       0
  1594                           ;!    BANK3            96      0       0
  1595                           ;!    BANK2            96      0       0
  1596                           
  1597                           ;!
  1598                           ;!Pointer List with Targets:
  1599                           ;!
  1600                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
  1601                           ;!		 -> main@atuador(BANK0[1]), 
  1602                           ;!
  1603                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
  1604                           ;!		 -> main@sensor(BANK0[1]), 
  1605                           ;!
  1606                           ;!    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
  1607                           ;!		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 
  1608                           ;!
  1609                           ;!    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
  1610                           ;!		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 
  1611                           ;!
  1612                           ;!    lcd@ptr	PTR const unsigned char  size(2) Largest target is 17
  1613                           ;!		 -> STR_4(CODE[12]), STR_3(CODE[17]), STR_2(CODE[12]), STR_1(CODE[13]), 
  1614                           ;!		 -> fifo(BANK0[16]), 
  1615                           ;!
  1616                           ;!    sp__displayFIFO	PTR void  size(1) Largest target is 16
  1617                           ;!		 -> fifo(BANK0[16]), 
  1618                           ;!
  1619                           
  1620                           
  1621                           ;!
  1622                           ;!Critical Paths under _main in COMMON
  1623                           ;!
  1624                           ;!    _main->_lcd
  1625                           ;!    _serialIOscan->_serialIObyteShift
  1626                           ;!    _screen_menu->_lcd
  1627                           ;!    _screen_car->_lcd
  1628                           ;!    _lcd->_lcdxy
  1629                           ;!    _lcdxy->_lcdcmd
  1630                           ;!    _clearLCD->_lcdcmd
  1631                           ;!    _initLCD->_lcdcmd
  1632                           ;!
  1633                           ;!Critical Paths under _main in BANK0
  1634                           ;!
  1635                           ;!    _main->_screen_car
  1636                           ;!
  1637                           ;!Critical Paths under _main in BANK1
  1638                           ;!
  1639                           ;!    None.
  1640                           ;!
  1641                           ;!Critical Paths under _main in BANK3
  1642                           ;!
  1643                           ;!    None.
  1644                           ;!
  1645                           ;!Critical Paths under _main in BANK2
  1646                           ;!
  1647                           ;!    None.
  1648                           
  1649 ;;
  1650 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1651 ;;
  1652                           
  1653                           ;!
  1654                           ;!Call Graph Tables:
  1655                           ;!
  1656                           ;! ---------------------------------------------------------------------------------
  1657                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1658                           ;! ---------------------------------------------------------------------------------
  1659                           ;! (0) _main                                                45    45      0    5938
  1660                           ;!                                              3 BANK0     13    13      0
  1661                           ;!                           _clearLCD
  1662                           ;!                         _currentKey
  1663                           ;!                            _delFIFO
  1664                           ;!                        _displayFIFO
  1665                           ;!                            _getFIFO
  1666                           ;!                       _initKeyboard
  1667                           ;!                            _initLCD
  1668                           ;!                       _initSerialIO
  1669                           ;!                       _keyboardScan
  1670                           ;!                                _lcd
  1671                           ;!                        _previousKey
  1672                           ;!                            _putFIFO
  1673                           ;!                         _screen_car
  1674                           ;!                        _screen_menu
  1675                           ;!                       _serialIOscan
  1676                           ;! ---------------------------------------------------------------------------------
  1677                           ;! (1) _serialIOscan                                         5     5      0     205
  1678                           ;!                                              4 COMMON     5     5      0
  1679                           ;!                  _serialIObyteShift
  1680                           ;!                       _serialIOload
  1681                           ;! ---------------------------------------------------------------------------------
  1682                           ;! (2) _serialIOload                                         0     0      0       0
  1683                           ;! ---------------------------------------------------------------------------------
  1684                           ;! (2) _serialIObyteShift                                    4     4      0     114
  1685                           ;!                                              0 COMMON     4     4      0
  1686                           ;! ---------------------------------------------------------------------------------
  1687                           ;! (1) _screen_menu                                          0     0      0    1213
  1688                           ;!                                _lcd
  1689                           ;! ---------------------------------------------------------------------------------
  1690                           ;! (1) _screen_car                                           3     3      0    1390
  1691                           ;!                                              0 BANK0      3     3      0
  1692                           ;!                           _clearLCD
  1693                           ;!                                _lcd
  1694                           ;! ---------------------------------------------------------------------------------
  1695                           ;! (2) _lcd                                                  5     2      3    1213
  1696                           ;!                                              7 COMMON     5     2      3
  1697                           ;!                        _displayFIFO (ARG)
  1698                           ;!                             _lcddat
  1699                           ;!                              _lcdxy
  1700                           ;! ---------------------------------------------------------------------------------
  1701                           ;! (3) _lcdxy                                                3     2      1     297
  1702                           ;!                                              4 COMMON     3     2      1
  1703                           ;!                             _lcdcmd
  1704                           ;! ---------------------------------------------------------------------------------
  1705                           ;! (3) _lcddat                                               3     3      0      67
  1706                           ;!                                              0 COMMON     3     3      0
  1707                           ;! ---------------------------------------------------------------------------------
  1708                           ;! (2) _clearLCD                                             0     0      0     177
  1709                           ;!                             _lcdcmd
  1710                           ;! ---------------------------------------------------------------------------------
  1711                           ;! (1) _putFIFO                                              2     2      0      22
  1712                           ;!                                              0 COMMON     2     2      0
  1713                           ;! ---------------------------------------------------------------------------------
  1714                           ;! (1) _previousKey                                          0     0      0       0
  1715                           ;! ---------------------------------------------------------------------------------
  1716                           ;! (2) _keyboardScan                                        11    11      0     210
  1717                           ;!                                              0 COMMON    11    11      0
  1718                           ;! ---------------------------------------------------------------------------------
  1719                           ;! (1) _initSerialIO                                         4     2      2     251
  1720                           ;!                                              0 COMMON     4     2      2
  1721                           ;! ---------------------------------------------------------------------------------
  1722                           ;! (1) _initLCD                                              5     5      0     177
  1723                           ;!                                              4 COMMON     3     3      0
  1724                           ;!                             _lcdcmd
  1725                           ;! ---------------------------------------------------------------------------------
  1726                           ;! (4) _lcdcmd                                               4     4      0     177
  1727                           ;!                                              0 COMMON     4     4      0
  1728                           ;! ---------------------------------------------------------------------------------
  1729                           ;! (1) _initKeyboard                                         0     0      0       0
  1730                           ;! ---------------------------------------------------------------------------------
  1731                           ;! (1) _getFIFO                                              2     2      0      24
  1732                           ;!                                              0 COMMON     2     2      0
  1733                           ;! ---------------------------------------------------------------------------------
  1734                           ;! (1) _displayFIFO                                          0     0      0       0
  1735                           ;! ---------------------------------------------------------------------------------
  1736                           ;! (1) _delFIFO                                              3     3      0      46
  1737                           ;!                                              0 COMMON     3     3      0
  1738                           ;! ---------------------------------------------------------------------------------
  1739                           ;! (1) _currentKey                                           0     0      0       0
  1740                           ;! ---------------------------------------------------------------------------------
  1741                           ;! Estimated maximum stack depth 4
  1742                           ;! ---------------------------------------------------------------------------------
  1743                           ;!
  1744                           ;! Call Graph Graphs:
  1745                           ;!
  1746                           ;! _main (ROOT)
  1747                           ;!   _clearLCD
  1748                           ;!     _lcdcmd
  1749                           ;!   _currentKey
  1750                           ;!   _delFIFO
  1751                           ;!   _displayFIFO
  1752                           ;!   _getFIFO
  1753                           ;!   _initKeyboard
  1754                           ;!   _initLCD
  1755                           ;!     _lcdcmd
  1756                           ;!   _initSerialIO
  1757                           ;!   _keyboardScan
  1758                           ;!   _lcd
  1759                           ;!     _displayFIFO (ARG)
  1760                           ;!     _lcddat (ARG)
  1761                           ;!     _lcdxy (ARG)
  1762                           ;!       _lcdcmd
  1763                           ;!   _previousKey
  1764                           ;!   _putFIFO
  1765                           ;!   _screen_car
  1766                           ;!     _clearLCD
  1767                           ;!       _lcdcmd
  1768                           ;!     _lcd
  1769                           ;!       _displayFIFO (ARG)
  1770                           ;!       _lcddat (ARG)
  1771                           ;!       _lcdxy (ARG)
  1772                           ;!         _lcdcmd
  1773                           ;!   _screen_menu
  1774                           ;!     _lcd
  1775                           ;!       _displayFIFO (ARG)
  1776                           ;!       _lcddat (ARG)
  1777                           ;!       _lcdxy (ARG)
  1778                           ;!         _lcdcmd
  1779                           ;!   _serialIOscan
  1780                           ;!     _serialIObyteShift
  1781                           ;!     _serialIOload
  1782                           ;!
  1783                           
  1784                           ;! Address spaces:
  1785                           
  1786                           ;!Name               Size   Autos  Total    Cost      Usage
  1787                           ;!BITCOMMON            E      0       0       0        0.0%
  1788                           ;!EEDATA             100      0       0       0        0.0%
  1789                           ;!NULL                 0      0       0       0        0.0%
  1790                           ;!CODE                 0      0       0       0        0.0%
  1791                           ;!COMMON               E      C       E       1      100.0%
  1792                           ;!BITSFR0              0      0       0       1        0.0%
  1793                           ;!SFR0                 0      0       0       1        0.0%
  1794                           ;!BITSFR1              0      0       0       2        0.0%
  1795                           ;!SFR1                 0      0       0       2        0.0%
  1796                           ;!STACK                0      0       0       2        0.0%
  1797                           ;!ABS                  0      0      33       3        0.0%
  1798                           ;!BITBANK0            50      0       0       4        0.0%
  1799                           ;!BITSFR3              0      0       0       4        0.0%
  1800                           ;!SFR3                 0      0       0       4        0.0%
  1801                           ;!BANK0               50     10      25       5       46.3%
  1802                           ;!BITSFR2              0      0       0       5        0.0%
  1803                           ;!SFR2                 0      0       0       5        0.0%
  1804                           ;!BITBANK1            50      0       0       6        0.0%
  1805                           ;!BANK1               50      0       0       7        0.0%
  1806                           ;!BITBANK3            60      0       0       8        0.0%
  1807                           ;!BANK3               60      0       0       9        0.0%
  1808                           ;!BITBANK2            60      0       0      10        0.0%
  1809                           ;!BANK2               60      0       0      11        0.0%
  1810                           ;!DATA                 0      0      33      12        0.0%
  1811                           
  1812                           	global	_main
  1813                           
  1814 ;; *************** function _main *****************
  1815 ;; Defined at:
  1816 ;;		line 48 in file "main.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  screenDisp     32    0        struct .[16]
  1821 ;;  estado          2   13[BANK0 ] int 
  1822 ;;  rest            1   15[BANK0 ] unsigned char 
  1823 ;;  tecla           1   12[BANK0 ] unsigned char 
  1824 ;;  sensor          1   11[BANK0 ] struct .
  1825 ;;  atuador         1   10[BANK0 ] struct .
  1826 ;;  d               1    9[BANK0 ] unsigned char 
  1827 ;;  c               1    8[BANK0 ] unsigned char 
  1828 ;;  b               1    7[BANK0 ] unsigned char 
  1829 ;;  a               1    6[BANK0 ] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : B00/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1839 ;;      Params:         0       0       0       0       0
  1840 ;;      Locals:         0      10       0       0       0
  1841 ;;      Temps:          0       3       0       0       0
  1842 ;;      Totals:         0      13       0       0       0
  1843 ;;Total ram usage:       13 bytes
  1844 ;; Hardware stack levels required when called:    4
  1845 ;; This function calls:
  1846 ;;		_clearLCD
  1847 ;;		_currentKey
  1848 ;;		_delFIFO
  1849 ;;		_displayFIFO
  1850 ;;		_getFIFO
  1851 ;;		_initKeyboard
  1852 ;;		_initLCD
  1853 ;;		_initSerialIO
  1854 ;;		_keyboardScan
  1855 ;;		_lcd
  1856 ;;		_previousKey
  1857 ;;		_putFIFO
  1858 ;;		_screen_car
  1859 ;;		_screen_menu
  1860 ;;		_serialIOscan
  1861 ;; This function is called by:
  1862 ;;		Startup code after reset
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1866                           	file	"main.c"
  1867                           	line	48
  1868                           global __pmaintext
  1869                           __pmaintext:	;psect for function _main
  1870  03A9                     psect	maintext
  1871                           	file	"main.c"
  1872                           	line	48
  1873                           	global	__size_of_main
  1874                           	__size_of_main	equ	__end_of_main-_main
  1875  0448                     	
  1876                           _main:	
  1877  03A9                     ;incstack = 0
  1878                           	opt	stack 4
  1879                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1880                           	line	50
  1881                           	
  1882                           l1805:	
  1883  03A9                     ;main.c: 50:     unsigned char tecla = 0;
  1884                           	bcf	status, 5	;RP0=0, select bank0
  1885  03A9  1283               	bcf	status, 6	;RP1=0, select bank0
  1886  03AA  1303               	clrf	(main@tecla)
  1887  03AB  01C1               	line	51
  1888                           ;main.c: 51:     unsigned char a,b,c,d = 0;
  1889                           	clrf	(main@d)
  1890  03AC  01BE               	line	52
  1891                           ;main.c: 52:     unsigned char rest = 0;
  1892                           	clrf	(main@rest)
  1893  03AD  01C4               	line	55
  1894                           ;main.c: 53:     SENSORESbits_t sensor;;main.c: 54:     ATUADORESbits_t atuador;;main.c:
                                  55:     int estado = 0;
  1895                           	clrf	(main@estado)
  1896  03AE  01C2               	clrf	(main@estado+1)
  1897  03AF  01C3               	line	58
  1898                           	
  1899                           l1807:	
  1900  03B0                     ;main.c: 56:     forLcd_t screenDisp[16];;main.c: 58:     initLCD();
  1901                           	fcall	_initLCD
  1902  03B0  120A  118A  2272  120A  118A  	line	59
  1903                           	
  1904                           l1809:	
  1905  03B5                     ;main.c: 59:     screen_car();
  1906                           	fcall	_screen_car
  1907  03B5  120A  118A  21FB  120A  118A  	line	60
  1908                           	
  1909                           l1811:	
  1910  03BA                     ;main.c: 60:     initKeyboard();
  1911                           	fcall	_initKeyboard
  1912  03BA  120A  118A  20E1  120A  118A  	line	61
  1913                           	
  1914                           l1813:	
  1915  03BF                     ;main.c: 61:     initSerialIO( &sensor, &atuador, 1 );
  1916                           	movlw	(low(main@atuador|((0x0)<<8)))&0ffh
  1917  03BF  303F               	bcf	status, 5	;RP0=0, select bank0
  1918  03C0  1283               	bcf	status, 6	;RP1=0, select bank0
  1919  03C1  1303               	movwf	(??_main+0)+0
  1920  03C2  00B8               	movf	(??_main+0)+0,w
  1921  03C3  0838               	movwf	(initSerialIO@ptrOut)
  1922  03C4  00F0               	clrf	(initSerialIO@length)
  1923  03C5  01F1               	incf	(initSerialIO@length),f
  1924  03C6  0AF1               	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  1925  03C7  3040               	fcall	_initSerialIO
  1926  03C8  120A  118A  21C7  120A  118A  	goto	l1815
  1927  03CD  2BCE               	line	63
  1928                           ;main.c: 63:     while( 1 )
  1929                           	
  1930                           l162:	
  1931  03CE                     	line	66
  1932                           	
  1933                           l1815:	
  1934  03CE                     ;main.c: 64:     {;main.c: 66:         keyboardScan();
  1935                           	fcall	_keyboardScan
  1936  03CE  120A  118A  232A  120A  118A  	line	67
  1937                           	
  1938                           l1817:	
  1939  03D3                     ;main.c: 67:         screen_menu();
  1940                           	fcall	_screen_menu
  1941  03D3  120A  118A  20C7  120A  118A  	line	69
  1942                           ;main.c: 69:         switch( estado )
  1943                           	goto	l1961
  1944  03D8  2E27               	line	71
  1945                           ;main.c: 70:         {;main.c: 71:             case 0:
  1946                           	
  1947                           l164:	
  1948  03D9                     	line	72
  1949                           	
  1950                           l1819:	
  1951  03D9                     ;main.c: 72:                     estado = 10;
  1952                           	movlw	0Ah
  1953  03D9  300A               	bcf	status, 5	;RP0=0, select bank0
  1954  03DA  1283               	bcf	status, 6	;RP1=0, select bank0
  1955  03DB  1303               	movwf	(main@estado)
  1956  03DC  00C2               	movlw	0
  1957  03DD  3000               	movwf	((main@estado))+1
  1958  03DE  00C3               	line	73
  1959                           ;main.c: 73:                     break;
  1960                           	goto	l1963
  1961  03DF  2EA1               	line	74
  1962                           ;main.c: 74:             case 10:
  1963                           	
  1964                           l166:	
  1965  03E0                     	line	75
  1966                           	
  1967                           l1821:	
  1968  03E0                     ;main.c: 75:                     rest = getFIFO();
  1969                           	fcall	_getFIFO
  1970  03E0  120A  118A  2107  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1971  03E5  1283               	bcf	status, 6	;RP1=0, select bank0
  1972  03E6  1303               	movwf	(??_main+0)+0
  1973  03E7  00B8               	movf	(??_main+0)+0,w
  1974  03E8  0838               	movwf	(main@rest)
  1975  03E9  00C4               	line	76
  1976                           	
  1977                           l1823:	
  1978  03EA                     ;main.c: 76:                     if( rest == 'A' )
  1979                           		movlw	65
  1980  03EA  3041               	xorwf	((main@rest)),w
  1981  03EB  0644               	btfss	status,2
  1982  03EC  1D03               	goto	u781
  1983  03ED  2BEF               	goto	u780
  1984  03EE  2BF0               u781:
  1985  03EF                     	goto	l1827
  1986  03EF  2BF5               u780:
  1987  03F0                     	line	77
  1988                           	
  1989                           l1825:	
  1990  03F0                     ;main.c: 77:                         estado = 100;
  1991                           	movlw	064h
  1992  03F0  3064               	movwf	(main@estado)
  1993  03F1  00C2               	movlw	0
  1994  03F2  3000               	movwf	((main@estado))+1
  1995  03F3  00C3               	goto	l1963
  1996  03F4  2EA1               	line	78
  1997                           ;main.c: 78:                     else if( rest == 'B' )
  1998                           	
  1999                           l167:	
  2000  03F5                     	
  2001                           l1827:	
  2002  03F5                     		movlw	66
  2003  03F5  3042               	xorwf	((main@rest)),w
  2004  03F6  0644               	btfss	status,2
  2005  03F7  1D03               	goto	u791
  2006  03F8  2BFA               	goto	u790
  2007  03F9  2BFB               u791:
  2008  03FA                     	goto	l1831
  2009  03FA  2C00               u790:
  2010  03FB                     	line	79
  2011                           	
  2012                           l1829:	
  2013  03FB                     ;main.c: 79:                         estado = 110;
  2014                           	movlw	06Eh
  2015  03FB  306E               	movwf	(main@estado)
  2016  03FC  00C2               	movlw	0
  2017  03FD  3000               	movwf	((main@estado))+1
  2018  03FE  00C3               	goto	l1963
  2019  03FF  2EA1               	line	80
  2020                           ;main.c: 80:                     else if( rest == 'C' )
  2021                           	
  2022                           l169:	
  2023  0400                     	
  2024                           l1831:	
  2025  0400                     		movlw	67
  2026  0400  3043               	xorwf	((main@rest)),w
  2027  0401  0644               	btfss	status,2
  2028  0402  1D03               	goto	u801
  2029  0403  2C05               	goto	u800
  2030  0404  2C06               u801:
  2031  0405                     	goto	l1835
  2032  0405  2C0B               u800:
  2033  0406                     	line	81
  2034                           	
  2035                           l1833:	
  2036  0406                     ;main.c: 81:                         estado = 120;
  2037                           	movlw	078h
  2038  0406  3078               	movwf	(main@estado)
  2039  0407  00C2               	movlw	0
  2040  0408  3000               	movwf	((main@estado))+1
  2041  0409  00C3               	goto	l1963
  2042  040A  2EA1               	line	82
  2043                           ;main.c: 82:                     else if( rest == 'D' )
  2044                           	
  2045                           l171:	
  2046  040B                     	
  2047                           l1835:	
  2048  040B                     		movlw	68
  2049  040B  3044               	xorwf	((main@rest)),w
  2050  040C  0644               	btfss	status,2
  2051  040D  1D03               	goto	u811
  2052  040E  2C10               	goto	u810
  2053  040F  2C11               u811:
  2054  0410                     	goto	l1839
  2055  0410  2C16               u810:
  2056  0411                     	line	83
  2057                           	
  2058                           l1837:	
  2059  0411                     ;main.c: 83:                         estado = 130;
  2060                           	movlw	082h
  2061  0411  3082               	movwf	(main@estado)
  2062  0412  00C2               	movlw	0
  2063  0413  3000               	movwf	((main@estado))+1
  2064  0414  00C3               	goto	l1963
  2065  0415  2EA1               	line	84
  2066                           ;main.c: 84:                     else if( rest == '1' )
  2067                           	
  2068                           l173:	
  2069  0416                     	
  2070                           l1839:	
  2071  0416                     		movlw	49
  2072  0416  3031               	xorwf	((main@rest)),w
  2073  0417  0644               	btfss	status,2
  2074  0418  1D03               	goto	u821
  2075  0419  2C1B               	goto	u820
  2076  041A  2C1C               u821:
  2077  041B                     	goto	l1843
  2078  041B  2C21               u820:
  2079  041C                     	line	85
  2080                           	
  2081                           l1841:	
  2082  041C                     ;main.c: 85:                         estado = 140;
  2083                           	movlw	08Ch
  2084  041C  308C               	movwf	(main@estado)
  2085  041D  00C2               	movlw	0
  2086  041E  3000               	movwf	((main@estado))+1
  2087  041F  00C3               	goto	l1963
  2088  0420  2EA1               	line	86
  2089                           ;main.c: 86:                     else if( rest == '2' )
  2090                           	
  2091                           l175:	
  2092  0421                     	
  2093                           l1843:	
  2094  0421                     		movlw	50
  2095  0421  3032               	xorwf	((main@rest)),w
  2096  0422  0644               	btfss	status,2
  2097  0423  1D03               	goto	u831
  2098  0424  2C26               	goto	u830
  2099  0425  2C27               u831:
  2100  0426                     	goto	l1847
  2101  0426  2C2C               u830:
  2102  0427                     	line	87
  2103                           	
  2104                           l1845:	
  2105  0427                     ;main.c: 87:                         estado = 150;
  2106                           	movlw	096h
  2107  0427  3096               	movwf	(main@estado)
  2108  0428  00C2               	movlw	0
  2109  0429  3000               	movwf	((main@estado))+1
  2110  042A  00C3               	goto	l1963
  2111  042B  2EA1               	line	88
  2112                           ;main.c: 88:                     else if( rest == '3' )
  2113                           	
  2114                           l177:	
  2115  042C                     	
  2116                           l1847:	
  2117  042C                     		movlw	51
  2118  042C  3033               	xorwf	((main@rest)),w
  2119  042D  0644               	btfss	status,2
  2120  042E  1D03               	goto	u841
  2121  042F  2C31               	goto	u840
  2122  0430  2C32               u841:
  2123  0431                     	goto	l1851
  2124  0431  2C37               u840:
  2125  0432                     	line	89
  2126                           	
  2127                           l1849:	
  2128  0432                     ;main.c: 89:                         estado = 160;
  2129                           	movlw	0A0h
  2130  0432  30A0               	movwf	(main@estado)
  2131  0433  00C2               	movlw	0
  2132  0434  3000               	movwf	((main@estado))+1
  2133  0435  00C3               	goto	l1963
  2134  0436  2EA1               	line	90
  2135                           ;main.c: 90:                     else if( rest == '4' )
  2136                           	
  2137                           l179:	
  2138  0437                     	
  2139                           l1851:	
  2140  0437                     		movlw	52
  2141  0437  3034               	xorwf	((main@rest)),w
  2142  0438  0644               	btfss	status,2
  2143  0439  1D03               	goto	u851
  2144  043A  2C3C               	goto	u850
  2145  043B  2C3D               u851:
  2146  043C                     	goto	l1855
  2147  043C  2C42               u850:
  2148  043D                     	line	91
  2149                           	
  2150                           l1853:	
  2151  043D                     ;main.c: 91:                         estado = 170;
  2152                           	movlw	0AAh
  2153  043D  30AA               	movwf	(main@estado)
  2154  043E  00C2               	movlw	0
  2155  043F  3000               	movwf	((main@estado))+1
  2156  0440  00C3               	goto	l1963
  2157  0441  2EA1               	line	92
  2158                           ;main.c: 92:                     else if( rest == '5' )
  2159                           	
  2160                           l181:	
  2161  0442                     	
  2162                           l1855:	
  2163  0442                     		movlw	53
  2164  0442  3035               	xorwf	((main@rest)),w
  2165  0443  0644               	btfss	status,2
  2166  0444  1D03               	goto	u861
  2167  0445  2C47               	goto	u860
  2168  0446  2C48               u861:
  2169  0447                     	goto	l1859
  2170  0447  2C4D               u860:
  2171  0448                     	line	93
  2172                           	
  2173                           l1857:	
  2174  0448                     ;main.c: 93:                         estado = 180;
  2175                           	movlw	0B4h
  2176  0448  30B4               	movwf	(main@estado)
  2177  0449  00C2               	movlw	0
  2178  044A  3000               	movwf	((main@estado))+1
  2179  044B  00C3               	goto	l1963
  2180  044C  2EA1               	line	94
  2181                           ;main.c: 94:                     else if( rest == '6' )
  2182                           	
  2183                           l183:	
  2184  044D                     	
  2185                           l1859:	
  2186  044D                     		movlw	54
  2187  044D  3036               	xorwf	((main@rest)),w
  2188  044E  0644               	btfss	status,2
  2189  044F  1D03               	goto	u871
  2190  0450  2C52               	goto	u870
  2191  0451  2C53               u871:
  2192  0452                     	goto	l1863
  2193  0452  2C58               u870:
  2194  0453                     	line	95
  2195                           	
  2196                           l1861:	
  2197  0453                     ;main.c: 95:                         estado = 190;
  2198                           	movlw	0BEh
  2199  0453  30BE               	movwf	(main@estado)
  2200  0454  00C2               	movlw	0
  2201  0455  3000               	movwf	((main@estado))+1
  2202  0456  00C3               	goto	l1963
  2203  0457  2EA1               	line	96
  2204                           ;main.c: 96:                     else if( rest == '7' )
  2205                           	
  2206                           l185:	
  2207  0458                     	
  2208                           l1863:	
  2209  0458                     		movlw	55
  2210  0458  3037               	xorwf	((main@rest)),w
  2211  0459  0644               	btfss	status,2
  2212  045A  1D03               	goto	u881
  2213  045B  2C5D               	goto	u880
  2214  045C  2C5E               u881:
  2215  045D                     	goto	l1867
  2216  045D  2C63               u880:
  2217  045E                     	line	97
  2218                           	
  2219                           l1865:	
  2220  045E                     ;main.c: 97:                         estado = 200;
  2221                           	movlw	0C8h
  2222  045E  30C8               	movwf	(main@estado)
  2223  045F  00C2               	movlw	0
  2224  0460  3000               	movwf	((main@estado))+1
  2225  0461  00C3               	goto	l1963
  2226  0462  2EA1               	line	98
  2227                           ;main.c: 98:                     else if( rest == '8' )
  2228                           	
  2229                           l187:	
  2230  0463                     	
  2231                           l1867:	
  2232  0463                     		movlw	56
  2233  0463  3038               	xorwf	((main@rest)),w
  2234  0464  0644               	btfss	status,2
  2235  0465  1D03               	goto	u891
  2236  0466  2C68               	goto	u890
  2237  0467  2C69               u891:
  2238  0468                     	goto	l1871
  2239  0468  2C6E               u890:
  2240  0469                     	line	99
  2241                           	
  2242                           l1869:	
  2243  0469                     ;main.c: 99:                         estado = 210;
  2244                           	movlw	0D2h
  2245  0469  30D2               	movwf	(main@estado)
  2246  046A  00C2               	movlw	0
  2247  046B  3000               	movwf	((main@estado))+1
  2248  046C  00C3               	goto	l1963
  2249  046D  2EA1               	line	100
  2250                           ;main.c: 100:                     else if( rest == '9' )
  2251                           	
  2252                           l189:	
  2253  046E                     	
  2254                           l1871:	
  2255  046E                     		movlw	57
  2256  046E  3039               	xorwf	((main@rest)),w
  2257  046F  0644               	btfss	status,2
  2258  0470  1D03               	goto	u901
  2259  0471  2C73               	goto	u900
  2260  0472  2C74               u901:
  2261  0473                     	goto	l1875
  2262  0473  2C79               u900:
  2263  0474                     	line	101
  2264                           	
  2265                           l1873:	
  2266  0474                     ;main.c: 101:                         estado = 220;
  2267                           	movlw	0DCh
  2268  0474  30DC               	movwf	(main@estado)
  2269  0475  00C2               	movlw	0
  2270  0476  3000               	movwf	((main@estado))+1
  2271  0477  00C3               	goto	l1963
  2272  0478  2EA1               	line	102
  2273                           ;main.c: 102:                     else if( rest == 'a' )
  2274                           	
  2275                           l191:	
  2276  0479                     	
  2277                           l1875:	
  2278  0479                     		movlw	97
  2279  0479  3061               	xorwf	((main@rest)),w
  2280  047A  0644               	btfss	status,2
  2281  047B  1D03               	goto	u911
  2282  047C  2C7E               	goto	u910
  2283  047D  2C7F               u911:
  2284  047E                     	goto	l1879
  2285  047E  2C84               u910:
  2286  047F                     	line	103
  2287                           	
  2288                           l1877:	
  2289  047F                     ;main.c: 103:                         estado = 230;
  2290                           	movlw	0E6h
  2291  047F  30E6               	movwf	(main@estado)
  2292  0480  00C2               	movlw	0
  2293  0481  3000               	movwf	((main@estado))+1
  2294  0482  00C3               	goto	l1963
  2295  0483  2EA1               	line	104
  2296                           ;main.c: 104:                     else if( rest == 'b' )
  2297                           	
  2298                           l193:	
  2299  0484                     	
  2300                           l1879:	
  2301  0484                     		movlw	98
  2302  0484  3062               	xorwf	((main@rest)),w
  2303  0485  0644               	btfss	status,2
  2304  0486  1D03               	goto	u921
  2305  0487  2C89               	goto	u920
  2306  0488  2C8A               u921:
  2307  0489                     	goto	l1883
  2308  0489  2C8F               u920:
  2309  048A                     	line	105
  2310                           	
  2311                           l1881:	
  2312  048A                     ;main.c: 105:                         estado = 240;
  2313                           	movlw	0F0h
  2314  048A  30F0               	movwf	(main@estado)
  2315  048B  00C2               	movlw	0
  2316  048C  3000               	movwf	((main@estado))+1
  2317  048D  00C3               	goto	l1963
  2318  048E  2EA1               	line	106
  2319                           ;main.c: 106:                     else if( rest == 'c' )
  2320                           	
  2321                           l195:	
  2322  048F                     	
  2323                           l1883:	
  2324  048F                     		movlw	99
  2325  048F  3063               	xorwf	((main@rest)),w
  2326  0490  0644               	btfss	status,2
  2327  0491  1D03               	goto	u931
  2328  0492  2C94               	goto	u930
  2329  0493  2C95               u931:
  2330  0494                     	goto	l1887
  2331  0494  2C9A               u930:
  2332  0495                     	line	107
  2333                           	
  2334                           l1885:	
  2335  0495                     ;main.c: 107:                         estado = 250;
  2336                           	movlw	0FAh
  2337  0495  30FA               	movwf	(main@estado)
  2338  0496  00C2               	movlw	0
  2339  0497  3000               	movwf	((main@estado))+1
  2340  0498  00C3               	goto	l1963
  2341  0499  2EA1               	line	108
  2342                           ;main.c: 108:                     else if( rest == 'd' )
  2343                           	
  2344                           l197:	
  2345  049A                     	
  2346                           l1887:	
  2347  049A                     		movlw	100
  2348  049A  3064               	xorwf	((main@rest)),w
  2349  049B  0644               	btfss	status,2
  2350  049C  1D03               	goto	u941
  2351  049D  2C9F               	goto	u940
  2352  049E  2CA0               u941:
  2353  049F                     	goto	l1963
  2354  049F  2EA1               u940:
  2355  04A0                     	line	109
  2356                           	
  2357                           l1889:	
  2358  04A0                     ;main.c: 109:                         estado = 260;
  2359                           	movlw	04h
  2360  04A0  3004               	movwf	(main@estado)
  2361  04A1  00C2               	movlw	01h
  2362  04A2  3001               	movwf	((main@estado))+1
  2363  04A3  00C3               	goto	l1963
  2364  04A4  2EA1               	
  2365                           l199:	
  2366  04A5                     	goto	l1963
  2367  04A5  2EA1               	
  2368                           l198:	
  2369  04A6                     	goto	l1963
  2370  04A6  2EA1               	
  2371                           l196:	
  2372  04A7                     	goto	l1963
  2373  04A7  2EA1               	
  2374                           l194:	
  2375  04A8                     	goto	l1963
  2376  04A8  2EA1               	
  2377                           l192:	
  2378  04A9                     	goto	l1963
  2379  04A9  2EA1               	
  2380                           l190:	
  2381  04AA                     	goto	l1963
  2382  04AA  2EA1               	
  2383                           l188:	
  2384  04AB                     	goto	l1963
  2385  04AB  2EA1               	
  2386                           l186:	
  2387  04AC                     	goto	l1963
  2388  04AC  2EA1               	
  2389                           l184:	
  2390  04AD                     	goto	l1963
  2391  04AD  2EA1               	
  2392                           l182:	
  2393  04AE                     	goto	l1963
  2394  04AE  2EA1               	
  2395                           l180:	
  2396  04AF                     	goto	l1963
  2397  04AF  2EA1               	
  2398                           l178:	
  2399  04B0                     	goto	l1963
  2400  04B0  2EA1               	
  2401                           l176:	
  2402  04B1                     	goto	l1963
  2403  04B1  2EA1               	
  2404                           l174:	
  2405  04B2                     	goto	l1963
  2406  04B2  2EA1               	
  2407                           l172:	
  2408  04B3                     	goto	l1963
  2409  04B3  2EA1               	
  2410                           l170:	
  2411  04B4                     	goto	l1963
  2412  04B4  2EA1               	
  2413                           l168:	
  2414  04B5                     	line	110
  2415                           ;main.c: 110:                     break;
  2416                           	goto	l1963
  2417  04B5  2EA1               	line	111
  2418                           ;main.c: 111:             case 100:
  2419                           	
  2420                           l200:	
  2421  04B6                     	line	112
  2422                           ;main.c: 112:                     atuador.A = 1;
  2423                           	bsf	(main@atuador),0
  2424  04B6  143F               	line	113
  2425                           	
  2426                           l1891:	
  2427  04B7                     ;main.c: 113:                     estado = 101;
  2428                           	movlw	065h
  2429  04B7  3065               	movwf	(main@estado)
  2430  04B8  00C2               	movlw	0
  2431  04B9  3000               	movwf	((main@estado))+1
  2432  04BA  00C3               	line	114
  2433                           ;main.c: 114:                     break;
  2434                           	goto	l1963
  2435  04BB  2EA1               	line	115
  2436                           ;main.c: 115:             case 101:
  2437                           	
  2438                           l201:	
  2439  04BC                     	line	116
  2440                           ;main.c: 116:                     if( sensor.A1 == 1)
  2441                           	btfss	(main@sensor),0
  2442  04BC  1C40               	goto	u951
  2443  04BD  2CBF               	goto	u950
  2444  04BE  2CC0               u951:
  2445  04BF                     	goto	l1963
  2446  04BF  2EA1               u950:
  2447  04C0                     	line	117
  2448                           	
  2449                           l1893:	
  2450  04C0                     ;main.c: 117:                         estado = 10;
  2451                           	movlw	0Ah
  2452  04C0  300A               	movwf	(main@estado)
  2453  04C1  00C2               	movlw	0
  2454  04C2  3000               	movwf	((main@estado))+1
  2455  04C3  00C3               	goto	l1963
  2456  04C4  2EA1               	
  2457                           l202:	
  2458  04C5                     	line	118
  2459                           ;main.c: 118:                     break;
  2460                           	goto	l1963
  2461  04C5  2EA1               	line	119
  2462                           ;main.c: 119:             case 110:
  2463                           	
  2464                           l203:	
  2465  04C6                     	line	120
  2466                           ;main.c: 120:                     atuador.B = 1;
  2467                           	bsf	(main@atuador),1
  2468  04C6  14BF               	line	121
  2469                           	
  2470                           l1895:	
  2471  04C7                     ;main.c: 121:                     estado = 111;
  2472                           	movlw	06Fh
  2473  04C7  306F               	movwf	(main@estado)
  2474  04C8  00C2               	movlw	0
  2475  04C9  3000               	movwf	((main@estado))+1
  2476  04CA  00C3               	line	122
  2477                           ;main.c: 122:                     break;
  2478                           	goto	l1963
  2479  04CB  2EA1               	line	123
  2480                           ;main.c: 123:             case 111:
  2481                           	
  2482                           l204:	
  2483  04CC                     	line	124
  2484                           ;main.c: 124:                     if( sensor.B1 == 1)
  2485                           	btfss	(main@sensor),2
  2486  04CC  1D40               	goto	u961
  2487  04CD  2CCF               	goto	u960
  2488  04CE  2CD0               u961:
  2489  04CF                     	goto	l1963
  2490  04CF  2EA1               u960:
  2491  04D0                     	line	125
  2492                           	
  2493                           l1897:	
  2494  04D0                     ;main.c: 125:                         estado = 10;
  2495                           	movlw	0Ah
  2496  04D0  300A               	movwf	(main@estado)
  2497  04D1  00C2               	movlw	0
  2498  04D2  3000               	movwf	((main@estado))+1
  2499  04D3  00C3               	goto	l1963
  2500  04D4  2EA1               	
  2501                           l205:	
  2502  04D5                     	line	126
  2503                           ;main.c: 126:                     break;
  2504                           	goto	l1963
  2505  04D5  2EA1               	line	127
  2506                           ;main.c: 127:             case 120:
  2507                           	
  2508                           l206:	
  2509  04D6                     	line	128
  2510                           ;main.c: 128:                     atuador.C = 1;
  2511                           	bsf	(main@atuador),2
  2512  04D6  153F               	line	129
  2513                           	
  2514                           l1899:	
  2515  04D7                     ;main.c: 129:                     estado = 121;
  2516                           	movlw	079h
  2517  04D7  3079               	movwf	(main@estado)
  2518  04D8  00C2               	movlw	0
  2519  04D9  3000               	movwf	((main@estado))+1
  2520  04DA  00C3               	line	130
  2521                           ;main.c: 130:                     break;
  2522                           	goto	l1963
  2523  04DB  2EA1               	line	131
  2524                           ;main.c: 131:             case 121:
  2525                           	
  2526                           l207:	
  2527  04DC                     	line	132
  2528                           ;main.c: 132:                     if( sensor.C1 == 1)
  2529                           	btfss	(main@sensor),4
  2530  04DC  1E40               	goto	u971
  2531  04DD  2CDF               	goto	u970
  2532  04DE  2CE0               u971:
  2533  04DF                     	goto	l1963
  2534  04DF  2EA1               u970:
  2535  04E0                     	line	133
  2536                           	
  2537                           l1901:	
  2538  04E0                     ;main.c: 133:                         estado = 10;
  2539                           	movlw	0Ah
  2540  04E0  300A               	movwf	(main@estado)
  2541  04E1  00C2               	movlw	0
  2542  04E2  3000               	movwf	((main@estado))+1
  2543  04E3  00C3               	goto	l1963
  2544  04E4  2EA1               	
  2545                           l208:	
  2546  04E5                     	line	134
  2547                           ;main.c: 134:                     break;
  2548                           	goto	l1963
  2549  04E5  2EA1               	line	135
  2550                           ;main.c: 135:             case 130:
  2551                           	
  2552                           l209:	
  2553  04E6                     	line	136
  2554                           ;main.c: 136:                     atuador.D = 1;
  2555                           	bsf	(main@atuador),3
  2556  04E6  15BF               	line	137
  2557                           	
  2558                           l1903:	
  2559  04E7                     ;main.c: 137:                     estado = 131;
  2560                           	movlw	083h
  2561  04E7  3083               	movwf	(main@estado)
  2562  04E8  00C2               	movlw	0
  2563  04E9  3000               	movwf	((main@estado))+1
  2564  04EA  00C3               	line	138
  2565                           ;main.c: 138:                     break;
  2566                           	goto	l1963
  2567  04EB  2EA1               	line	139
  2568                           ;main.c: 139:             case 131:
  2569                           	
  2570                           l210:	
  2571  04EC                     	line	140
  2572                           ;main.c: 140:                     if( sensor.D1 == 1)
  2573                           	btfss	(main@sensor),6
  2574  04EC  1F40               	goto	u981
  2575  04ED  2CEF               	goto	u980
  2576  04EE  2CF0               u981:
  2577  04EF                     	goto	l1963
  2578  04EF  2EA1               u980:
  2579  04F0                     	line	141
  2580                           	
  2581                           l1905:	
  2582  04F0                     ;main.c: 141:                         estado = 10;
  2583                           	movlw	0Ah
  2584  04F0  300A               	movwf	(main@estado)
  2585  04F1  00C2               	movlw	0
  2586  04F2  3000               	movwf	((main@estado))+1
  2587  04F3  00C3               	goto	l1963
  2588  04F4  2EA1               	
  2589                           l211:	
  2590  04F5                     	line	142
  2591                           ;main.c: 142:                     break;
  2592                           	goto	l1963
  2593  04F5  2EA1               	line	143
  2594                           ;main.c: 143:             case 140:
  2595                           	
  2596                           l212:	
  2597  04F6                     	line	144
  2598                           	
  2599                           l1907:	
  2600  04F6                     ;main.c: 144:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2601                           	opt asmopt_push
  2602                           opt asmopt_off
  2603                           movlw  6
  2604  04F6  3006               	bcf	status, 5	;RP0=0, select bank0
  2605  04F7  1283               	bcf	status, 6	;RP1=0, select bank0
  2606  04F8  1303               movwf	((??_main+0)+0+2),f
  2607  04F9  00BA               movlw	19
  2608  04FA  3013               movwf	((??_main+0)+0+1),f
  2609  04FB  00B9               	movlw	173
  2610  04FC  30AD               movwf	((??_main+0)+0),f
  2611  04FD  00B8               	u1097:
  2612  04FE                     decfsz	((??_main+0)+0),f
  2613  04FE  0BB8               	goto	u1097
  2614  04FF  2CFE               	decfsz	((??_main+0)+0+1),f
  2615  0500  0BB9               	goto	u1097
  2616  0501  2CFE               	decfsz	((??_main+0)+0+2),f
  2617  0502  0BBA               	goto	u1097
  2618  0503  2CFE               opt asmopt_pop
  2619                           
  2620                           	line	145
  2621                           ;main.c: 145:                     estado = 141;
  2622                           	movlw	08Dh
  2623  0504  308D               	bcf	status, 5	;RP0=0, select bank0
  2624  0505  1283               	bcf	status, 6	;RP1=0, select bank0
  2625  0506  1303               	movwf	(main@estado)
  2626  0507  00C2               	movlw	0
  2627  0508  3000               	movwf	((main@estado))+1
  2628  0509  00C3               	line	146
  2629                           ;main.c: 146:                     break;
  2630                           	goto	l1963
  2631  050A  2EA1               	line	147
  2632                           ;main.c: 147:             case 141:
  2633                           	
  2634                           l213:	
  2635  050B                     	line	148
  2636                           	
  2637                           l1909:	
  2638  050B                     ;main.c: 148:                     estado = 10;
  2639                           	movlw	0Ah
  2640  050B  300A               	movwf	(main@estado)
  2641  050C  00C2               	movlw	0
  2642  050D  3000               	movwf	((main@estado))+1
  2643  050E  00C3               	line	149
  2644                           ;main.c: 149:                     break;
  2645                           	goto	l1963
  2646  050F  2EA1               	line	150
  2647                           ;main.c: 150:             case 150:
  2648                           	
  2649                           l214:	
  2650  0510                     	line	151
  2651                           	
  2652                           l1911:	
  2653  0510                     ;main.c: 151:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  2654                           	opt asmopt_push
  2655                           opt asmopt_off
  2656                           movlw  11
  2657  0510  300B               	bcf	status, 5	;RP0=0, select bank0
  2658  0511  1283               	bcf	status, 6	;RP1=0, select bank0
  2659  0512  1303               movwf	((??_main+0)+0+2),f
  2660  0513  00BA               movlw	38
  2661  0514  3026               movwf	((??_main+0)+0+1),f
  2662  0515  00B9               	movlw	93
  2663  0516  305D               movwf	((??_main+0)+0),f
  2664  0517  00B8               	u1107:
  2665  0518                     decfsz	((??_main+0)+0),f
  2666  0518  0BB8               	goto	u1107
  2667  0519  2D18               	decfsz	((??_main+0)+0+1),f
  2668  051A  0BB9               	goto	u1107
  2669  051B  2D18               	decfsz	((??_main+0)+0+2),f
  2670  051C  0BBA               	goto	u1107
  2671  051D  2D18               opt asmopt_pop
  2672                           
  2673                           	line	152
  2674                           ;main.c: 152:                     estado = 151;
  2675                           	movlw	097h
  2676  051E  3097               	bcf	status, 5	;RP0=0, select bank0
  2677  051F  1283               	bcf	status, 6	;RP1=0, select bank0
  2678  0520  1303               	movwf	(main@estado)
  2679  0521  00C2               	movlw	0
  2680  0522  3000               	movwf	((main@estado))+1
  2681  0523  00C3               	line	153
  2682                           ;main.c: 153:                     break;
  2683                           	goto	l1963
  2684  0524  2EA1               	line	154
  2685                           ;main.c: 154:             case 151:
  2686                           	
  2687                           l215:	
  2688  0525                     	line	155
  2689                           	
  2690                           l1913:	
  2691  0525                     ;main.c: 155:                     estado = 10;
  2692                           	movlw	0Ah
  2693  0525  300A               	movwf	(main@estado)
  2694  0526  00C2               	movlw	0
  2695  0527  3000               	movwf	((main@estado))+1
  2696  0528  00C3               	line	156
  2697                           ;main.c: 156:                     break;
  2698                           	goto	l1963
  2699  0529  2EA1               	line	157
  2700                           ;main.c: 157:             case 160:
  2701                           	
  2702                           l216:	
  2703  052A                     	line	158
  2704                           	
  2705                           l1915:	
  2706  052A                     ;main.c: 158:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  2707                           	opt asmopt_push
  2708                           opt asmopt_off
  2709                           movlw  16
  2710  052A  3010               	bcf	status, 5	;RP0=0, select bank0
  2711  052B  1283               	bcf	status, 6	;RP1=0, select bank0
  2712  052C  1303               movwf	((??_main+0)+0+2),f
  2713  052D  00BA               movlw	57
  2714  052E  3039               movwf	((??_main+0)+0+1),f
  2715  052F  00B9               	movlw	13
  2716  0530  300D               movwf	((??_main+0)+0),f
  2717  0531  00B8               	u1117:
  2718  0532                     decfsz	((??_main+0)+0),f
  2719  0532  0BB8               	goto	u1117
  2720  0533  2D32               	decfsz	((??_main+0)+0+1),f
  2721  0534  0BB9               	goto	u1117
  2722  0535  2D32               	decfsz	((??_main+0)+0+2),f
  2723  0536  0BBA               	goto	u1117
  2724  0537  2D32               opt asmopt_pop
  2725                           
  2726                           	line	159
  2727                           ;main.c: 159:                     estado = 161;
  2728                           	movlw	0A1h
  2729  0538  30A1               	bcf	status, 5	;RP0=0, select bank0
  2730  0539  1283               	bcf	status, 6	;RP1=0, select bank0
  2731  053A  1303               	movwf	(main@estado)
  2732  053B  00C2               	movlw	0
  2733  053C  3000               	movwf	((main@estado))+1
  2734  053D  00C3               	line	160
  2735                           ;main.c: 160:                     break;
  2736                           	goto	l1963
  2737  053E  2EA1               	line	161
  2738                           ;main.c: 161:             case 161:
  2739                           	
  2740                           l217:	
  2741  053F                     	line	162
  2742                           	
  2743                           l1917:	
  2744  053F                     ;main.c: 162:                     estado = 10;
  2745                           	movlw	0Ah
  2746  053F  300A               	movwf	(main@estado)
  2747  0540  00C2               	movlw	0
  2748  0541  3000               	movwf	((main@estado))+1
  2749  0542  00C3               	line	163
  2750                           ;main.c: 163:                     break;
  2751                           	goto	l1963
  2752  0543  2EA1               	line	164
  2753                           ;main.c: 164:             case 170:
  2754                           	
  2755                           l218:	
  2756  0544                     	line	165
  2757                           	
  2758                           l1919:	
  2759  0544                     ;main.c: 165:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
  2760                           	opt asmopt_push
  2761                           opt asmopt_off
  2762                           movlw  21
  2763  0544  3015               	bcf	status, 5	;RP0=0, select bank0
  2764  0545  1283               	bcf	status, 6	;RP1=0, select bank0
  2765  0546  1303               movwf	((??_main+0)+0+2),f
  2766  0547  00BA               movlw	75
  2767  0548  304B               movwf	((??_main+0)+0+1),f
  2768  0549  00B9               	movlw	189
  2769  054A  30BD               movwf	((??_main+0)+0),f
  2770  054B  00B8               	u1127:
  2771  054C                     decfsz	((??_main+0)+0),f
  2772  054C  0BB8               	goto	u1127
  2773  054D  2D4C               	decfsz	((??_main+0)+0+1),f
  2774  054E  0BB9               	goto	u1127
  2775  054F  2D4C               	decfsz	((??_main+0)+0+2),f
  2776  0550  0BBA               	goto	u1127
  2777  0551  2D4C               	nop2
  2778  0552  2D53               opt asmopt_pop
  2779                           
  2780                           	line	166
  2781                           ;main.c: 166:                     estado = 171;
  2782                           	movlw	0ABh
  2783  0553  30AB               	bcf	status, 5	;RP0=0, select bank0
  2784  0554  1283               	bcf	status, 6	;RP1=0, select bank0
  2785  0555  1303               	movwf	(main@estado)
  2786  0556  00C2               	movlw	0
  2787  0557  3000               	movwf	((main@estado))+1
  2788  0558  00C3               	line	167
  2789                           ;main.c: 167:                     break;
  2790                           	goto	l1963
  2791  0559  2EA1               	line	168
  2792                           ;main.c: 168:             case 171:
  2793                           	
  2794                           l219:	
  2795  055A                     	line	169
  2796                           	
  2797                           l1921:	
  2798  055A                     ;main.c: 169:                     estado = 10;
  2799                           	movlw	0Ah
  2800  055A  300A               	movwf	(main@estado)
  2801  055B  00C2               	movlw	0
  2802  055C  3000               	movwf	((main@estado))+1
  2803  055D  00C3               	line	170
  2804                           ;main.c: 170:                     break;
  2805                           	goto	l1963
  2806  055E  2EA1               	line	171
  2807                           ;main.c: 171:             case 180:
  2808                           	
  2809                           l220:	
  2810  055F                     	line	172
  2811                           	
  2812                           l1923:	
  2813  055F                     ;main.c: 172:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
  2814                           	opt asmopt_push
  2815                           opt asmopt_off
  2816                           movlw  26
  2817  055F  301A               	bcf	status, 5	;RP0=0, select bank0
  2818  0560  1283               	bcf	status, 6	;RP1=0, select bank0
  2819  0561  1303               movwf	((??_main+0)+0+2),f
  2820  0562  00BA               movlw	94
  2821  0563  305E               movwf	((??_main+0)+0+1),f
  2822  0564  00B9               	movlw	109
  2823  0565  306D               movwf	((??_main+0)+0),f
  2824  0566  00B8               	u1137:
  2825  0567                     decfsz	((??_main+0)+0),f
  2826  0567  0BB8               	goto	u1137
  2827  0568  2D67               	decfsz	((??_main+0)+0+1),f
  2828  0569  0BB9               	goto	u1137
  2829  056A  2D67               	decfsz	((??_main+0)+0+2),f
  2830  056B  0BBA               	goto	u1137
  2831  056C  2D67               	nop2
  2832  056D  2D6E               opt asmopt_pop
  2833                           
  2834                           	line	173
  2835                           ;main.c: 173:                     estado = 181;
  2836                           	movlw	0B5h
  2837  056E  30B5               	bcf	status, 5	;RP0=0, select bank0
  2838  056F  1283               	bcf	status, 6	;RP1=0, select bank0
  2839  0570  1303               	movwf	(main@estado)
  2840  0571  00C2               	movlw	0
  2841  0572  3000               	movwf	((main@estado))+1
  2842  0573  00C3               	line	174
  2843                           ;main.c: 174:                     break;
  2844                           	goto	l1963
  2845  0574  2EA1               	line	175
  2846                           ;main.c: 175:             case 181:
  2847                           	
  2848                           l221:	
  2849  0575                     	line	176
  2850                           	
  2851                           l1925:	
  2852  0575                     ;main.c: 176:                     estado = 10;
  2853                           	movlw	0Ah
  2854  0575  300A               	movwf	(main@estado)
  2855  0576  00C2               	movlw	0
  2856  0577  3000               	movwf	((main@estado))+1
  2857  0578  00C3               	line	177
  2858                           ;main.c: 177:                     break;
  2859                           	goto	l1963
  2860  0579  2EA1               	line	178
  2861                           ;main.c: 178:             case 190:
  2862                           	
  2863                           l222:	
  2864  057A                     	line	179
  2865                           	
  2866                           l1927:	
  2867  057A                     ;main.c: 179:                     _delay((unsigned long)((6000)*(4000000/4000.0)));
  2868                           	opt asmopt_push
  2869                           opt asmopt_off
  2870                           movlw  31
  2871  057A  301F               	bcf	status, 5	;RP0=0, select bank0
  2872  057B  1283               	bcf	status, 6	;RP1=0, select bank0
  2873  057C  1303               movwf	((??_main+0)+0+2),f
  2874  057D  00BA               movlw	113
  2875  057E  3071               movwf	((??_main+0)+0+1),f
  2876  057F  00B9               	movlw	29
  2877  0580  301D               movwf	((??_main+0)+0),f
  2878  0581  00B8               	u1147:
  2879  0582                     decfsz	((??_main+0)+0),f
  2880  0582  0BB8               	goto	u1147
  2881  0583  2D82               	decfsz	((??_main+0)+0+1),f
  2882  0584  0BB9               	goto	u1147
  2883  0585  2D82               	decfsz	((??_main+0)+0+2),f
  2884  0586  0BBA               	goto	u1147
  2885  0587  2D82               	nop2
  2886  0588  2D89               opt asmopt_pop
  2887                           
  2888                           	line	180
  2889                           ;main.c: 180:                     estado = 191;
  2890                           	movlw	0BFh
  2891  0589  30BF               	bcf	status, 5	;RP0=0, select bank0
  2892  058A  1283               	bcf	status, 6	;RP1=0, select bank0
  2893  058B  1303               	movwf	(main@estado)
  2894  058C  00C2               	movlw	0
  2895  058D  3000               	movwf	((main@estado))+1
  2896  058E  00C3               	line	181
  2897                           ;main.c: 181:                     break;
  2898                           	goto	l1963
  2899  058F  2EA1               	line	182
  2900                           ;main.c: 182:             case 191:
  2901                           	
  2902                           l223:	
  2903  0590                     	line	183
  2904                           	
  2905                           l1929:	
  2906  0590                     ;main.c: 183:                     estado = 10;
  2907                           	movlw	0Ah
  2908  0590  300A               	movwf	(main@estado)
  2909  0591  00C2               	movlw	0
  2910  0592  3000               	movwf	((main@estado))+1
  2911  0593  00C3               	line	184
  2912                           ;main.c: 184:                     break;
  2913                           	goto	l1963
  2914  0594  2EA1               	line	185
  2915                           ;main.c: 185:             case 200:
  2916                           	
  2917                           l224:	
  2918  0595                     	line	186
  2919                           	
  2920                           l1931:	
  2921  0595                     ;main.c: 186:                     _delay((unsigned long)((7000)*(4000000/4000.0)));
  2922                           	opt asmopt_push
  2923                           opt asmopt_off
  2924                           movlw  36
  2925  0595  3024               	bcf	status, 5	;RP0=0, select bank0
  2926  0596  1283               	bcf	status, 6	;RP1=0, select bank0
  2927  0597  1303               movwf	((??_main+0)+0+2),f
  2928  0598  00BA               movlw	131
  2929  0599  3083               movwf	((??_main+0)+0+1),f
  2930  059A  00B9               	movlw	206
  2931  059B  30CE               movwf	((??_main+0)+0),f
  2932  059C  00B8               	u1157:
  2933  059D                     decfsz	((??_main+0)+0),f
  2934  059D  0BB8               	goto	u1157
  2935  059E  2D9D               	decfsz	((??_main+0)+0+1),f
  2936  059F  0BB9               	goto	u1157
  2937  05A0  2D9D               	decfsz	((??_main+0)+0+2),f
  2938  05A1  0BBA               	goto	u1157
  2939  05A2  2D9D               	nop
  2940  05A3  0000               opt asmopt_pop
  2941                           
  2942                           	line	187
  2943                           ;main.c: 187:                     estado = 201;
  2944                           	movlw	0C9h
  2945  05A4  30C9               	bcf	status, 5	;RP0=0, select bank0
  2946  05A5  1283               	bcf	status, 6	;RP1=0, select bank0
  2947  05A6  1303               	movwf	(main@estado)
  2948  05A7  00C2               	movlw	0
  2949  05A8  3000               	movwf	((main@estado))+1
  2950  05A9  00C3               	line	188
  2951                           ;main.c: 188:                     break;
  2952                           	goto	l1963
  2953  05AA  2EA1               	line	189
  2954                           ;main.c: 189:             case 201:
  2955                           	
  2956                           l225:	
  2957  05AB                     	line	190
  2958                           	
  2959                           l1933:	
  2960  05AB                     ;main.c: 190:                     estado = 10;
  2961                           	movlw	0Ah
  2962  05AB  300A               	movwf	(main@estado)
  2963  05AC  00C2               	movlw	0
  2964  05AD  3000               	movwf	((main@estado))+1
  2965  05AE  00C3               	line	191
  2966                           ;main.c: 191:                     break;
  2967                           	goto	l1963
  2968  05AF  2EA1               	line	192
  2969                           ;main.c: 192:             case 210:
  2970                           	
  2971                           l226:	
  2972  05B0                     	line	193
  2973                           	
  2974                           l1935:	
  2975  05B0                     ;main.c: 193:                     _delay((unsigned long)((8000)*(4000000/4000.0)));
  2976                           	opt asmopt_push
  2977                           opt asmopt_off
  2978                           movlw  41
  2979  05B0  3029               	bcf	status, 5	;RP0=0, select bank0
  2980  05B1  1283               	bcf	status, 6	;RP1=0, select bank0
  2981  05B2  1303               movwf	((??_main+0)+0+2),f
  2982  05B3  00BA               movlw	150
  2983  05B4  3096               movwf	((??_main+0)+0+1),f
  2984  05B5  00B9               	movlw	126
  2985  05B6  307E               movwf	((??_main+0)+0),f
  2986  05B7  00B8               	u1167:
  2987  05B8                     decfsz	((??_main+0)+0),f
  2988  05B8  0BB8               	goto	u1167
  2989  05B9  2DB8               	decfsz	((??_main+0)+0+1),f
  2990  05BA  0BB9               	goto	u1167
  2991  05BB  2DB8               	decfsz	((??_main+0)+0+2),f
  2992  05BC  0BBA               	goto	u1167
  2993  05BD  2DB8               	nop
  2994  05BE  0000               opt asmopt_pop
  2995                           
  2996                           	line	194
  2997                           ;main.c: 194:                     estado = 211;
  2998                           	movlw	0D3h
  2999  05BF  30D3               	bcf	status, 5	;RP0=0, select bank0
  3000  05C0  1283               	bcf	status, 6	;RP1=0, select bank0
  3001  05C1  1303               	movwf	(main@estado)
  3002  05C2  00C2               	movlw	0
  3003  05C3  3000               	movwf	((main@estado))+1
  3004  05C4  00C3               	line	195
  3005                           ;main.c: 195:                     break;
  3006                           	goto	l1963
  3007  05C5  2EA1               	line	196
  3008                           ;main.c: 196:             case 211:
  3009                           	
  3010                           l227:	
  3011  05C6                     	line	197
  3012                           	
  3013                           l1937:	
  3014  05C6                     ;main.c: 197:                     estado = 10;
  3015                           	movlw	0Ah
  3016  05C6  300A               	movwf	(main@estado)
  3017  05C7  00C2               	movlw	0
  3018  05C8  3000               	movwf	((main@estado))+1
  3019  05C9  00C3               	line	198
  3020                           ;main.c: 198:                     break;
  3021                           	goto	l1963
  3022  05CA  2EA1               	line	199
  3023                           ;main.c: 199:             case 220:
  3024                           	
  3025                           l228:	
  3026  05CB                     	line	200
  3027                           	
  3028                           l1939:	
  3029  05CB                     ;main.c: 200:                     _delay((unsigned long)((9000)*(4000000/4000.0)));
  3030                           	opt asmopt_push
  3031                           opt asmopt_off
  3032                           movlw  46
  3033  05CB  302E               	bcf	status, 5	;RP0=0, select bank0
  3034  05CC  1283               	bcf	status, 6	;RP1=0, select bank0
  3035  05CD  1303               movwf	((??_main+0)+0+2),f
  3036  05CE  00BA               movlw	169
  3037  05CF  30A9               movwf	((??_main+0)+0+1),f
  3038  05D0  00B9               	movlw	46
  3039  05D1  302E               movwf	((??_main+0)+0),f
  3040  05D2  00B8               	u1177:
  3041  05D3                     decfsz	((??_main+0)+0),f
  3042  05D3  0BB8               	goto	u1177
  3043  05D4  2DD3               	decfsz	((??_main+0)+0+1),f
  3044  05D5  0BB9               	goto	u1177
  3045  05D6  2DD3               	decfsz	((??_main+0)+0+2),f
  3046  05D7  0BBA               	goto	u1177
  3047  05D8  2DD3               	nop
  3048  05D9  0000               opt asmopt_pop
  3049                           
  3050                           	line	201
  3051                           ;main.c: 201:                     estado = 221;
  3052                           	movlw	0DDh
  3053  05DA  30DD               	bcf	status, 5	;RP0=0, select bank0
  3054  05DB  1283               	bcf	status, 6	;RP1=0, select bank0
  3055  05DC  1303               	movwf	(main@estado)
  3056  05DD  00C2               	movlw	0
  3057  05DE  3000               	movwf	((main@estado))+1
  3058  05DF  00C3               	line	202
  3059                           ;main.c: 202:                     break;
  3060                           	goto	l1963
  3061  05E0  2EA1               	line	203
  3062                           ;main.c: 203:             case 221:
  3063                           	
  3064                           l229:	
  3065  05E1                     	line	204
  3066                           	
  3067                           l1941:	
  3068  05E1                     ;main.c: 204:                     estado = 10;
  3069                           	movlw	0Ah
  3070  05E1  300A               	movwf	(main@estado)
  3071  05E2  00C2               	movlw	0
  3072  05E3  3000               	movwf	((main@estado))+1
  3073  05E4  00C3               	line	205
  3074                           ;main.c: 205:                     break;
  3075                           	goto	l1963
  3076  05E5  2EA1               	line	207
  3077                           ;main.c: 207:             case 230:
  3078                           	
  3079                           l230:	
  3080  05E6                     	line	208
  3081                           ;main.c: 208:                     atuador.A = 0;
  3082                           	bcf	(main@atuador),0
  3083  05E6  103F               	line	209
  3084                           	
  3085                           l1943:	
  3086  05E7                     ;main.c: 209:                     estado = 231;
  3087                           	movlw	0E7h
  3088  05E7  30E7               	movwf	(main@estado)
  3089  05E8  00C2               	movlw	0
  3090  05E9  3000               	movwf	((main@estado))+1
  3091  05EA  00C3               	line	210
  3092                           ;main.c: 210:                     break;
  3093                           	goto	l1963
  3094  05EB  2EA1               	line	211
  3095                           ;main.c: 211:             case 231:
  3096                           	
  3097                           l231:	
  3098  05EC                     	line	212
  3099                           ;main.c: 212:                     if( sensor.A0 == 1)
  3100                           	btfss	(main@sensor),1
  3101  05EC  1CC0               	goto	u991
  3102  05ED  2DEF               	goto	u990
  3103  05EE  2DF0               u991:
  3104  05EF                     	goto	l1963
  3105  05EF  2EA1               u990:
  3106  05F0                     	line	213
  3107                           	
  3108                           l1945:	
  3109  05F0                     ;main.c: 213:                         estado = 10;
  3110                           	movlw	0Ah
  3111  05F0  300A               	movwf	(main@estado)
  3112  05F1  00C2               	movlw	0
  3113  05F2  3000               	movwf	((main@estado))+1
  3114  05F3  00C3               	goto	l1963
  3115  05F4  2EA1               	
  3116                           l232:	
  3117  05F5                     	line	214
  3118                           ;main.c: 214:                     break;
  3119                           	goto	l1963
  3120  05F5  2EA1               	line	215
  3121                           ;main.c: 215:             case 240:
  3122                           	
  3123                           l233:	
  3124  05F6                     	line	216
  3125                           ;main.c: 216:                     atuador.B = 0;
  3126                           	bcf	(main@atuador),1
  3127  05F6  10BF               	line	217
  3128                           	
  3129                           l1947:	
  3130  05F7                     ;main.c: 217:                     estado = 241;
  3131                           	movlw	0F1h
  3132  05F7  30F1               	movwf	(main@estado)
  3133  05F8  00C2               	movlw	0
  3134  05F9  3000               	movwf	((main@estado))+1
  3135  05FA  00C3               	line	218
  3136                           ;main.c: 218:                     break;
  3137                           	goto	l1963
  3138  05FB  2EA1               	line	219
  3139                           ;main.c: 219:             case 241:
  3140                           	
  3141                           l234:	
  3142  05FC                     	line	220
  3143                           ;main.c: 220:                     if( sensor.B0 == 1)
  3144                           	btfss	(main@sensor),3
  3145  05FC  1DC0               	goto	u1001
  3146  05FD  2DFF               	goto	u1000
  3147  05FE  2E00               u1001:
  3148  05FF                     	goto	l1963
  3149  05FF  2EA1               u1000:
  3150  0600                     	line	221
  3151                           	
  3152                           l1949:	
  3153  0600                     ;main.c: 221:                         estado = 10;
  3154                           	movlw	0Ah
  3155  0600  300A               	movwf	(main@estado)
  3156  0601  00C2               	movlw	0
  3157  0602  3000               	movwf	((main@estado))+1
  3158  0603  00C3               	goto	l1963
  3159  0604  2EA1               	
  3160                           l235:	
  3161  0605                     	line	222
  3162                           ;main.c: 222:                     break;
  3163                           	goto	l1963
  3164  0605  2EA1               	line	223
  3165                           ;main.c: 223:             case 250:
  3166                           	
  3167                           l236:	
  3168  0606                     	line	224
  3169                           ;main.c: 224:                     atuador.C = 0;
  3170                           	bcf	(main@atuador),2
  3171  0606  113F               	line	225
  3172                           	
  3173                           l1951:	
  3174  0607                     ;main.c: 225:                     estado = 251;
  3175                           	movlw	0FBh
  3176  0607  30FB               	movwf	(main@estado)
  3177  0608  00C2               	movlw	0
  3178  0609  3000               	movwf	((main@estado))+1
  3179  060A  00C3               	line	226
  3180                           ;main.c: 226:                     break;
  3181                           	goto	l1963
  3182  060B  2EA1               	line	227
  3183                           ;main.c: 227:             case 251:
  3184                           	
  3185                           l237:	
  3186  060C                     	line	228
  3187                           ;main.c: 228:                     if( sensor.C0 == 1)
  3188                           	btfss	(main@sensor),5
  3189  060C  1EC0               	goto	u1011
  3190  060D  2E0F               	goto	u1010
  3191  060E  2E10               u1011:
  3192  060F                     	goto	l1963
  3193  060F  2EA1               u1010:
  3194  0610                     	line	229
  3195                           	
  3196                           l1953:	
  3197  0610                     ;main.c: 229:                         estado = 10;
  3198                           	movlw	0Ah
  3199  0610  300A               	movwf	(main@estado)
  3200  0611  00C2               	movlw	0
  3201  0612  3000               	movwf	((main@estado))+1
  3202  0613  00C3               	goto	l1963
  3203  0614  2EA1               	
  3204                           l238:	
  3205  0615                     	line	230
  3206                           ;main.c: 230:                     break;
  3207                           	goto	l1963
  3208  0615  2EA1               	line	231
  3209                           ;main.c: 231:             case 260:
  3210                           	
  3211                           l239:	
  3212  0616                     	line	232
  3213                           ;main.c: 232:                     atuador.D = 0;
  3214                           	bcf	(main@atuador),3
  3215  0616  11BF               	line	233
  3216                           	
  3217                           l1955:	
  3218  0617                     ;main.c: 233:                     estado = 261;
  3219                           	movlw	05h
  3220  0617  3005               	movwf	(main@estado)
  3221  0618  00C2               	movlw	01h
  3222  0619  3001               	movwf	((main@estado))+1
  3223  061A  00C3               	line	234
  3224                           ;main.c: 234:                     break;
  3225                           	goto	l1963
  3226  061B  2EA1               	line	235
  3227                           ;main.c: 235:             case 261:
  3228                           	
  3229                           l240:	
  3230  061C                     	line	236
  3231                           ;main.c: 236:                     if( sensor.D0 == 1)
  3232                           	btfss	(main@sensor),7
  3233  061C  1FC0               	goto	u1021
  3234  061D  2E1F               	goto	u1020
  3235  061E  2E20               u1021:
  3236  061F                     	goto	l1963
  3237  061F  2EA1               u1020:
  3238  0620                     	line	237
  3239                           	
  3240                           l1957:	
  3241  0620                     ;main.c: 237:                         estado = 10;
  3242                           	movlw	0Ah
  3243  0620  300A               	movwf	(main@estado)
  3244  0621  00C2               	movlw	0
  3245  0622  3000               	movwf	((main@estado))+1
  3246  0623  00C3               	goto	l1963
  3247  0624  2EA1               	
  3248                           l241:	
  3249  0625                     	line	238
  3250                           ;main.c: 238:                     break;
  3251                           	goto	l1963
  3252  0625  2EA1               	line	240
  3253                           	
  3254                           l1959:	
  3255  0626                     ;main.c: 240:         }
  3256                           	goto	l1963
  3257  0626  2EA1               	
  3258                           l163:	
  3259  0627                     	
  3260                           l1961:	
  3261  0627                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  3262                           ; Switch size 1, requested type "space"
  3263                           ; Number of cases is 2, Range of values is 0 to 1
  3264                           ; switch strategies available:
  3265                           ; Name         Instructions Cycles
  3266                           ; simple_byte            7     4 (average)
  3267                           ; direct_byte           14     8 (fixed)
  3268                           ; jumptable            260     6 (fixed)
  3269                           ;	Chosen strategy is simple_byte
  3270                           
  3271                           	bcf	status, 5	;RP0=0, select bank0
  3272  0627  1283               	bcf	status, 6	;RP1=0, select bank0
  3273  0628  1303               	movf (main@estado+1),w
  3274  0629  0843               	opt asmopt_push
  3275                           	opt asmopt_off
  3276                           	xorlw	0^0	; case 0
  3277  062A  3A00               	skipnz
  3278  062B  1903               	goto	l2177
  3279  062C  2E31               	xorlw	1^0	; case 1
  3280  062D  3A01               	skipnz
  3281  062E  1903               	goto	l2179
  3282  062F  2E99               	goto	l1963
  3283  0630  2EA1               	opt asmopt_pop
  3284                           	
  3285                           l2177:	
  3286  0631                     ; Switch size 1, requested type "space"
  3287                           ; Number of cases is 34, Range of values is 0 to 251
  3288                           ; switch strategies available:
  3289                           ; Name         Instructions Cycles
  3290                           ; simple_byte          103    52 (average)
  3291                           ; jumptable            260     6 (fixed)
  3292                           ;	Chosen strategy is simple_byte
  3293                           
  3294                           	movf (main@estado),w
  3295  0631  0842               	opt asmopt_push
  3296                           	opt asmopt_off
  3297                           	xorlw	0^0	; case 0
  3298  0632  3A00               	skipnz
  3299  0633  1903               	goto	l1819
  3300  0634  2BD9               	xorlw	10^0	; case 10
  3301  0635  3A0A               	skipnz
  3302  0636  1903               	goto	l1821
  3303  0637  2BE0               	xorlw	100^10	; case 100
  3304  0638  3A6E               	skipnz
  3305  0639  1903               	goto	l200
  3306  063A  2CB6               	xorlw	101^100	; case 101
  3307  063B  3A01               	skipnz
  3308  063C  1903               	goto	l201
  3309  063D  2CBC               	xorlw	110^101	; case 110
  3310  063E  3A0B               	skipnz
  3311  063F  1903               	goto	l203
  3312  0640  2CC6               	xorlw	111^110	; case 111
  3313  0641  3A01               	skipnz
  3314  0642  1903               	goto	l204
  3315  0643  2CCC               	xorlw	120^111	; case 120
  3316  0644  3A17               	skipnz
  3317  0645  1903               	goto	l206
  3318  0646  2CD6               	xorlw	121^120	; case 121
  3319  0647  3A01               	skipnz
  3320  0648  1903               	goto	l207
  3321  0649  2CDC               	xorlw	130^121	; case 130
  3322  064A  3AFB               	skipnz
  3323  064B  1903               	goto	l209
  3324  064C  2CE6               	xorlw	131^130	; case 131
  3325  064D  3A01               	skipnz
  3326  064E  1903               	goto	l210
  3327  064F  2CEC               	xorlw	140^131	; case 140
  3328  0650  3A0F               	skipnz
  3329  0651  1903               	goto	l1907
  3330  0652  2CF6               	xorlw	141^140	; case 141
  3331  0653  3A01               	skipnz
  3332  0654  1903               	goto	l1909
  3333  0655  2D0B               	xorlw	150^141	; case 150
  3334  0656  3A1B               	skipnz
  3335  0657  1903               	goto	l1911
  3336  0658  2D10               	xorlw	151^150	; case 151
  3337  0659  3A01               	skipnz
  3338  065A  1903               	goto	l1913
  3339  065B  2D25               	xorlw	160^151	; case 160
  3340  065C  3A37               	skipnz
  3341  065D  1903               	goto	l1915
  3342  065E  2D2A               	xorlw	161^160	; case 161
  3343  065F  3A01               	skipnz
  3344  0660  1903               	goto	l1917
  3345  0661  2D3F               	xorlw	170^161	; case 170
  3346  0662  3A0B               	skipnz
  3347  0663  1903               	goto	l1919
  3348  0664  2D44               	xorlw	171^170	; case 171
  3349  0665  3A01               	skipnz
  3350  0666  1903               	goto	l1921
  3351  0667  2D5A               	xorlw	180^171	; case 180
  3352  0668  3A1F               	skipnz
  3353  0669  1903               	goto	l1923
  3354  066A  2D5F               	xorlw	181^180	; case 181
  3355  066B  3A01               	skipnz
  3356  066C  1903               	goto	l1925
  3357  066D  2D75               	xorlw	190^181	; case 190
  3358  066E  3A0B               	skipnz
  3359  066F  1903               	goto	l1927
  3360  0670  2D7A               	xorlw	191^190	; case 191
  3361  0671  3A01               	skipnz
  3362  0672  1903               	goto	l1929
  3363  0673  2D90               	xorlw	200^191	; case 200
  3364  0674  3A77               	skipnz
  3365  0675  1903               	goto	l1931
  3366  0676  2D95               	xorlw	201^200	; case 201
  3367  0677  3A01               	skipnz
  3368  0678  1903               	goto	l1933
  3369  0679  2DAB               	xorlw	210^201	; case 210
  3370  067A  3A1B               	skipnz
  3371  067B  1903               	goto	l1935
  3372  067C  2DB0               	xorlw	211^210	; case 211
  3373  067D  3A01               	skipnz
  3374  067E  1903               	goto	l1937
  3375  067F  2DC6               	xorlw	220^211	; case 220
  3376  0680  3A0F               	skipnz
  3377  0681  1903               	goto	l1939
  3378  0682  2DCB               	xorlw	221^220	; case 221
  3379  0683  3A01               	skipnz
  3380  0684  1903               	goto	l1941
  3381  0685  2DE1               	xorlw	230^221	; case 230
  3382  0686  3A3B               	skipnz
  3383  0687  1903               	goto	l230
  3384  0688  2DE6               	xorlw	231^230	; case 231
  3385  0689  3A01               	skipnz
  3386  068A  1903               	goto	l231
  3387  068B  2DEC               	xorlw	240^231	; case 240
  3388  068C  3A17               	skipnz
  3389  068D  1903               	goto	l233
  3390  068E  2DF6               	xorlw	241^240	; case 241
  3391  068F  3A01               	skipnz
  3392  0690  1903               	goto	l234
  3393  0691  2DFC               	xorlw	250^241	; case 250
  3394  0692  3A0B               	skipnz
  3395  0693  1903               	goto	l236
  3396  0694  2E06               	xorlw	251^250	; case 251
  3397  0695  3A01               	skipnz
  3398  0696  1903               	goto	l237
  3399  0697  2E0C               	goto	l1963
  3400  0698  2EA1               	opt asmopt_pop
  3401                           	
  3402                           l2179:	
  3403  0699                     ; Switch size 1, requested type "space"
  3404                           ; Number of cases is 2, Range of values is 4 to 5
  3405                           ; switch strategies available:
  3406                           ; Name         Instructions Cycles
  3407                           ; simple_byte            7     4 (average)
  3408                           ; direct_byte           17    11 (fixed)
  3409                           ; jumptable            263     9 (fixed)
  3410                           ;	Chosen strategy is simple_byte
  3411                           
  3412                           	movf (main@estado),w
  3413  0699  0842               	opt asmopt_push
  3414                           	opt asmopt_off
  3415                           	xorlw	4^0	; case 4
  3416  069A  3A04               	skipnz
  3417  069B  1903               	goto	l239
  3418  069C  2E16               	xorlw	5^4	; case 5
  3419  069D  3A01               	skipnz
  3420  069E  1903               	goto	l240
  3421  069F  2E1C               	goto	l1963
  3422  06A0  2EA1               	opt asmopt_pop
  3423                           
  3424                           	
  3425                           l165:	
  3426  06A1                     	line	241
  3427                           	
  3428                           l1963:	
  3429  06A1                     ;main.c: 241:         if( currentKey() && !previousKey() )
  3430                           	fcall	_currentKey
  3431  06A1  120A  118A  20A9  120A  118A  	xorlw	0
  3432  06A6  3A00               	skipnz
  3433  06A7  1903               	goto	u1031
  3434  06A8  2EAA               	goto	u1030
  3435  06A9  2EAB               u1031:
  3436  06AA                     	goto	l2031
  3437  06AA  2FE7               u1030:
  3438  06AB                     	
  3439                           l1965:	
  3440  06AB                     	fcall	_previousKey
  3441  06AB  120A  118A  20AE  120A  118A  	xorlw	0
  3442  06B0  3A00               	skipz
  3443  06B1  1D03               	goto	u1041
  3444  06B2  2EB4               	goto	u1040
  3445  06B3  2EB5               u1041:
  3446  06B4                     	goto	l2031
  3447  06B4  2FE7               u1040:
  3448  06B5                     	line	243
  3449                           	
  3450                           l1967:	
  3451  06B5                     ;main.c: 242:         {;main.c: 243:             tecla = currentKey();
  3452                           	fcall	_currentKey
  3453  06B5  120A  118A  20A9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3454  06BA  1283               	bcf	status, 6	;RP1=0, select bank0
  3455  06BB  1303               	movwf	(??_main+0)+0
  3456  06BC  00B8               	movf	(??_main+0)+0,w
  3457  06BD  0838               	movwf	(main@tecla)
  3458  06BE  00C1               	line	244
  3459                           ;main.c: 244:             switch(tecla)
  3460                           	goto	l2027
  3461  06BF  2F9C               	line	246
  3462                           ;main.c: 245:             {;main.c: 246:                 case 'A':
  3463                           	
  3464                           l244:	
  3465  06C0                     	line	247
  3466                           	
  3467                           l1969:	
  3468  06C0                     ;main.c: 247:                         ++a;
  3469                           	movlw	low(01h)
  3470  06C0  3001               	movwf	(??_main+0)+0
  3471  06C1  00B8               	movf	(??_main+0)+0,w
  3472  06C2  0838               	addwf	(main@a),f
  3473  06C3  07BB               	line	248
  3474                           	
  3475                           l1971:	
  3476  06C4                     ;main.c: 248:                         if( a % 2 )
  3477                           	btfss	(main@a),(0)&7
  3478  06C4  1C3B               	goto	u1051
  3479  06C5  2EC7               	goto	u1050
  3480  06C6  2EC8               u1051:
  3481  06C7                     	goto	l1975
  3482  06C7  2ECF               u1050:
  3483  06C8                     	line	249
  3484                           	
  3485                           l1973:	
  3486  06C8                     ;main.c: 249:                             putFIFO( tecla );
  3487                           	movf	(main@tecla),w
  3488  06C8  0841               	fcall	_putFIFO
  3489  06C9  120A  118A  20D3  120A  118A  	goto	l2029
  3490  06CE  2FD6               	line	250
  3491                           ;main.c: 250:                         else
  3492                           	
  3493                           l245:	
  3494  06CF                     	line	251
  3495                           	
  3496                           l1975:	
  3497  06CF                     ;main.c: 251:                             putFIFO( tecla | 0x20 );
  3498                           	bcf	status, 5	;RP0=0, select bank0
  3499  06CF  1283               	bcf	status, 6	;RP1=0, select bank0
  3500  06D0  1303               	movf	(main@tecla),w
  3501  06D1  0841               	iorlw	020h
  3502  06D2  3820               	fcall	_putFIFO
  3503  06D3  120A  118A  20D3  120A  118A  	goto	l2029
  3504  06D8  2FD6               	
  3505                           l246:	
  3506  06D9                     	line	252
  3507                           ;main.c: 252:                         break;
  3508                           	goto	l2029
  3509  06D9  2FD6               	line	253
  3510                           ;main.c: 253:                 case 'B':
  3511                           	
  3512                           l248:	
  3513  06DA                     	line	254
  3514                           	
  3515                           l1977:	
  3516  06DA                     ;main.c: 254:                         ++b;
  3517                           	movlw	low(01h)
  3518  06DA  3001               	bcf	status, 5	;RP0=0, select bank0
  3519  06DB  1283               	bcf	status, 6	;RP1=0, select bank0
  3520  06DC  1303               	movwf	(??_main+0)+0
  3521  06DD  00B8               	movf	(??_main+0)+0,w
  3522  06DE  0838               	addwf	(main@b),f
  3523  06DF  07BC               	line	255
  3524                           	
  3525                           l1979:	
  3526  06E0                     ;main.c: 255:                         if( b % 2 )
  3527                           	btfss	(main@b),(0)&7
  3528  06E0  1C3C               	goto	u1061
  3529  06E1  2EE3               	goto	u1060
  3530  06E2  2EE4               u1061:
  3531  06E3                     	goto	l1983
  3532  06E3  2EEB               u1060:
  3533  06E4                     	line	256
  3534                           	
  3535                           l1981:	
  3536  06E4                     ;main.c: 256:                             putFIFO( tecla );
  3537                           	movf	(main@tecla),w
  3538  06E4  0841               	fcall	_putFIFO
  3539  06E5  120A  118A  20D3  120A  118A  	goto	l2029
  3540  06EA  2FD6               	line	257
  3541                           ;main.c: 257:                         else
  3542                           	
  3543                           l249:	
  3544  06EB                     	line	258
  3545                           	
  3546                           l1983:	
  3547  06EB                     ;main.c: 258:                             putFIFO( tecla | 0x20 );
  3548                           	bcf	status, 5	;RP0=0, select bank0
  3549  06EB  1283               	bcf	status, 6	;RP1=0, select bank0
  3550  06EC  1303               	movf	(main@tecla),w
  3551  06ED  0841               	iorlw	020h
  3552  06EE  3820               	fcall	_putFIFO
  3553  06EF  120A  118A  20D3  120A  118A  	goto	l2029
  3554  06F4  2FD6               	
  3555                           l250:	
  3556  06F5                     	line	259
  3557                           ;main.c: 259:                         break;
  3558                           	goto	l2029
  3559  06F5  2FD6               	line	260
  3560                           ;main.c: 260:                 case 'C':
  3561                           	
  3562                           l251:	
  3563  06F6                     	line	261
  3564                           	
  3565                           l1985:	
  3566  06F6                     ;main.c: 261:                         ++c;
  3567                           	movlw	low(01h)
  3568  06F6  3001               	bcf	status, 5	;RP0=0, select bank0
  3569  06F7  1283               	bcf	status, 6	;RP1=0, select bank0
  3570  06F8  1303               	movwf	(??_main+0)+0
  3571  06F9  00B8               	movf	(??_main+0)+0,w
  3572  06FA  0838               	addwf	(main@c),f
  3573  06FB  07BD               	line	262
  3574                           	
  3575                           l1987:	
  3576  06FC                     ;main.c: 262:                         if( c % 2 )
  3577                           	btfss	(main@c),(0)&7
  3578  06FC  1C3D               	goto	u1071
  3579  06FD  2EFF               	goto	u1070
  3580  06FE  2F00               u1071:
  3581  06FF                     	goto	l1991
  3582  06FF  2F07               u1070:
  3583  0700                     	line	263
  3584                           	
  3585                           l1989:	
  3586  0700                     ;main.c: 263:                             putFIFO( tecla );
  3587                           	movf	(main@tecla),w
  3588  0700  0841               	fcall	_putFIFO
  3589  0701  120A  118A  20D3  120A  118A  	goto	l2029
  3590  0706  2FD6               	line	264
  3591                           ;main.c: 264:                         else
  3592                           	
  3593                           l252:	
  3594  0707                     	line	265
  3595                           	
  3596                           l1991:	
  3597  0707                     ;main.c: 265:                             putFIFO( tecla | 0x20 );
  3598                           	bcf	status, 5	;RP0=0, select bank0
  3599  0707  1283               	bcf	status, 6	;RP1=0, select bank0
  3600  0708  1303               	movf	(main@tecla),w
  3601  0709  0841               	iorlw	020h
  3602  070A  3820               	fcall	_putFIFO
  3603  070B  120A  118A  20D3  120A  118A  	goto	l2029
  3604  0710  2FD6               	
  3605                           l253:	
  3606  0711                     	line	266
  3607                           ;main.c: 266:                         break;
  3608                           	goto	l2029
  3609  0711  2FD6               	line	267
  3610                           ;main.c: 267:                 case 'D':
  3611                           	
  3612                           l254:	
  3613  0712                     	line	268
  3614                           	
  3615                           l1993:	
  3616  0712                     ;main.c: 268:                         ++d;
  3617                           	movlw	low(01h)
  3618  0712  3001               	bcf	status, 5	;RP0=0, select bank0
  3619  0713  1283               	bcf	status, 6	;RP1=0, select bank0
  3620  0714  1303               	movwf	(??_main+0)+0
  3621  0715  00B8               	movf	(??_main+0)+0,w
  3622  0716  0838               	addwf	(main@d),f
  3623  0717  07BE               	line	269
  3624                           	
  3625                           l1995:	
  3626  0718                     ;main.c: 269:                         if( d % 2 )
  3627                           	btfss	(main@d),(0)&7
  3628  0718  1C3E               	goto	u1081
  3629  0719  2F1B               	goto	u1080
  3630  071A  2F1C               u1081:
  3631  071B                     	goto	l1999
  3632  071B  2F23               u1080:
  3633  071C                     	line	270
  3634                           	
  3635                           l1997:	
  3636  071C                     ;main.c: 270:                             putFIFO( tecla );
  3637                           	movf	(main@tecla),w
  3638  071C  0841               	fcall	_putFIFO
  3639  071D  120A  118A  20D3  120A  118A  	goto	l2029
  3640  0722  2FD6               	line	271
  3641                           ;main.c: 271:                         else
  3642                           	
  3643                           l255:	
  3644  0723                     	line	272
  3645                           	
  3646                           l1999:	
  3647  0723                     ;main.c: 272:                             putFIFO( tecla | 0x20 );
  3648                           	bcf	status, 5	;RP0=0, select bank0
  3649  0723  1283               	bcf	status, 6	;RP1=0, select bank0
  3650  0724  1303               	movf	(main@tecla),w
  3651  0725  0841               	iorlw	020h
  3652  0726  3820               	fcall	_putFIFO
  3653  0727  120A  118A  20D3  120A  118A  	goto	l2029
  3654  072C  2FD6               	
  3655                           l256:	
  3656  072D                     	line	273
  3657                           ;main.c: 273:                         break;
  3658                           	goto	l2029
  3659  072D  2FD6               	line	274
  3660                           ;main.c: 274:                 case '0':
  3661                           	
  3662                           l257:	
  3663  072E                     	line	275
  3664                           	
  3665                           l2001:	
  3666  072E                     ;main.c: 275:                         delFIFO(16);
  3667                           	movlw	low(010h)
  3668  072E  3010               	fcall	_delFIFO
  3669  072F  120A  118A  211E  120A  118A  	line	276
  3670                           	
  3671                           l2003:	
  3672  0734                     ;main.c: 276:                         clearLCD();
  3673                           	fcall	_clearLCD
  3674  0734  120A  118A  20B8  120A  118A  	line	277
  3675                           	
  3676                           l2005:	
  3677  0739                     ;main.c: 277:                         a = b = c = d = 0;
  3678                           	bcf	status, 5	;RP0=0, select bank0
  3679  0739  1283               	bcf	status, 6	;RP1=0, select bank0
  3680  073A  1303               	clrf	(main@d)
  3681  073B  01BE               	clrf	(main@c)
  3682  073C  01BD               	clrf	(main@b)
  3683  073D  01BC               	clrf	(main@a)
  3684  073E  01BB               	line	278
  3685                           ;main.c: 278:                         break;
  3686                           	goto	l2029
  3687  073F  2FD6               	line	279
  3688                           ;main.c: 279:                 case '1':
  3689                           	
  3690                           l258:	
  3691  0740                     	goto	l2007
  3692  0740  2F48               	line	280
  3693                           ;main.c: 280:                 case '2':
  3694                           	
  3695                           l259:	
  3696  0741                     	goto	l2007
  3697  0741  2F48               	line	281
  3698                           ;main.c: 281:                 case '3':
  3699                           	
  3700                           l260:	
  3701  0742                     	goto	l2007
  3702  0742  2F48               	line	282
  3703                           ;main.c: 282:                 case '4':
  3704                           	
  3705                           l261:	
  3706  0743                     	goto	l2007
  3707  0743  2F48               	line	283
  3708                           ;main.c: 283:                 case '5':
  3709                           	
  3710                           l262:	
  3711  0744                     	goto	l2007
  3712  0744  2F48               	line	284
  3713                           ;main.c: 284:                 case '6':
  3714                           	
  3715                           l263:	
  3716  0745                     	goto	l2007
  3717  0745  2F48               	line	285
  3718                           ;main.c: 285:                 case '7':
  3719                           	
  3720                           l264:	
  3721  0746                     	goto	l2007
  3722  0746  2F48               	line	286
  3723                           ;main.c: 286:                 case '8':
  3724                           	
  3725                           l265:	
  3726  0747                     	goto	l2007
  3727  0747  2F48               	line	287
  3728                           ;main.c: 287:                 case '9':
  3729                           	
  3730                           l266:	
  3731  0748                     	line	288
  3732                           	
  3733                           l2007:	
  3734  0748                     ;main.c: 288:                         putFIFO(tecla);
  3735                           	movf	(main@tecla),w
  3736  0748  0841               	fcall	_putFIFO
  3737  0749  120A  118A  20D3  120A  118A  	line	289
  3738                           ;main.c: 289:                         break;
  3739                           	goto	l2029
  3740  074E  2FD6               	line	290
  3741                           ;main.c: 290:                 case '*':
  3742                           	
  3743                           l267:	
  3744  074F                     	line	291
  3745                           ;main.c: 291:                         switch( delFIFO(1) )
  3746                           	goto	l2019
  3747  074F  2F67               	line	293
  3748                           ;main.c: 292:                         {;main.c: 293:                             case 'A
                                 ': a = 0; break;
  3749                           	
  3750                           l269:	
  3751  0750                     	
  3752                           l2009:	
  3753  0750                     	bcf	status, 5	;RP0=0, select bank0
  3754  0750  1283               	bcf	status, 6	;RP1=0, select bank0
  3755  0751  1303               	clrf	(main@a)
  3756  0752  01BB               	goto	l2021
  3757  0753  2F90               	line	294
  3758                           ;main.c: 294:                             case 'a': a = 1; break;
  3759                           	
  3760                           l271:	
  3761  0754                     	clrf	(main@a)
  3762  0754  01BB               	incf	(main@a),f
  3763  0755  0ABB               	goto	l2021
  3764  0756  2F90               	line	295
  3765                           ;main.c: 295:                             case 'B': b = 0; break;
  3766                           	
  3767                           l272:	
  3768  0757                     	
  3769                           l2011:	
  3770  0757                     	clrf	(main@b)
  3771  0757  01BC               	goto	l2021
  3772  0758  2F90               	line	296
  3773                           ;main.c: 296:                             case 'b': b = 1; break;
  3774                           	
  3775                           l273:	
  3776  0759                     	clrf	(main@b)
  3777  0759  01BC               	incf	(main@b),f
  3778  075A  0ABC               	goto	l2021
  3779  075B  2F90               	line	297
  3780                           ;main.c: 297:                             case 'C': c = 0; break;
  3781                           	
  3782                           l274:	
  3783  075C                     	
  3784                           l2013:	
  3785  075C                     	clrf	(main@c)
  3786  075C  01BD               	goto	l2021
  3787  075D  2F90               	line	298
  3788                           ;main.c: 298:                             case 'c': c = 1; break;
  3789                           	
  3790                           l275:	
  3791  075E                     	clrf	(main@c)
  3792  075E  01BD               	incf	(main@c),f
  3793  075F  0ABD               	goto	l2021
  3794  0760  2F90               	line	299
  3795                           ;main.c: 299:                             case 'D': d = 0; break;
  3796                           	
  3797                           l276:	
  3798  0761                     	
  3799                           l2015:	
  3800  0761                     	clrf	(main@d)
  3801  0761  01BE               	goto	l2021
  3802  0762  2F90               	line	300
  3803                           ;main.c: 300:                             case 'd': d = 1; break;
  3804                           	
  3805                           l277:	
  3806  0763                     	clrf	(main@d)
  3807  0763  01BE               	incf	(main@d),f
  3808  0764  0ABE               	goto	l2021
  3809  0765  2F90               	line	301
  3810                           	
  3811                           l2017:	
  3812  0766                     ;main.c: 301:                         }
  3813                           	goto	l2021
  3814  0766  2F90               	
  3815                           l268:	
  3816  0767                     	
  3817                           l2019:	
  3818  0767                     	movlw	low(01h)
  3819  0767  3001               	fcall	_delFIFO
  3820  0768  120A  118A  211E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3821  076D  1283               	bcf	status, 6	;RP1=0, select bank0
  3822  076E  1303               	movwf	(??_main+0)+0
  3823  076F  00B8               	clrf	(??_main+0)+0+1
  3824  0770  01B9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3825                           ; Switch size 1, requested type "space"
  3826                           ; Number of cases is 1, Range of values is 0 to 0
  3827                           ; switch strategies available:
  3828                           ; Name         Instructions Cycles
  3829                           ; simple_byte            4     3 (average)
  3830                           ; direct_byte           11     8 (fixed)
  3831                           ; jumptable            260     6 (fixed)
  3832                           ;	Chosen strategy is simple_byte
  3833                           
  3834                           	movf 1+(??_main+0)+0,w
  3835  0771  0839               	opt asmopt_push
  3836                           	opt asmopt_off
  3837                           	xorlw	0^0	; case 0
  3838  0772  3A00               	skipnz
  3839  0773  1903               	goto	l2181
  3840  0774  2F76               	goto	l2021
  3841  0775  2F90               	opt asmopt_pop
  3842                           	
  3843                           l2181:	
  3844  0776                     ; Switch size 1, requested type "space"
  3845                           ; Number of cases is 8, Range of values is 65 to 100
  3846                           ; switch strategies available:
  3847                           ; Name         Instructions Cycles
  3848                           ; simple_byte           25    13 (average)
  3849                           ; direct_byte          119    11 (fixed)
  3850                           ; jumptable            263     9 (fixed)
  3851                           ;	Chosen strategy is simple_byte
  3852                           
  3853                           	movf 0+(??_main+0)+0,w
  3854  0776  0838               	opt asmopt_push
  3855                           	opt asmopt_off
  3856                           	xorlw	65^0	; case 65
  3857  0777  3A41               	skipnz
  3858  0778  1903               	goto	l2009
  3859  0779  2F50               	xorlw	66^65	; case 66
  3860  077A  3A03               	skipnz
  3861  077B  1903               	goto	l2011
  3862  077C  2F57               	xorlw	67^66	; case 67
  3863  077D  3A01               	skipnz
  3864  077E  1903               	goto	l2013
  3865  077F  2F5C               	xorlw	68^67	; case 68
  3866  0780  3A07               	skipnz
  3867  0781  1903               	goto	l2015
  3868  0782  2F61               	xorlw	97^68	; case 97
  3869  0783  3A25               	skipnz
  3870  0784  1903               	goto	l271
  3871  0785  2F54               	xorlw	98^97	; case 98
  3872  0786  3A03               	skipnz
  3873  0787  1903               	goto	l273
  3874  0788  2F59               	xorlw	99^98	; case 99
  3875  0789  3A01               	skipnz
  3876  078A  1903               	goto	l275
  3877  078B  2F5E               	xorlw	100^99	; case 100
  3878  078C  3A07               	skipnz
  3879  078D  1903               	goto	l277
  3880  078E  2F63               	goto	l2021
  3881  078F  2F90               	opt asmopt_pop
  3882                           
  3883                           	
  3884                           l270:	
  3885  0790                     	line	302
  3886                           	
  3887                           l2021:	
  3888  0790                     ;main.c: 302:                         clearLCD();
  3889                           	fcall	_clearLCD
  3890  0790  120A  118A  20B8  120A  118A  	line	303
  3891                           ;main.c: 303:                         break;
  3892                           	goto	l2029
  3893  0795  2FD6               	line	304
  3894                           ;main.c: 304:                 case '#':
  3895                           	
  3896                           l278:	
  3897  0796                     	line	305
  3898                           	
  3899                           l2023:	
  3900  0796                     ;main.c: 305:                         estado = 0;
  3901                           	bcf	status, 5	;RP0=0, select bank0
  3902  0796  1283               	bcf	status, 6	;RP1=0, select bank0
  3903  0797  1303               	clrf	(main@estado)
  3904  0798  01C2               	clrf	(main@estado+1)
  3905  0799  01C3               	line	306
  3906                           ;main.c: 306:                         break;
  3907                           	goto	l2029
  3908  079A  2FD6               	line	307
  3909                           	
  3910                           l2025:	
  3911  079B                     ;main.c: 307:             }
  3912                           	goto	l2029
  3913  079B  2FD6               	
  3914                           l243:	
  3915  079C                     	
  3916                           l2027:	
  3917  079C                     	movf	(main@tecla),w
  3918  079C  0841               	movwf	(??_main+0)+0
  3919  079D  00B8               	clrf	(??_main+0)+0+1
  3920  079E  01B9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3921                           ; Switch size 1, requested type "space"
  3922                           ; Number of cases is 1, Range of values is 0 to 0
  3923                           ; switch strategies available:
  3924                           ; Name         Instructions Cycles
  3925                           ; simple_byte            4     3 (average)
  3926                           ; direct_byte           11     8 (fixed)
  3927                           ; jumptable            260     6 (fixed)
  3928                           ;	Chosen strategy is simple_byte
  3929                           
  3930                           	movf 1+(??_main+0)+0,w
  3931  079F  0839               	opt asmopt_push
  3932                           	opt asmopt_off
  3933                           	xorlw	0^0	; case 0
  3934  07A0  3A00               	skipnz
  3935  07A1  1903               	goto	l2183
  3936  07A2  2FA4               	goto	l2029
  3937  07A3  2FD6               	opt asmopt_pop
  3938                           	
  3939                           l2183:	
  3940  07A4                     ; Switch size 1, requested type "space"
  3941                           ; Number of cases is 16, Range of values is 35 to 68
  3942                           ; switch strategies available:
  3943                           ; Name         Instructions Cycles
  3944                           ; simple_byte           49    25 (average)
  3945                           ; direct_byte          113    11 (fixed)
  3946                           ; jumptable            263     9 (fixed)
  3947                           ;	Chosen strategy is simple_byte
  3948                           
  3949                           	movf 0+(??_main+0)+0,w
  3950  07A4  0838               	opt asmopt_push
  3951                           	opt asmopt_off
  3952                           	xorlw	35^0	; case 35
  3953  07A5  3A23               	skipnz
  3954  07A6  1903               	goto	l2023
  3955  07A7  2F96               	xorlw	42^35	; case 42
  3956  07A8  3A09               	skipnz
  3957  07A9  1903               	goto	l2019
  3958  07AA  2F67               	xorlw	48^42	; case 48
  3959  07AB  3A1A               	skipnz
  3960  07AC  1903               	goto	l2001
  3961  07AD  2F2E               	xorlw	49^48	; case 49
  3962  07AE  3A01               	skipnz
  3963  07AF  1903               	goto	l2007
  3964  07B0  2F48               	xorlw	50^49	; case 50
  3965  07B1  3A03               	skipnz
  3966  07B2  1903               	goto	l2007
  3967  07B3  2F48               	xorlw	51^50	; case 51
  3968  07B4  3A01               	skipnz
  3969  07B5  1903               	goto	l2007
  3970  07B6  2F48               	xorlw	52^51	; case 52
  3971  07B7  3A07               	skipnz
  3972  07B8  1903               	goto	l2007
  3973  07B9  2F48               	xorlw	53^52	; case 53
  3974  07BA  3A01               	skipnz
  3975  07BB  1903               	goto	l2007
  3976  07BC  2F48               	xorlw	54^53	; case 54
  3977  07BD  3A03               	skipnz
  3978  07BE  1903               	goto	l2007
  3979  07BF  2F48               	xorlw	55^54	; case 55
  3980  07C0  3A01               	skipnz
  3981  07C1  1903               	goto	l2007
  3982  07C2  2F48               	xorlw	56^55	; case 56
  3983  07C3  3A0F               	skipnz
  3984  07C4  1903               	goto	l2007
  3985  07C5  2F48               	xorlw	57^56	; case 57
  3986  07C6  3A01               	skipnz
  3987  07C7  1903               	goto	l2007
  3988  07C8  2F48               	xorlw	65^57	; case 65
  3989  07C9  3A78               	skipnz
  3990  07CA  1903               	goto	l1969
  3991  07CB  2EC0               	xorlw	66^65	; case 66
  3992  07CC  3A03               	skipnz
  3993  07CD  1903               	goto	l1977
  3994  07CE  2EDA               	xorlw	67^66	; case 67
  3995  07CF  3A01               	skipnz
  3996  07D0  1903               	goto	l1985
  3997  07D1  2EF6               	xorlw	68^67	; case 68
  3998  07D2  3A07               	skipnz
  3999  07D3  1903               	goto	l1993
  4000  07D4  2F12               	goto	l2029
  4001  07D5  2FD6               	opt asmopt_pop
  4002                           
  4003                           	
  4004                           l247:	
  4005  07D6                     	line	308
  4006                           	
  4007                           l2029:	
  4008  07D6                     ;main.c: 308:             lcd(0,1, displayFIFO() );
  4009                           	clrf	(lcd@y)
  4010  07D6  01F7               	incf	(lcd@y),f
  4011  07D7  0AF7               	fcall	_displayFIFO
  4012  07D8  120A  118A  20A6  120A  118A  	movwf	(lcd@ptr)
  4013  07DD  00F8               	movlw	(0x0)
  4014  07DE  3000               	movwf	(lcd@ptr+1)
  4015  07DF  00F9               	movlw	low(0)
  4016  07E0  3000               	fcall	_lcd
  4017  07E1  120A  118A  2194  120A  118A  	goto	l2031
  4018  07E6  2FE7               	line	310
  4019                           ;main.c: 310:         }
  4020                           	
  4021                           l242:	
  4022  07E7                     	line	311
  4023                           	
  4024                           l2031:	
  4025  07E7                     ;main.c: 311:         serialIOscan();
  4026                           	fcall	_serialIOscan
  4027  07E7  120A  118A  2235  120A  118A  	goto	l1815
  4028  07EC  2BCE               	line	312
  4029                           ;main.c: 312:     }
  4030                           	
  4031                           l279:	
  4032  07ED                     	goto	l1815
  4033  07ED  2BCE               	
  4034                           l280:	
  4035  07EE                     	line	313
  4036                           	
  4037                           l281:	
  4038  07EE                     	global	start
  4039                           	ljmp	start
  4040  07EE  120A  118A  2800   	opt stack 0
  4041                           GLOBAL	__end_of_main
  4042                           	__end_of_main:
  4043  07F1                     	signat	_main,89
  4044                           	global	_serialIOscan
  4045                           
  4046 ;; *************** function _serialIOscan *****************
  4047 ;; Defined at:
  4048 ;;		line 76 in file "serialIO.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  i               1    8[COMMON] unsigned char 
  4053 ;;  j               1    7[COMMON] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         0       0       0       0       0
  4064 ;;      Locals:         2       0       0       0       0
  4065 ;;      Temps:          3       0       0       0       0
  4066 ;;      Totals:         5       0       0       0       0
  4067 ;;Total ram usage:        5 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    1
  4070 ;; This function calls:
  4071 ;;		_serialIObyteShift
  4072 ;;		_serialIOload
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4078                           	file	"serialIO.c"
  4079                           	line	76
  4080                           global __ptext1
  4081                           __ptext1:	;psect for function _serialIOscan
  4082  0235                     psect	text1
  4083                           	file	"serialIO.c"
  4084                           	line	76
  4085                           	global	__size_of_serialIOscan
  4086                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
  4087  003D                     	
  4088                           _serialIOscan:	
  4089  0235                     ;incstack = 0
  4090                           	opt	stack 6
  4091                           ; Regs used in _serialIOscan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4092                           	line	79
  4093                           	
  4094                           l1787:	
  4095  0235                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
  4096                           	bcf	status, 5	;RP0=0, select bank0
  4097  0235  1283               	bcf	status, 6	;RP1=0, select bank0
  4098  0236  1303               	movf	(_lenSerialIO),w
  4099  0237  0820               	addlw	0FFh
  4100  0238  3EFF               	movwf	(??_serialIOscan+0)+0
  4101  0239  00F4               	movf	(??_serialIOscan+0)+0,w
  4102  023A  0874               	movwf	(serialIOscan@j)
  4103  023B  00F7               	line	80
  4104                           	
  4105                           l1789:	
  4106  023C                     ;serialIO.c: 80:     serialIOload();
  4107                           	fcall	_serialIOload
  4108  023C  120A  118A  20B3  120A  118A  	line	81
  4109                           	
  4110                           l1791:	
  4111  0241                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
  4112                           	clrf	(serialIOscan@i)
  4113  0241  01F8               	goto	l1797
  4114  0242  2A63               	
  4115                           l315:	
  4116  0243                     	line	83
  4117                           	
  4118                           l1793:	
  4119  0243                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
  4120                           	decf	(serialIOscan@i),w
  4121  0243  0378               	xorlw	0ffh
  4122  0244  3AFF               	addwf	(serialIOscan@j),w
  4123  0245  0777               	bcf	status, 5	;RP0=0, select bank0
  4124  0246  1283               	bcf	status, 6	;RP1=0, select bank0
  4125  0247  1303               	addwf	(_ptrSerialOut),w
  4126  0248  0721               	movwf	(??_serialIOscan+0)+0
  4127  0249  00F4               	movf	0+(??_serialIOscan+0)+0,w
  4128  024A  0874               	movwf	fsr0
  4129  024B  0084               	bcf	status, 7	;select IRP bank0
  4130  024C  1383               	movf	indf,w
  4131  024D  0800               	fcall	_serialIObyteShift
  4132  024E  120A  118A  2169  120A  118A  	movwf	(??_serialIOscan+1)+0
  4133  0253  00F5               	movf	(serialIOscan@i),w
  4134  0254  0878               	bcf	status, 5	;RP0=0, select bank0
  4135  0255  1283               	bcf	status, 6	;RP1=0, select bank0
  4136  0256  1303               	addwf	(_ptrSerialIn),w
  4137  0257  0722               	movwf	(??_serialIOscan+2)+0
  4138  0258  00F6               	movf	0+(??_serialIOscan+2)+0,w
  4139  0259  0876               	movwf	fsr0
  4140  025A  0084               	movf	(??_serialIOscan+1)+0,w
  4141  025B  0875               	bcf	status, 7	;select IRP bank0
  4142  025C  1383               	movwf	indf
  4143  025D  0080               	line	84
  4144                           	
  4145                           l1795:	
  4146  025E                     ;serialIO.c: 84:     }
  4147                           	movlw	low(01h)
  4148  025E  3001               	movwf	(??_serialIOscan+0)+0
  4149  025F  00F4               	movf	(??_serialIOscan+0)+0,w
  4150  0260  0874               	addwf	(serialIOscan@i),f
  4151  0261  07F8               	goto	l1797
  4152  0262  2A63               	
  4153                           l314:	
  4154  0263                     	
  4155                           l1797:	
  4156  0263                     	bcf	status, 5	;RP0=0, select bank0
  4157  0263  1283               	bcf	status, 6	;RP1=0, select bank0
  4158  0264  1303               	movf	(_lenSerialIO),w
  4159  0265  0820               	subwf	(serialIOscan@i),w
  4160  0266  0278               	skipc
  4161  0267  1C03               	goto	u771
  4162  0268  2A6A               	goto	u770
  4163  0269  2A6B               u771:
  4164  026A                     	goto	l1793
  4165  026A  2A43               u770:
  4166  026B                     	goto	l1799
  4167  026B  2A6C               	
  4168                           l316:	
  4169  026C                     	line	85
  4170                           	
  4171                           l1799:	
  4172  026C                     ;serialIO.c: 85:     serialIOload();
  4173                           	fcall	_serialIOload
  4174  026C  120A  118A  20B3  120A  118A  	line	86
  4175                           	
  4176                           l317:	
  4177  0271                     	return
  4178  0271  0008               	opt stack 0
  4179                           GLOBAL	__end_of_serialIOscan
  4180                           	__end_of_serialIOscan:
  4181  0272                     	signat	_serialIOscan,89
  4182                           	global	_serialIOload
  4183                           
  4184 ;; *************** function _serialIOload *****************
  4185 ;; Defined at:
  4186 ;;		line 45 in file "serialIO.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		None
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4200 ;;      Params:         0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0
  4203 ;;      Totals:         0       0       0       0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_serialIOscan
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4213                           	line	45
  4214                           global __ptext2
  4215                           __ptext2:	;psect for function _serialIOload
  4216  00B3                     psect	text2
  4217                           	file	"serialIO.c"
  4218                           	line	45
  4219                           	global	__size_of_serialIOload
  4220                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
  4221  0005                     	
  4222                           _serialIOload:	
  4223  00B3                     ;incstack = 0
  4224                           	opt	stack 6
  4225                           ; Regs used in _serialIOload: []
  4226                           	line	47
  4227                           	
  4228                           l1613:	
  4229  00B3                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
  4230                           	bcf	status, 5	;RP0=0, select bank0
  4231  00B3  1283               	bcf	status, 6	;RP1=0, select bank0
  4232  00B4  1303               	bcf	(9),0	;volatile
  4233  00B5  1009               	line	48
  4234                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
  4235                           	bsf	(9),0	;volatile
  4236  00B6  1409               	line	49
  4237                           	
  4238                           l302:	
  4239  00B7                     	return
  4240  00B7  0008               	opt stack 0
  4241                           GLOBAL	__end_of_serialIOload
  4242                           	__end_of_serialIOload:
  4243  00B8                     	signat	_serialIOload,89
  4244                           	global	_serialIObyteShift
  4245                           
  4246 ;; *************** function _serialIObyteShift *****************
  4247 ;; Defined at:
  4248 ;;		line 50 in file "serialIO.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  dataIn          1    wreg     unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  dataIn          1    1[COMMON] unsigned char 
  4253 ;;  dataBit         1    3[COMMON] unsigned char 
  4254 ;;  dataOut         1    2[COMMON] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      unsigned char 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       0       0       0       0
  4265 ;;      Locals:         3       0       0       0       0
  4266 ;;      Temps:          1       0       0       0       0
  4267 ;;      Totals:         4       0       0       0       0
  4268 ;;Total ram usage:        4 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_serialIOscan
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4277                           	line	50
  4278                           global __ptext3
  4279                           __ptext3:	;psect for function _serialIObyteShift
  4280  0169                     psect	text3
  4281                           	file	"serialIO.c"
  4282                           	line	50
  4283                           	global	__size_of_serialIObyteShift
  4284                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
  4285  002B                     	
  4286                           _serialIObyteShift:	
  4287  0169                     ;incstack = 0
  4288                           	opt	stack 6
  4289                           ; Regs used in _serialIObyteShift: [wreg+status,2+status,0]
  4290                           ;serialIObyteShift@dataIn stored from wreg
  4291                           	movwf	(serialIObyteShift@dataIn)
  4292  0169  00F1               	line	55
  4293                           	
  4294                           l1615:	
  4295  016A                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
  4296                           	movlw	low(080h)
  4297  016A  3080               	movwf	(??_serialIObyteShift+0)+0
  4298  016B  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4299  016C  0870               	movwf	(serialIObyteShift@dataBit)
  4300  016D  00F3               	line	56
  4301                           	
  4302                           l1617:	
  4303  016E                     ;serialIO.c: 56:     dataOut = 0;
  4304                           	clrf	(serialIObyteShift@dataOut)
  4305  016E  01F2               	line	58
  4306                           ;serialIO.c: 58:     while( dataBit )
  4307                           	goto	l1629
  4308  016F  2989               	
  4309                           l306:	
  4310  0170                     	line	60
  4311                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
  4312                           	bcf	status, 5	;RP0=0, select bank0
  4313  0170  1283               	bcf	status, 6	;RP1=0, select bank0
  4314  0171  1303               	bcf	(9),1	;volatile
  4315  0172  1089               	line	61
  4316                           	
  4317                           l1619:	
  4318  0173                     ;serialIO.c: 61:         if( dataIn & dataBit )
  4319                           	movf	(serialIObyteShift@dataIn),w
  4320  0173  0871               	andwf	(serialIObyteShift@dataBit),w
  4321  0174  0573               	btfsc	status,2
  4322  0175  1903               	goto	u631
  4323  0176  2978               	goto	u630
  4324  0177  2979               u631:
  4325  0178                     	goto	l307
  4326  0178  297B               u630:
  4327  0179                     	line	62
  4328                           	
  4329                           l1621:	
  4330  0179                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
  4331                           	bsf	(9),2	;volatile
  4332  0179  1509               	goto	l308
  4333  017A  297C               	line	63
  4334                           ;serialIO.c: 63:         else
  4335                           	
  4336                           l307:	
  4337  017B                     	line	64
  4338                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
  4339                           	bcf	(9),2	;volatile
  4340  017B  1109               	
  4341                           l308:	
  4342  017C                     	line	66
  4343                           ;serialIO.c: 66:         if( PORTAbits.RA0 )
  4344                           	btfss	(5),0	;volatile
  4345  017C  1C05               	goto	u641
  4346  017D  297F               	goto	u640
  4347  017E  2980               u641:
  4348  017F                     	goto	l1625
  4349  017F  2985               u640:
  4350  0180                     	line	67
  4351                           	
  4352                           l1623:	
  4353  0180                     ;serialIO.c: 67:             dataOut |= dataBit;
  4354                           	movf	(serialIObyteShift@dataBit),w
  4355  0180  0873               	movwf	(??_serialIObyteShift+0)+0
  4356  0181  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4357  0182  0870               	iorwf	(serialIObyteShift@dataOut),f
  4358  0183  04F2               	goto	l1625
  4359  0184  2985               	
  4360                           l309:	
  4361  0185                     	line	68
  4362                           	
  4363                           l1625:	
  4364  0185                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
  4365                           	bsf	(9),1	;volatile
  4366  0185  1489               	line	69
  4367                           	
  4368                           l1627:	
  4369  0186                     ;serialIO.c: 69:         dataBit >>= 1;
  4370                           	clrc
  4371  0186  1003               	rrf	(serialIObyteShift@dataBit),f
  4372  0187  0CF3               
  4373                           	goto	l1629
  4374  0188  2989               	line	70
  4375                           ;serialIO.c: 70:     }
  4376                           	
  4377                           l305:	
  4378  0189                     	line	58
  4379                           	
  4380                           l1629:	
  4381  0189                     ;serialIO.c: 58:     while( dataBit )
  4382                           	movf	((serialIObyteShift@dataBit)),w
  4383  0189  0873               	btfss	status,2
  4384  018A  1D03               	goto	u651
  4385  018B  298D               	goto	u650
  4386  018C  298E               u651:
  4387  018D                     	goto	l306
  4388  018D  2970               u650:
  4389  018E                     	
  4390                           l310:	
  4391  018E                     	line	71
  4392                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
  4393                           	bcf	status, 5	;RP0=0, select bank0
  4394  018E  1283               	bcf	status, 6	;RP1=0, select bank0
  4395  018F  1303               	bcf	(9),1	;volatile
  4396  0190  1089               	line	72
  4397                           	
  4398                           l1631:	
  4399  0191                     ;serialIO.c: 72:     return( dataOut );
  4400                           	movf	(serialIObyteShift@dataOut),w
  4401  0191  0872               	goto	l311
  4402  0192  2993               	
  4403                           l1633:	
  4404  0193                     	line	73
  4405                           	
  4406                           l311:	
  4407  0193                     	return
  4408  0193  0008               	opt stack 0
  4409                           GLOBAL	__end_of_serialIObyteShift
  4410                           	__end_of_serialIObyteShift:
  4411  0194                     	signat	_serialIObyteShift,4217
  4412                           	global	_screen_menu
  4413                           
  4414 ;; *************** function _screen_menu *****************
  4415 ;; Defined at:
  4416 ;;		line 205 in file "lcd4bitBus.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;		None
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;		None
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         0       0       0       0       0
  4431 ;;      Locals:         0       0       0       0       0
  4432 ;;      Temps:          0       0       0       0       0
  4433 ;;      Totals:         0       0       0       0       0
  4434 ;;Total ram usage:        0 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    3
  4437 ;; This function calls:
  4438 ;;		_lcd
  4439 ;; This function is called by:
  4440 ;;		_main
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4444                           	file	"lcd4bitBus.c"
  4445                           	line	205
  4446                           global __ptext4
  4447                           __ptext4:	;psect for function _screen_menu
  4448  00C7                     psect	text4
  4449                           	file	"lcd4bitBus.c"
  4450                           	line	205
  4451                           	global	__size_of_screen_menu
  4452                           	__size_of_screen_menu	equ	__end_of_screen_menu-_screen_menu
  4453  000C                     	
  4454                           _screen_menu:	
  4455  00C7                     ;incstack = 0
  4456                           	opt	stack 4
  4457                           ; Regs used in _screen_menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4458                           	line	207
  4459                           	
  4460                           l1729:	
  4461  00C7                     ;lcd4bitBus.c: 207:     lcd(0,0,"INSIRA A SEQUEN.");
  4462                           	clrf	(lcd@y)
  4463  00C7  01F7               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  4464  00C8  3011               	movwf	(lcd@ptr)
  4465  00C9  00F8               	movlw	80h
  4466  00CA  3080               	movwf	(lcd@ptr+1)
  4467  00CB  00F9               	movlw	low(0)
  4468  00CC  3000               	fcall	_lcd
  4469  00CD  120A  118A  2194  120A  118A  	line	208
  4470                           	
  4471                           l102:	
  4472  00D2                     	return
  4473  00D2  0008               	opt stack 0
  4474                           GLOBAL	__end_of_screen_menu
  4475                           	__end_of_screen_menu:
  4476  00D3                     	signat	_screen_menu,89
  4477                           	global	_screen_car
  4478                           
  4479 ;; *************** function _screen_car *****************
  4480 ;; Defined at:
  4481 ;;		line 196 in file "lcd4bitBus.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4495 ;;      Params:         0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0
  4497 ;;      Temps:          0       3       0       0       0
  4498 ;;      Totals:         0       3       0       0       0
  4499 ;;Total ram usage:        3 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    3
  4502 ;; This function calls:
  4503 ;;		_clearLCD
  4504 ;;		_lcd
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4510                           	line	196
  4511                           global __ptext5
  4512                           __ptext5:	;psect for function _screen_car
  4513  01FB                     psect	text5
  4514                           	file	"lcd4bitBus.c"
  4515                           	line	196
  4516                           	global	__size_of_screen_car
  4517                           	__size_of_screen_car	equ	__end_of_screen_car-_screen_car
  4518  003A                     	
  4519                           _screen_car:	
  4520  01FB                     ;incstack = 0
  4521                           	opt	stack 4
  4522                           ; Regs used in _screen_car: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4523                           	line	198
  4524                           	
  4525                           l1721:	
  4526  01FB                     ;lcd4bitBus.c: 198:     lcd(2,0,"SEQUENCIADOR");
  4527                           	clrf	(lcd@y)
  4528  01FB  01F7               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  4529  01FC  3022               	movwf	(lcd@ptr)
  4530  01FD  00F8               	movlw	80h
  4531  01FE  3080               	movwf	(lcd@ptr+1)
  4532  01FF  00F9               	movlw	low(02h)
  4533  0200  3002               	fcall	_lcd
  4534  0201  120A  118A  2194  120A  118A  	line	199
  4535                           	
  4536                           l1723:	
  4537  0206                     ;lcd4bitBus.c: 199:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4538                           	opt asmopt_push
  4539                           opt asmopt_off
  4540                           movlw  2
  4541  0206  3002               	bcf	status, 5	;RP0=0, select bank0
  4542  0207  1283               	bcf	status, 6	;RP1=0, select bank0
  4543  0208  1303               movwf	((??_screen_car+0)+0+2),f
  4544  0209  00B7               movlw	4
  4545  020A  3004               movwf	((??_screen_car+0)+0+1),f
  4546  020B  00B6               	movlw	185
  4547  020C  30B9               movwf	((??_screen_car+0)+0),f
  4548  020D  00B5               	u1187:
  4549  020E                     decfsz	((??_screen_car+0)+0),f
  4550  020E  0BB5               	goto	u1187
  4551  020F  2A0E               	decfsz	((??_screen_car+0)+0+1),f
  4552  0210  0BB6               	goto	u1187
  4553  0211  2A0E               	decfsz	((??_screen_car+0)+0+2),f
  4554  0212  0BB7               	goto	u1187
  4555  0213  2A0E               	nop2
  4556  0214  2A15               opt asmopt_pop
  4557                           
  4558                           	line	200
  4559                           	
  4560                           l1725:	
  4561  0215                     ;lcd4bitBus.c: 200:     lcd(2,1,"PROGRAMAVEL");
  4562                           	clrf	(lcd@y)
  4563  0215  01F7               	incf	(lcd@y),f
  4564  0216  0AF7               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  4565  0217  303B               	movwf	(lcd@ptr)
  4566  0218  00F8               	movlw	80h
  4567  0219  3080               	movwf	(lcd@ptr+1)
  4568  021A  00F9               	movlw	low(02h)
  4569  021B  3002               	fcall	_lcd
  4570  021C  120A  118A  2194  120A  118A  	line	201
  4571                           ;lcd4bitBus.c: 201:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  4572                           	opt asmopt_push
  4573                           opt asmopt_off
  4574                           movlw  11
  4575  0221  300B               	bcf	status, 5	;RP0=0, select bank0
  4576  0222  1283               	bcf	status, 6	;RP1=0, select bank0
  4577  0223  1303               movwf	((??_screen_car+0)+0+2),f
  4578  0224  00B7               movlw	38
  4579  0225  3026               movwf	((??_screen_car+0)+0+1),f
  4580  0226  00B6               	movlw	93
  4581  0227  305D               movwf	((??_screen_car+0)+0),f
  4582  0228  00B5               	u1197:
  4583  0229                     decfsz	((??_screen_car+0)+0),f
  4584  0229  0BB5               	goto	u1197
  4585  022A  2A29               	decfsz	((??_screen_car+0)+0+1),f
  4586  022B  0BB6               	goto	u1197
  4587  022C  2A29               	decfsz	((??_screen_car+0)+0+2),f
  4588  022D  0BB7               	goto	u1197
  4589  022E  2A29               opt asmopt_pop
  4590                           
  4591                           	line	202
  4592                           	
  4593                           l1727:	
  4594  022F                     ;lcd4bitBus.c: 202:     clearLCD();
  4595                           	fcall	_clearLCD
  4596  022F  120A  118A  20B8  120A  118A  	line	203
  4597                           	
  4598                           l99:	
  4599  0234                     	return
  4600  0234  0008               	opt stack 0
  4601                           GLOBAL	__end_of_screen_car
  4602                           	__end_of_screen_car:
  4603  0235                     	signat	_screen_car,89
  4604                           	global	_lcd
  4605                           
  4606 ;; *************** function _lcd *****************
  4607 ;; Defined at:
  4608 ;;		line 189 in file "lcd4bitBus.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  x               1    wreg     unsigned char 
  4611 ;;  y               1    7[COMMON] unsigned char 
  4612 ;;  ptr             2    8[COMMON] PTR const unsigned char 
  4613 ;;		 -> STR_4(12), STR_3(17), STR_2(12), STR_1(13), 
  4614 ;;		 -> fifo(16), 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  x               1   11[COMMON] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4626 ;;      Params:         3       0       0       0       0
  4627 ;;      Locals:         1       0       0       0       0
  4628 ;;      Temps:          1       0       0       0       0
  4629 ;;      Totals:         5       0       0       0       0
  4630 ;;Total ram usage:        5 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    2
  4633 ;; This function calls:
  4634 ;;		_lcddat
  4635 ;;		_lcdxy
  4636 ;; This function is called by:
  4637 ;;		_screen_car
  4638 ;;		_screen_menu
  4639 ;;		_main
  4640 ;;		_screen_monitor
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4644                           	line	189
  4645                           global __ptext6
  4646                           __ptext6:	;psect for function _lcd
  4647  0194                     psect	text6
  4648                           	file	"lcd4bitBus.c"
  4649                           	line	189
  4650                           	global	__size_of_lcd
  4651                           	__size_of_lcd	equ	__end_of_lcd-_lcd
  4652  0033                     	
  4653                           _lcd:	
  4654  0194                     ;incstack = 0
  4655                           	opt	stack 4
  4656                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4657                           ;lcd@x stored from wreg
  4658                           	movwf	(lcd@x)
  4659  0194  00FB               	line	191
  4660                           	
  4661                           l1603:	
  4662  0195                     ;lcd4bitBus.c: 189: void lcd( unsigned char x, unsigned char y, const char * ptr );lcd4b
                                 itBus.c: 190: {;lcd4bitBus.c: 191:     lcdxy(x,y);
  4663                           	movf	(lcd@y),w
  4664  0195  0877               	movwf	(??_lcd+0)+0
  4665  0196  00FA               	movf	(??_lcd+0)+0,w
  4666  0197  087A               	movwf	(lcdxy@y)
  4667  0198  00F4               	movf	(lcd@x),w
  4668  0199  087B               	fcall	_lcdxy
  4669  019A  120A  118A  20F4  120A  118A  	line	192
  4670                           ;lcd4bitBus.c: 192:     while( *ptr )
  4671                           	goto	l1609
  4672  019F  29B5               	
  4673                           l94:	
  4674  01A0                     	line	193
  4675                           	
  4676                           l1605:	
  4677  01A0                     ;lcd4bitBus.c: 193:         lcddat( *ptr++ );
  4678                           	movf	(lcd@ptr+1),w
  4679  01A0  0879               	bcf	status, 5	;RP0=0, select bank0
  4680  01A1  1283               	bcf	status, 6	;RP1=0, select bank0
  4681  01A2  1303               	movwf	btemp+1
  4682  01A3  00FF               	movf	(lcd@ptr),w
  4683  01A4  0878               	movwf	fsr0
  4684  01A5  0084               	fcall	stringtab
  4685  01A6  120A  118A  2003  120A  118A  	fcall	_lcddat
  4686  01AB  120A  118A  213F  120A  118A  	
  4687                           l1607:	
  4688  01B0                     	movlw	01h
  4689  01B0  3001               	addwf	(lcd@ptr),f
  4690  01B1  07F8               	skipnc
  4691  01B2  1803               	incf	(lcd@ptr+1),f
  4692  01B3  0AF9               	goto	l1609
  4693  01B4  29B5               	
  4694                           l93:	
  4695  01B5                     	line	192
  4696                           	
  4697                           l1609:	
  4698  01B5                     ;lcd4bitBus.c: 192:     while( *ptr )
  4699                           	movf	(lcd@ptr+1),w
  4700  01B5  0879               	bcf	status, 5	;RP0=0, select bank0
  4701  01B6  1283               	bcf	status, 6	;RP1=0, select bank0
  4702  01B7  1303               	movwf	btemp+1
  4703  01B8  00FF               	movf	(lcd@ptr),w
  4704  01B9  0878               	movwf	fsr0
  4705  01BA  0084               	fcall	stringtab
  4706  01BB  120A  118A  2003  120A  118A  	xorlw	0
  4707  01C0  3A00               	skipz
  4708  01C1  1D03               	goto	u621
  4709  01C2  29C4               	goto	u620
  4710  01C3  29C5               u621:
  4711  01C4                     	goto	l1605
  4712  01C4  29A0               u620:
  4713  01C5                     	goto	l96
  4714  01C5  29C6               	
  4715                           l95:	
  4716  01C6                     	line	194
  4717                           	
  4718                           l96:	
  4719  01C6                     	return
  4720  01C6  0008               	opt stack 0
  4721                           GLOBAL	__end_of_lcd
  4722                           	__end_of_lcd:
  4723  01C7                     	signat	_lcd,12409
  4724                           	global	_lcdxy
  4725                           
  4726 ;; *************** function _lcdxy *****************
  4727 ;; Defined at:
  4728 ;;		line 175 in file "lcd4bitBus.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  x               1    wreg     unsigned char 
  4731 ;;  y               1    4[COMMON] unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  x               1    6[COMMON] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4743 ;;      Params:         1       0       0       0       0
  4744 ;;      Locals:         1       0       0       0       0
  4745 ;;      Temps:          1       0       0       0       0
  4746 ;;      Totals:         3       0       0       0       0
  4747 ;;Total ram usage:        3 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    1
  4750 ;; This function calls:
  4751 ;;		_lcdcmd
  4752 ;; This function is called by:
  4753 ;;		_lcd
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4757                           	line	175
  4758                           global __ptext7
  4759                           __ptext7:	;psect for function _lcdxy
  4760  00F4                     psect	text7
  4761                           	file	"lcd4bitBus.c"
  4762                           	line	175
  4763                           	global	__size_of_lcdxy
  4764                           	__size_of_lcdxy	equ	__end_of_lcdxy-_lcdxy
  4765  0013                     	
  4766                           _lcdxy:	
  4767  00F4                     ;incstack = 0
  4768                           	opt	stack 4
  4769                           ; Regs used in _lcdxy: [wreg+status,2+status,0+pclath+cstack]
  4770                           ;lcdxy@x stored from wreg
  4771                           	movwf	(lcdxy@x)
  4772  00F4  00F6               	line	177
  4773                           	
  4774                           l1601:	
  4775  00F5                     ;lcd4bitBus.c: 175: void lcdxy( unsigned char x, unsigned char y );lcd4bitBus.c: 176: {;
                                 lcd4bitBus.c: 177:     lcdcmd( (0x80+((0x40 * y) + (x + 0x00) & 0x7F)) );
  4776                           	movf	(lcdxy@y),w
  4777  00F5  0874               	movwf	(??_lcdxy+0)+0
  4778  00F6  00F5               	movlw	06h
  4779  00F7  3006               u615:
  4780  00F8                     	clrc
  4781  00F8  1003               	rlf	(??_lcdxy+0)+0,f
  4782  00F9  0DF5               	addlw	-1
  4783  00FA  3EFF               	skipz
  4784  00FB  1D03               	goto	u615
  4785  00FC  28F8               	movf	(lcdxy@x),w
  4786  00FD  0876               	addwf	0+(??_lcdxy+0)+0,w
  4787  00FE  0775               	andlw	07Fh
  4788  00FF  397F               	addlw	080h
  4789  0100  3E80               	fcall	_lcdcmd
  4790  0101  120A  118A  22CB  120A  118A  	line	178
  4791                           	
  4792                           l90:	
  4793  0106                     	return
  4794  0106  0008               	opt stack 0
  4795                           GLOBAL	__end_of_lcdxy
  4796                           	__end_of_lcdxy:
  4797  0107                     	signat	_lcdxy,8313
  4798                           	global	_lcddat
  4799                           
  4800 ;; *************** function _lcddat *****************
  4801 ;; Defined at:
  4802 ;;		line 150 in file "lcd4bitBus.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  dat             1    wreg     unsigned char 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  dat             1    1[COMMON] unsigned char 
  4807 ;;  nibble          1    2[COMMON] volatile struct .
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4817 ;;      Params:         0       0       0       0       0
  4818 ;;      Locals:         2       0       0       0       0
  4819 ;;      Temps:          1       0       0       0       0
  4820 ;;      Totals:         3       0       0       0       0
  4821 ;;Total ram usage:        3 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_lcd
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4830                           	line	150
  4831                           global __ptext8
  4832                           __ptext8:	;psect for function _lcddat
  4833  013F                     psect	text8
  4834                           	file	"lcd4bitBus.c"
  4835                           	line	150
  4836                           	global	__size_of_lcddat
  4837                           	__size_of_lcddat	equ	__end_of_lcddat-_lcddat
  4838  002A                     	
  4839                           _lcddat:	
  4840  013F                     ;incstack = 0
  4841                           	opt	stack 5
  4842                           ; Regs used in _lcddat: [wreg+status,2+status,0]
  4843                           ;lcddat@dat stored from wreg
  4844                           	movwf	(lcddat@dat)
  4845  013F  00F1               	line	153
  4846                           	
  4847                           l1581:	
  4848  0140                     ;lcd4bitBus.c: 150: void lcddat( unsigned char dat );lcd4bitBus.c: 151: {;lcd4bitBus.c: 
                                 152:     volatile REGnibble_t nibble;;lcd4bitBus.c: 153:     nibble.HILO = dat;
  4849                           	movf	(lcddat@dat),w
  4850  0140  0871               	movwf	(??_lcddat+0)+0
  4851  0141  00F0               	movf	(??_lcddat+0)+0,w
  4852  0142  0870               	movwf	(lcddat@nibble)	;volatile
  4853  0143  00F2               	line	155
  4854                           	
  4855                           l1583:	
  4856  0144                     ;lcd4bitBus.c: 155:     LCDbits.RS = 1;
  4857                           	bcf	status, 5	;RP0=0, select bank0
  4858  0144  1283               	bcf	status, 6	;RP1=0, select bank0
  4859  0145  1303               	bsf	(8),4	;volatile
  4860  0146  1608               	line	156
  4861                           	
  4862                           l1585:	
  4863  0147                     ;lcd4bitBus.c: 156:     LCDbits.BUS = nibble.HI;
  4864                           	swapf	(lcddat@nibble),w	;volatile
  4865  0147  0E72               	andlw	(1<<4)-1
  4866  0148  390F               	movwf	(??_lcddat+0)+0
  4867  0149  00F0               	movf	(8),w	;volatile
  4868  014A  0808               	xorwf	(??_lcddat+0)+0,w
  4869  014B  0670               	andlw	not ((1<<4)-1)
  4870  014C  39F0               	xorwf	(??_lcddat+0)+0,w
  4871  014D  0670               	movwf	(8)	;volatile
  4872  014E  0088               	line	157
  4873                           	
  4874                           l1587:	
  4875  014F                     ;lcd4bitBus.c: 157:     LCDbits.EN = 0;
  4876                           	bcf	(8),5	;volatile
  4877  014F  1288               	line	158
  4878                           	
  4879                           l1589:	
  4880  0150                     ;lcd4bitBus.c: 158:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4881                           	opt asmopt_push
  4882                           opt asmopt_off
  4883                           	movlw	13
  4884  0150  300D               movwf	((??_lcddat+0)+0),f
  4885  0151  00F0               	u1207:
  4886  0152                     decfsz	(??_lcddat+0)+0,f
  4887  0152  0BF0               	goto	u1207
  4888  0153  2952               opt asmopt_pop
  4889                           
  4890                           	line	159
  4891                           	
  4892                           l1591:	
  4893  0154                     ;lcd4bitBus.c: 159:     LCDbits.EN = 1;
  4894                           	bcf	status, 5	;RP0=0, select bank0
  4895  0154  1283               	bcf	status, 6	;RP1=0, select bank0
  4896  0155  1303               	bsf	(8),5	;volatile
  4897  0156  1688               	line	161
  4898                           	
  4899                           l1593:	
  4900  0157                     ;lcd4bitBus.c: 161:     LCDbits.RS = 1;
  4901                           	bsf	(8),4	;volatile
  4902  0157  1608               	line	162
  4903                           ;lcd4bitBus.c: 162:     LCDbits.BUS = nibble.LO;
  4904                           	movf	(lcddat@nibble),w	;volatile
  4905  0158  0872               	andlw	(1<<4)-1
  4906  0159  390F               	movwf	(??_lcddat+0)+0
  4907  015A  00F0               	movf	(8),w	;volatile
  4908  015B  0808               	xorwf	(??_lcddat+0)+0,w
  4909  015C  0670               	andlw	not ((1<<4)-1)
  4910  015D  39F0               	xorwf	(??_lcddat+0)+0,w
  4911  015E  0670               	movwf	(8)	;volatile
  4912  015F  0088               	line	163
  4913                           	
  4914                           l1595:	
  4915  0160                     ;lcd4bitBus.c: 163:     LCDbits.EN = 0;
  4916                           	bcf	(8),5	;volatile
  4917  0160  1288               	line	164
  4918                           	
  4919                           l1597:	
  4920  0161                     ;lcd4bitBus.c: 164:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4921                           	opt asmopt_push
  4922                           opt asmopt_off
  4923                           	movlw	13
  4924  0161  300D               movwf	((??_lcddat+0)+0),f
  4925  0162  00F0               	u1217:
  4926  0163                     decfsz	(??_lcddat+0)+0,f
  4927  0163  0BF0               	goto	u1217
  4928  0164  2963               opt asmopt_pop
  4929                           
  4930                           	line	165
  4931                           	
  4932                           l1599:	
  4933  0165                     ;lcd4bitBus.c: 165:     LCDbits.EN = 1;
  4934                           	bcf	status, 5	;RP0=0, select bank0
  4935  0165  1283               	bcf	status, 6	;RP1=0, select bank0
  4936  0166  1303               	bsf	(8),5	;volatile
  4937  0167  1688               	line	166
  4938                           	
  4939                           l87:	
  4940  0168                     	return
  4941  0168  0008               	opt stack 0
  4942                           GLOBAL	__end_of_lcddat
  4943                           	__end_of_lcddat:
  4944  0169                     	signat	_lcddat,4217
  4945                           	global	_clearLCD
  4946                           
  4947 ;; *************** function _clearLCD *****************
  4948 ;; Defined at:
  4949 ;;		line 294 in file "lcd4bitBus.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0, pclath, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4963 ;;      Params:         0       0       0       0       0
  4964 ;;      Locals:         0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0
  4966 ;;      Totals:         0       0       0       0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    1
  4970 ;; This function calls:
  4971 ;;		_lcdcmd
  4972 ;; This function is called by:
  4973 ;;		_screen_car
  4974 ;;		_main
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4978                           	line	294
  4979                           global __ptext9
  4980                           __ptext9:	;psect for function _clearLCD
  4981  00B8                     psect	text9
  4982                           	file	"lcd4bitBus.c"
  4983                           	line	294
  4984                           	global	__size_of_clearLCD
  4985                           	__size_of_clearLCD	equ	__end_of_clearLCD-_clearLCD
  4986  0007                     	
  4987                           _clearLCD:	
  4988  00B8                     ;incstack = 0
  4989                           	opt	stack 5
  4990                           ; Regs used in _clearLCD: [wreg+status,2+status,0+pclath+cstack]
  4991                           	line	296
  4992                           	
  4993                           l1611:	
  4994  00B8                     ;lcd4bitBus.c: 296:     lcdcmd(0x01);
  4995                           	movlw	low(01h)
  4996  00B8  3001               	fcall	_lcdcmd
  4997  00B9  120A  118A  22CB  120A  118A  	line	297
  4998                           	
  4999                           l122:	
  5000  00BE                     	return
  5001  00BE  0008               	opt stack 0
  5002                           GLOBAL	__end_of_clearLCD
  5003                           	__end_of_clearLCD:
  5004  00BF                     	signat	_clearLCD,89
  5005                           	global	_putFIFO
  5006                           
  5007 ;; *************** function _putFIFO *****************
  5008 ;; Defined at:
  5009 ;;		line 17 in file "fifo.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  c               1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  c               1    1[COMMON] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5023 ;;      Params:         0       0       0       0       0
  5024 ;;      Locals:         1       0       0       0       0
  5025 ;;      Temps:          1       0       0       0       0
  5026 ;;      Totals:         2       0       0       0       0
  5027 ;;Total ram usage:        2 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_main
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5036                           	file	"fifo.c"
  5037                           	line	17
  5038                           global __ptext10
  5039                           __ptext10:	;psect for function _putFIFO
  5040  00D3                     psect	text10
  5041                           	file	"fifo.c"
  5042                           	line	17
  5043                           	global	__size_of_putFIFO
  5044                           	__size_of_putFIFO	equ	__end_of_putFIFO-_putFIFO
  5045  000E                     	
  5046                           _putFIFO:	
  5047  00D3                     ;incstack = 0
  5048                           	opt	stack 7
  5049                           ; Regs used in _putFIFO: [wreg-fsr0h+status,2+status,0]
  5050                           ;putFIFO@c stored from wreg
  5051                           	movwf	(putFIFO@c)
  5052  00D3  00F1               	line	19
  5053                           	
  5054                           l1635:	
  5055  00D4                     ;fifo.c: 17: void putFIFO( unsigned char c );fifo.c: 18: {;fifo.c: 19:     fifo[ fifoHea
                                 d ] = c;
  5056                           	movf	(putFIFO@c),w
  5057  00D4  0871               	movwf	(??_putFIFO+0)+0
  5058  00D5  00F0               	movf	(_fifoHead),w
  5059  00D6  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5060  00D7  3E25               	movwf	fsr0
  5061  00D8  0084               	movf	(??_putFIFO+0)+0,w
  5062  00D9  0870               	bcf	status, 7	;select IRP bank0
  5063  00DA  1383               	movwf	indf
  5064  00DB  0080               	line	20
  5065                           	
  5066                           l1637:	
  5067  00DC                     ;fifo.c: 20:     ++fifoHead;
  5068                           	movlw	low(01h)
  5069  00DC  3001               	movwf	(??_putFIFO+0)+0
  5070  00DD  00F0               	movf	(??_putFIFO+0)+0,w
  5071  00DE  0870               	addwf	(_fifoHead),f
  5072  00DF  07FD               	line	21
  5073                           	
  5074                           l9:	
  5075  00E0                     	return
  5076  00E0  0008               	opt stack 0
  5077                           GLOBAL	__end_of_putFIFO
  5078                           	__end_of_putFIFO:
  5079  00E1                     	signat	_putFIFO,4217
  5080                           	global	_previousKey
  5081                           
  5082 ;; *************** function _previousKey *****************
  5083 ;; Defined at:
  5084 ;;		line 55 in file "keyboard.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      unsigned char 
  5091 ;; Registers used:
  5092 ;;		wreg
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5098 ;;      Params:         0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_main
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5111                           	file	"keyboard.c"
  5112                           	line	55
  5113                           global __ptext11
  5114                           __ptext11:	;psect for function _previousKey
  5115  00AE                     psect	text11
  5116                           	file	"keyboard.c"
  5117                           	line	55
  5118                           	global	__size_of_previousKey
  5119                           	__size_of_previousKey	equ	__end_of_previousKey-_previousKey
  5120  0005                     	
  5121                           _previousKey:	
  5122  00AE                     ;incstack = 0
  5123                           	opt	stack 7
  5124                           ; Regs used in _previousKey: [wreg]
  5125                           	line	57
  5126                           	
  5127                           l1669:	
  5128  00AE                     ;keyboard.c: 57:     return( prevKey );
  5129                           	bcf	status, 5	;RP0=0, select bank0
  5130  00AE  1283               	bcf	status, 6	;RP1=0, select bank0
  5131  00AF  1303               	movf	(_prevKey),w
  5132  00B0  0824               	goto	l48
  5133  00B1  28B2               	
  5134                           l1671:	
  5135  00B2                     	line	58
  5136                           	
  5137                           l48:	
  5138  00B2                     	return
  5139  00B2  0008               	opt stack 0
  5140                           GLOBAL	__end_of_previousKey
  5141                           	__end_of_previousKey:
  5142  00B3                     	signat	_previousKey,89
  5143                           	global	_keyboardScan
  5144                           
  5145 ;; *************** function _keyboardScan *****************
  5146 ;; Defined at:
  5147 ;;		line 75 in file "keyboard.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  j               1   10[COMMON] unsigned char 
  5152 ;;  i               1    9[COMMON] unsigned char 
  5153 ;;  aux             1    8[COMMON] unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      unsigned char 
  5156 ;; Registers used:
  5157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5163 ;;      Params:         0       0       0       0       0
  5164 ;;      Locals:         3       0       0       0       0
  5165 ;;      Temps:          8       0       0       0       0
  5166 ;;      Totals:        11       0       0       0       0
  5167 ;;Total ram usage:       11 bytes
  5168 ;; Hardware stack levels used:    2
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_main
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5176                           	line	75
  5177                           global __ptext12
  5178                           __ptext12:	;psect for function _keyboardScan
  5179  032A                     psect	text12
  5180                           	file	"keyboard.c"
  5181                           	line	75
  5182                           	global	__size_of_keyboardScan
  5183                           	__size_of_keyboardScan	equ	__end_of_keyboardScan-_keyboardScan
  5184  007F                     	
  5185                           _keyboardScan:	
  5186  032A                     ;incstack = 0
  5187                           	opt	stack 6
  5188                           ; Regs used in _keyboardScan: [wreg-fsr0h+status,2+status,0+pclath]
  5189                           	line	78
  5190                           	
  5191                           l1677:	
  5192  032A                     ;keyboard.c: 77:     unsigned char i, j;;keyboard.c: 78:     unsigned char aux = 0;
  5193                           	clrf	(keyboardScan@aux)
  5194  032A  01F8               	line	80
  5195                           ;keyboard.c: 80:     for( j=0; j<4; j++ )
  5196                           	clrf	(keyboardScan@j)
  5197  032B  01FA               	
  5198                           l1679:	
  5199  032C                     	movlw	low(04h)
  5200  032C  3004               	subwf	(keyboardScan@j),w
  5201  032D  027A               	skipc
  5202  032E  1C03               	goto	u691
  5203  032F  2B31               	goto	u690
  5204  0330  2B32               u691:
  5205  0331                     	goto	l1683
  5206  0331  2B34               u690:
  5207  0332                     	goto	l1703
  5208  0332  2B9D               	
  5209                           l1681:	
  5210  0333                     	goto	l1703
  5211  0333  2B9D               	
  5212                           l54:	
  5213  0334                     	line	82
  5214                           	
  5215                           l1683:	
  5216  0334                     ;keyboard.c: 81:     {;keyboard.c: 82:         KEYBOARDbits.cols = ~(0x01<<j);
  5217                           	movlw	low(01h)
  5218  0334  3001               	movwf	(??_keyboardScan+0)+0
  5219  0335  00F0               	incf	(keyboardScan@j),w
  5220  0336  0A7A               	goto	u704
  5221  0337  2B3A               u705:
  5222  0338                     	clrc
  5223  0338  1003               	rlf	(??_keyboardScan+0)+0,f
  5224  0339  0DF0               u704:
  5225  033A                     	addlw	-1
  5226  033A  3EFF               	skipz
  5227  033B  1D03               	goto	u705
  5228  033C  2B38               	movf	0+(??_keyboardScan+0)+0,w
  5229  033D  0870               	xorlw	0ffh
  5230  033E  3AFF               	movwf	(??_keyboardScan+1)+0
  5231  033F  00F1               	swapf	(??_keyboardScan+1)+0,f
  5232  0340  0EF1               	bcf	status, 5	;RP0=0, select bank0
  5233  0341  1283               	bcf	status, 6	;RP1=0, select bank0
  5234  0342  1303               	movf	(6),w	;volatile
  5235  0343  0806               	xorwf	(??_keyboardScan+1)+0,w
  5236  0344  0671               	andlw	not (((1<<4)-1)<<4)
  5237  0345  390F               	xorwf	(??_keyboardScan+1)+0,w
  5238  0346  0671               	movwf	(6)	;volatile
  5239  0347  0086               	line	83
  5240                           	
  5241                           l1685:	
  5242  0348                     ;keyboard.c: 83:         for( i=0; i<4; i++ )
  5243                           	clrf	(keyboardScan@i)
  5244  0348  01F9               	
  5245                           l1687:	
  5246  0349                     	movlw	low(04h)
  5247  0349  3004               	subwf	(keyboardScan@i),w
  5248  034A  0279               	skipc
  5249  034B  1C03               	goto	u711
  5250  034C  2B4E               	goto	u710
  5251  034D  2B4F               u711:
  5252  034E                     	goto	l1691
  5253  034E  2B51               u710:
  5254  034F                     	goto	l1699
  5255  034F  2B92               	
  5256                           l1689:	
  5257  0350                     	goto	l1699
  5258  0350  2B92               	
  5259                           l56:	
  5260  0351                     	line	85
  5261                           	
  5262                           l1691:	
  5263  0351                     ;keyboard.c: 84:         {;keyboard.c: 85:             if( ~KEYBOARDbits.rows & (0x01<<i
                                 ) )
  5264                           	movf	(6),w	;volatile
  5265  0351  0806               	andlw	(1<<4)-1
  5266  0352  390F               	movwf	(??_keyboardScan+0)+0
  5267  0353  00F0               	comf	(??_keyboardScan+0)+0,w
  5268  0354  0970               	movwf	(??_keyboardScan+1)+0
  5269  0355  00F1               	clrf	(??_keyboardScan+1)+0+1
  5270  0356  01F2               	comf	(??_keyboardScan+1)+0+1
  5271  0357  09F2               	incf	(keyboardScan@i),w
  5272  0358  0A79               	movwf	(??_keyboardScan+3)+0
  5273  0359  00F3               	movlw	01h
  5274  035A  3001               	movwf	(??_keyboardScan+4)+0
  5275  035B  00F4               	movlw	0
  5276  035C  3000               	movwf	(??_keyboardScan+4)+0+1
  5277  035D  00F5               	goto	u724
  5278  035E  2B62               u725:
  5279  035F                     	clrc
  5280  035F  1003               	rlf	(??_keyboardScan+4)+0,f
  5281  0360  0DF4               	rlf	(??_keyboardScan+4)+1,f
  5282  0361  0DF5               u724:
  5283  0362                     	decfsz	(??_keyboardScan+3)+0,f
  5284  0362  0BF3               	goto	u725
  5285  0363  2B5F               	
  5286                           	movf	0+(??_keyboardScan+1)+0,w
  5287  0364  0871               	andwf	0+(??_keyboardScan+4)+0,w
  5288  0365  0574               	movwf	(??_keyboardScan+6)+0
  5289  0366  00F6               	movf	1+(??_keyboardScan+1)+0,w
  5290  0367  0872               	andwf	1+(??_keyboardScan+4)+0,w
  5291  0368  0575               	movwf	1+(??_keyboardScan+6)+0
  5292  0369  00F7               	movf	((??_keyboardScan+6)+0),w
  5293  036A  0876               iorwf	((??_keyboardScan+6)+1),w
  5294  036B  0477               	btfsc	status,2
  5295  036C  1903               	goto	u731
  5296  036D  2B6F               	goto	u730
  5297  036E  2B70               u731:
  5298  036F                     	goto	l1695
  5299  036F  2B87               u730:
  5300  0370                     	line	86
  5301                           	
  5302                           l1693:	
  5303  0370                     ;keyboard.c: 86:                 aux = keyboardMatrix[i][j];
  5304                           	movf	(keyboardScan@i),w
  5305  0370  0879               	movwf	(??_keyboardScan+0)+0
  5306  0371  00F0               	movlw	02h
  5307  0372  3002               u745:
  5308  0373                     	clrc
  5309  0373  1003               	rlf	(??_keyboardScan+0)+0,f
  5310  0374  0DF0               	addlw	-1
  5311  0375  3EFF               	skipz
  5312  0376  1D03               	goto	u745
  5313  0377  2B73               	movlw	(low((((_keyboardMatrix)-__stringbase)|8000h)))&0ffh
  5314  0378  3001               	addwf	0+(??_keyboardScan+0)+0,w
  5315  0379  0770               	movwf	(??_keyboardScan+1)+0
  5316  037A  00F1               	movf	(keyboardScan@j),w
  5317  037B  087A               	addwf	0+(??_keyboardScan+1)+0,w
  5318  037C  0771               	movwf	fsr0
  5319  037D  0084               	fcall	stringdir
  5320  037E  120A  118A  200D  120A  118A  	movwf	(??_keyboardScan+2)+0
  5321  0383  00F2               	movf	(??_keyboardScan+2)+0,w
  5322  0384  0872               	movwf	(keyboardScan@aux)
  5323  0385  00F8               	goto	l1695
  5324  0386  2B87               	
  5325                           l58:	
  5326  0387                     	line	87
  5327                           	
  5328                           l1695:	
  5329  0387                     ;keyboard.c: 87:         }
  5330                           	movlw	low(01h)
  5331  0387  3001               	movwf	(??_keyboardScan+0)+0
  5332  0388  00F0               	movf	(??_keyboardScan+0)+0,w
  5333  0389  0870               	addwf	(keyboardScan@i),f
  5334  038A  07F9               	
  5335                           l1697:	
  5336  038B                     	movlw	low(04h)
  5337  038B  3004               	subwf	(keyboardScan@i),w
  5338  038C  0279               	skipc
  5339  038D  1C03               	goto	u751
  5340  038E  2B90               	goto	u750
  5341  038F  2B91               u751:
  5342  0390                     	goto	l1691
  5343  0390  2B51               u750:
  5344  0391                     	goto	l1699
  5345  0391  2B92               	
  5346                           l57:	
  5347  0392                     	line	88
  5348                           	
  5349                           l1699:	
  5350  0392                     ;keyboard.c: 88:     }
  5351                           	movlw	low(01h)
  5352  0392  3001               	movwf	(??_keyboardScan+0)+0
  5353  0393  00F0               	movf	(??_keyboardScan+0)+0,w
  5354  0394  0870               	addwf	(keyboardScan@j),f
  5355  0395  07FA               	
  5356                           l1701:	
  5357  0396                     	movlw	low(04h)
  5358  0396  3004               	subwf	(keyboardScan@j),w
  5359  0397  027A               	skipc
  5360  0398  1C03               	goto	u761
  5361  0399  2B9B               	goto	u760
  5362  039A  2B9C               u761:
  5363  039B                     	goto	l1683
  5364  039B  2B34               u760:
  5365  039C                     	goto	l1703
  5366  039C  2B9D               	
  5367                           l55:	
  5368  039D                     	line	90
  5369                           	
  5370                           l1703:	
  5371  039D                     ;keyboard.c: 90:     prevKey = currKey;
  5372                           	bcf	status, 5	;RP0=0, select bank0
  5373  039D  1283               	bcf	status, 6	;RP1=0, select bank0
  5374  039E  1303               	movf	(_currKey),w
  5375  039F  0823               	movwf	(??_keyboardScan+0)+0
  5376  03A0  00F0               	movf	(??_keyboardScan+0)+0,w
  5377  03A1  0870               	movwf	(_prevKey)
  5378  03A2  00A4               	line	91
  5379                           ;keyboard.c: 91:     currKey = aux;
  5380                           	movf	(keyboardScan@aux),w
  5381  03A3  0878               	movwf	(??_keyboardScan+0)+0
  5382  03A4  00F0               	movf	(??_keyboardScan+0)+0,w
  5383  03A5  0870               	movwf	(_currKey)
  5384  03A6  00A3               	goto	l59
  5385  03A7  2BA8               	line	93
  5386                           	
  5387                           l1705:	
  5388  03A8                     	line	94
  5389                           ;keyboard.c: 93:     return( aux );;	Return value of _keyboardScan is never used
  5390                           	
  5391                           l59:	
  5392  03A8                     	return
  5393  03A8  0008               	opt stack 0
  5394                           GLOBAL	__end_of_keyboardScan
  5395                           	__end_of_keyboardScan:
  5396  03A9                     	signat	_keyboardScan,89
  5397                           	global	_initSerialIO
  5398                           
  5399 ;; *************** function _initSerialIO *****************
  5400 ;; Defined at:
  5401 ;;		line 89 in file "serialIO.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  ptrIn           1    wreg     PTR unsigned char 
  5404 ;;		 -> main@sensor(1), 
  5405 ;;  ptrOut          1    0[COMMON] PTR unsigned char 
  5406 ;;		 -> main@atuador(1), 
  5407 ;;  length          1    1[COMMON] unsigned char 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  ptrIn           1    3[COMMON] PTR unsigned char 
  5410 ;;		 -> main@sensor(1), 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5420 ;;      Params:         2       0       0       0       0
  5421 ;;      Locals:         1       0       0       0       0
  5422 ;;      Temps:          1       0       0       0       0
  5423 ;;      Totals:         4       0       0       0       0
  5424 ;;Total ram usage:        4 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5433                           	file	"serialIO.c"
  5434                           	line	89
  5435                           global __ptext13
  5436                           __ptext13:	;psect for function _initSerialIO
  5437  01C7                     psect	text13
  5438                           	file	"serialIO.c"
  5439                           	line	89
  5440                           	global	__size_of_initSerialIO
  5441                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
  5442  0034                     	
  5443                           _initSerialIO:	
  5444  01C7                     ;incstack = 0
  5445                           	opt	stack 7
  5446                           ; Regs used in _initSerialIO: [wreg]
  5447                           ;initSerialIO@ptrIn stored from wreg
  5448                           	movwf	(initSerialIO@ptrIn)
  5449  01C7  00F3               	line	91
  5450                           	
  5451                           l1757:	
  5452  01C8                     ;serialIO.c: 89: void initSerialIO( unsigned char * ptrIn, unsigned char * ptrOut, unsig
                                 ned char length );serialIO.c: 90: {;serialIO.c: 91:     ptrSerialIn = ptrIn;
  5453                           	movf	(initSerialIO@ptrIn),w
  5454  01C8  0873               	movwf	(??_initSerialIO+0)+0
  5455  01C9  00F2               	movf	(??_initSerialIO+0)+0,w
  5456  01CA  0872               	bcf	status, 5	;RP0=0, select bank0
  5457  01CB  1283               	bcf	status, 6	;RP1=0, select bank0
  5458  01CC  1303               	movwf	(_ptrSerialIn)
  5459  01CD  00A2               	line	92
  5460                           ;serialIO.c: 92:     ptrSerialOut = ptrOut;
  5461                           	movf	(initSerialIO@ptrOut),w
  5462  01CE  0870               	movwf	(??_initSerialIO+0)+0
  5463  01CF  00F2               	movf	(??_initSerialIO+0)+0,w
  5464  01D0  0872               	movwf	(_ptrSerialOut)
  5465  01D1  00A1               	line	93
  5466                           ;serialIO.c: 93:     lenSerialIO = length;
  5467                           	movf	(initSerialIO@length),w
  5468  01D2  0871               	movwf	(??_initSerialIO+0)+0
  5469  01D3  00F2               	movf	(??_initSerialIO+0)+0,w
  5470  01D4  0872               	movwf	(_lenSerialIO)
  5471  01D5  00A0               	line	95
  5472                           	
  5473                           l1759:	
  5474  01D6                     ;serialIO.c: 95:     PORTEbits.RE0 = 0;
  5475                           	bcf	(9),0	;volatile
  5476  01D6  1009               	line	96
  5477                           	
  5478                           l1761:	
  5479  01D7                     ;serialIO.c: 96:     ANSELbits.ANS5 = 0;
  5480                           	bsf	status, 5	;RP0=1, select bank3
  5481  01D7  1683               	bsf	status, 6	;RP1=1, select bank3
  5482  01D8  1703               	bcf	(392)^0180h,5	;volatile
  5483  01D9  1288               	line	97
  5484                           	
  5485                           l1763:	
  5486  01DA                     ;serialIO.c: 97:     TRISEbits.TRISE0 = 0;
  5487                           	bsf	status, 5	;RP0=1, select bank1
  5488  01DA  1683               	bcf	status, 6	;RP1=0, select bank1
  5489  01DB  1303               	bcf	(137)^080h,0	;volatile
  5490  01DC  1009               	line	100
  5491                           	
  5492                           l1765:	
  5493  01DD                     ;serialIO.c: 100:     PORTEbits.RE1 = 0;
  5494                           	bcf	status, 5	;RP0=0, select bank0
  5495  01DD  1283               	bcf	status, 6	;RP1=0, select bank0
  5496  01DE  1303               	bcf	(9),1	;volatile
  5497  01DF  1089               	line	101
  5498                           	
  5499                           l1767:	
  5500  01E0                     ;serialIO.c: 101:     ANSELbits.ANS6 = 0;
  5501                           	bsf	status, 5	;RP0=1, select bank3
  5502  01E0  1683               	bsf	status, 6	;RP1=1, select bank3
  5503  01E1  1703               	bcf	(392)^0180h,6	;volatile
  5504  01E2  1308               	line	102
  5505                           	
  5506                           l1769:	
  5507  01E3                     ;serialIO.c: 102:     TRISEbits.TRISE1 = 0;
  5508                           	bsf	status, 5	;RP0=1, select bank1
  5509  01E3  1683               	bcf	status, 6	;RP1=0, select bank1
  5510  01E4  1303               	bcf	(137)^080h,1	;volatile
  5511  01E5  1089               	line	105
  5512                           	
  5513                           l1771:	
  5514  01E6                     ;serialIO.c: 105:     PORTEbits.RE2 = 0;
  5515                           	bcf	status, 5	;RP0=0, select bank0
  5516  01E6  1283               	bcf	status, 6	;RP1=0, select bank0
  5517  01E7  1303               	bcf	(9),2	;volatile
  5518  01E8  1109               	line	106
  5519                           	
  5520                           l1773:	
  5521  01E9                     ;serialIO.c: 106:     ANSELbits.ANS7 = 0;
  5522                           	bsf	status, 5	;RP0=1, select bank3
  5523  01E9  1683               	bsf	status, 6	;RP1=1, select bank3
  5524  01EA  1703               	bcf	(392)^0180h,7	;volatile
  5525  01EB  1388               	line	107
  5526                           	
  5527                           l1775:	
  5528  01EC                     ;serialIO.c: 107:     TRISEbits.TRISE2 = 0;
  5529                           	bsf	status, 5	;RP0=1, select bank1
  5530  01EC  1683               	bcf	status, 6	;RP1=0, select bank1
  5531  01ED  1303               	bcf	(137)^080h,2	;volatile
  5532  01EE  1109               	line	112
  5533                           	
  5534                           l1777:	
  5535  01EF                     ;serialIO.c: 112:     ANSELbits.ANS0 = 0;
  5536                           	bsf	status, 5	;RP0=1, select bank3
  5537  01EF  1683               	bsf	status, 6	;RP1=1, select bank3
  5538  01F0  1703               	bcf	(392)^0180h,0	;volatile
  5539  01F1  1008               	line	113
  5540                           	
  5541                           l1779:	
  5542  01F2                     ;serialIO.c: 113:     TRISAbits.TRISA0 = 1;
  5543                           	bsf	status, 5	;RP0=1, select bank1
  5544  01F2  1683               	bcf	status, 6	;RP1=0, select bank1
  5545  01F3  1303               	bsf	(133)^080h,0	;volatile
  5546  01F4  1405               	line	117
  5547                           	
  5548                           l1781:	
  5549  01F5                     ;serialIO.c: 117:     SERIALIO.CLK = 0;
  5550                           	bcf	status, 5	;RP0=0, select bank0
  5551  01F5  1283               	bcf	status, 6	;RP1=0, select bank0
  5552  01F6  1303               	bcf	(9),1	;volatile
  5553  01F7  1089               	line	118
  5554                           	
  5555                           l1783:	
  5556  01F8                     ;serialIO.c: 118:     SERIALIO.OUT = 0;
  5557                           	bcf	(9),2	;volatile
  5558  01F8  1109               	line	119
  5559                           	
  5560                           l1785:	
  5561  01F9                     ;serialIO.c: 119:     SERIALIO.SHLD = 1;
  5562                           	bsf	(9),0	;volatile
  5563  01F9  1409               	line	120
  5564                           	
  5565                           l320:	
  5566  01FA                     	return
  5567  01FA  0008               	opt stack 0
  5568                           GLOBAL	__end_of_initSerialIO
  5569                           	__end_of_initSerialIO:
  5570  01FB                     	signat	_initSerialIO,12409
  5571                           	global	_initLCD
  5572                           
  5573 ;; *************** function _initLCD *****************
  5574 ;; Defined at:
  5575 ;;		line 261 in file "lcd4bitBus.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  j               1    0        unsigned char 
  5580 ;;  i               1    0        unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0, pclath, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5590 ;;      Params:         0       0       0       0       0
  5591 ;;      Locals:         0       0       0       0       0
  5592 ;;      Temps:          3       0       0       0       0
  5593 ;;      Totals:         3       0       0       0       0
  5594 ;;Total ram usage:        3 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    1
  5597 ;; This function calls:
  5598 ;;		_lcdcmd
  5599 ;; This function is called by:
  5600 ;;		_main
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5604                           	file	"lcd4bitBus.c"
  5605                           	line	261
  5606                           global __ptext14
  5607                           __ptext14:	;psect for function _initLCD
  5608  0272                     psect	text14
  5609                           	file	"lcd4bitBus.c"
  5610                           	line	261
  5611                           	global	__size_of_initLCD
  5612                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5613  0059                     	
  5614                           _initLCD:	
  5615  0272                     ;incstack = 0
  5616                           	opt	stack 6
  5617                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5618                           	line	264
  5619                           	
  5620                           l1731:	
  5621  0272                     ;lcd4bitBus.c: 263:     unsigned char i,j;;lcd4bitBus.c: 264:     LCDbits.BUS = 0;
  5622                           	movlw	((0 & ((1<<4)-1))<<0)|not (((1<<4)-1)<<0)
  5623  0272  30F0               	bcf	status, 5	;RP0=0, select bank0
  5624  0273  1283               	bcf	status, 6	;RP1=0, select bank0
  5625  0274  1303               	andwf	(8),f	;volatile
  5626  0275  0588               	line	265
  5627                           	
  5628                           l1733:	
  5629  0276                     ;lcd4bitBus.c: 265:     LCDbits.RS = 0;
  5630                           	bcf	(8),4	;volatile
  5631  0276  1208               	line	266
  5632                           	
  5633                           l1735:	
  5634  0277                     ;lcd4bitBus.c: 266:     LCDbits.EN = 1;
  5635                           	bsf	(8),5	;volatile
  5636  0277  1688               	line	267
  5637                           	
  5638                           l1737:	
  5639  0278                     ;lcd4bitBus.c: 267:     TRISD = 0xC0;
  5640                           	movlw	low(0C0h)
  5641  0278  30C0               	bsf	status, 5	;RP0=1, select bank1
  5642  0279  1683               	bcf	status, 6	;RP1=0, select bank1
  5643  027A  1303               	movwf	(136)^080h	;volatile
  5644  027B  0088               	line	269
  5645                           	
  5646                           l1739:	
  5647  027C                     ;lcd4bitBus.c: 269:     _delay((unsigned long)((10)*(4000000/4000.0)));
  5648                           	opt asmopt_push
  5649                           opt asmopt_off
  5650                           movlw	13
  5651  027C  300D               movwf	((??_initLCD+0)+0+1),f
  5652  027D  00F5               	movlw	251
  5653  027E  30FB               movwf	((??_initLCD+0)+0),f
  5654  027F  00F4               	u1227:
  5655  0280                     decfsz	((??_initLCD+0)+0),f
  5656  0280  0BF4               	goto	u1227
  5657  0281  2A80               	decfsz	((??_initLCD+0)+0+1),f
  5658  0282  0BF5               	goto	u1227
  5659  0283  2A80               	nop2
  5660  0284  2A85               opt asmopt_pop
  5661                           
  5662                           	line	270
  5663                           	
  5664                           l1741:	
  5665  0285                     ;lcd4bitBus.c: 270:     lcdcmd(0x20 | 0x00 );
  5666                           	movlw	low(020h)
  5667  0285  3020               	fcall	_lcdcmd
  5668  0286  120A  118A  22CB  120A  118A  	line	271
  5669                           	
  5670                           l1743:	
  5671  028B                     ;lcd4bitBus.c: 271:     _delay((unsigned long)((1000/4)*(4000000/4000.0)));
  5672                           	opt asmopt_push
  5673                           opt asmopt_off
  5674                           movlw  2
  5675  028B  3002               movwf	((??_initLCD+0)+0+2),f
  5676  028C  00F6               movlw	69
  5677  028D  3045               movwf	((??_initLCD+0)+0+1),f
  5678  028E  00F5               	movlw	169
  5679  028F  30A9               movwf	((??_initLCD+0)+0),f
  5680  0290  00F4               	u1237:
  5681  0291                     decfsz	((??_initLCD+0)+0),f
  5682  0291  0BF4               	goto	u1237
  5683  0292  2A91               	decfsz	((??_initLCD+0)+0+1),f
  5684  0293  0BF5               	goto	u1237
  5685  0294  2A91               	decfsz	((??_initLCD+0)+0+2),f
  5686  0295  0BF6               	goto	u1237
  5687  0296  2A91               	nop2
  5688  0297  2A98               opt asmopt_pop
  5689                           
  5690                           	line	272
  5691                           	
  5692                           l1745:	
  5693  0298                     ;lcd4bitBus.c: 272:     lcdcmd(0x20 | 0x08 );
  5694                           	movlw	low(028h)
  5695  0298  3028               	fcall	_lcdcmd
  5696  0299  120A  118A  22CB  120A  118A  	line	273
  5697                           	
  5698                           l1747:	
  5699  029E                     ;lcd4bitBus.c: 273:     _delay((unsigned long)((1000/4)*(4000000/4000.0)));
  5700                           	opt asmopt_push
  5701                           opt asmopt_off
  5702                           movlw  2
  5703  029E  3002               movwf	((??_initLCD+0)+0+2),f
  5704  029F  00F6               movlw	69
  5705  02A0  3045               movwf	((??_initLCD+0)+0+1),f
  5706  02A1  00F5               	movlw	169
  5707  02A2  30A9               movwf	((??_initLCD+0)+0),f
  5708  02A3  00F4               	u1247:
  5709  02A4                     decfsz	((??_initLCD+0)+0),f
  5710  02A4  0BF4               	goto	u1247
  5711  02A5  2AA4               	decfsz	((??_initLCD+0)+0+1),f
  5712  02A6  0BF5               	goto	u1247
  5713  02A7  2AA4               	decfsz	((??_initLCD+0)+0+2),f
  5714  02A8  0BF6               	goto	u1247
  5715  02A9  2AA4               	nop2
  5716  02AA  2AAB               opt asmopt_pop
  5717                           
  5718                           	line	274
  5719                           	
  5720                           l1749:	
  5721  02AB                     ;lcd4bitBus.c: 274:     lcdcmd(0x08 | 0x04 );
  5722                           	movlw	low(0Ch)
  5723  02AB  300C               	fcall	_lcdcmd
  5724  02AC  120A  118A  22CB  120A  118A  	line	275
  5725                           	
  5726                           l1751:	
  5727  02B1                     ;lcd4bitBus.c: 275:     _delay((unsigned long)((1000/4)*(4000000/4000.0)));
  5728                           	opt asmopt_push
  5729                           opt asmopt_off
  5730                           movlw  2
  5731  02B1  3002               movwf	((??_initLCD+0)+0+2),f
  5732  02B2  00F6               movlw	69
  5733  02B3  3045               movwf	((??_initLCD+0)+0+1),f
  5734  02B4  00F5               	movlw	169
  5735  02B5  30A9               movwf	((??_initLCD+0)+0),f
  5736  02B6  00F4               	u1257:
  5737  02B7                     decfsz	((??_initLCD+0)+0),f
  5738  02B7  0BF4               	goto	u1257
  5739  02B8  2AB7               	decfsz	((??_initLCD+0)+0+1),f
  5740  02B9  0BF5               	goto	u1257
  5741  02BA  2AB7               	decfsz	((??_initLCD+0)+0+2),f
  5742  02BB  0BF6               	goto	u1257
  5743  02BC  2AB7               	nop2
  5744  02BD  2ABE               opt asmopt_pop
  5745                           
  5746                           	line	288
  5747                           	
  5748                           l1753:	
  5749  02BE                     ;lcd4bitBus.c: 288:     lcdcmd( 0x01 );
  5750                           	movlw	low(01h)
  5751  02BE  3001               	fcall	_lcdcmd
  5752  02BF  120A  118A  22CB  120A  118A  	line	289
  5753                           	
  5754                           l1755:	
  5755  02C4                     ;lcd4bitBus.c: 289:     lcdcmd( 0x02 );
  5756                           	movlw	low(02h)
  5757  02C4  3002               	fcall	_lcdcmd
  5758  02C5  120A  118A  22CB  120A  118A  	line	292
  5759                           	
  5760                           l119:	
  5761  02CA                     	return
  5762  02CA  0008               	opt stack 0
  5763                           GLOBAL	__end_of_initLCD
  5764                           	__end_of_initLCD:
  5765  02CB                     	signat	_initLCD,89
  5766                           	global	_lcdcmd
  5767                           
  5768 ;; *************** function _lcdcmd *****************
  5769 ;; Defined at:
  5770 ;;		line 116 in file "lcd4bitBus.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  cmd             1    wreg     unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  cmd             1    2[COMMON] unsigned char 
  5775 ;;  nibble          1    3[COMMON] volatile struct .
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5785 ;;      Params:         0       0       0       0       0
  5786 ;;      Locals:         2       0       0       0       0
  5787 ;;      Temps:          2       0       0       0       0
  5788 ;;      Totals:         4       0       0       0       0
  5789 ;;Total ram usage:        4 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_lcdxy
  5795 ;;		_initLCD
  5796 ;;		_clearLCD
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5800                           	line	116
  5801                           global __ptext15
  5802                           __ptext15:	;psect for function _lcdcmd
  5803  02CB                     psect	text15
  5804                           	file	"lcd4bitBus.c"
  5805                           	line	116
  5806                           	global	__size_of_lcdcmd
  5807                           	__size_of_lcdcmd	equ	__end_of_lcdcmd-_lcdcmd
  5808  005F                     	
  5809                           _lcdcmd:	
  5810  02CB                     ;incstack = 0
  5811                           	opt	stack 4
  5812                           ; Regs used in _lcdcmd: [wreg+status,2+status,0]
  5813                           ;lcdcmd@cmd stored from wreg
  5814                           	movwf	(lcdcmd@cmd)
  5815  02CB  00F2               	line	120
  5816                           	
  5817                           l1547:	
  5818  02CC                     ;lcd4bitBus.c: 116: void lcdcmd( unsigned char cmd );lcd4bitBus.c: 117: {;lcd4bitBus.c: 
                                 118:     volatile REGnibble_t nibble;;lcd4bitBus.c: 120:     nibble.HILO = cmd;
  5819                           	movf	(lcdcmd@cmd),w
  5820  02CC  0872               	movwf	(??_lcdcmd+0)+0
  5821  02CD  00F0               	movf	(??_lcdcmd+0)+0,w
  5822  02CE  0870               	movwf	(lcdcmd@nibble)	;volatile
  5823  02CF  00F3               	line	121
  5824                           	
  5825                           l1549:	
  5826  02D0                     ;lcd4bitBus.c: 121:     LCDbits.RS = 0;
  5827                           	bcf	status, 5	;RP0=0, select bank0
  5828  02D0  1283               	bcf	status, 6	;RP1=0, select bank0
  5829  02D1  1303               	bcf	(8),4	;volatile
  5830  02D2  1208               	line	122
  5831                           	
  5832                           l1551:	
  5833  02D3                     ;lcd4bitBus.c: 122:     LCDbits.BUS = nibble.HI;
  5834                           	swapf	(lcdcmd@nibble),w	;volatile
  5835  02D3  0E73               	andlw	(1<<4)-1
  5836  02D4  390F               	movwf	(??_lcdcmd+0)+0
  5837  02D5  00F0               	movf	(8),w	;volatile
  5838  02D6  0808               	xorwf	(??_lcdcmd+0)+0,w
  5839  02D7  0670               	andlw	not ((1<<4)-1)
  5840  02D8  39F0               	xorwf	(??_lcdcmd+0)+0,w
  5841  02D9  0670               	movwf	(8)	;volatile
  5842  02DA  0088               	line	124
  5843                           	
  5844                           l1553:	
  5845  02DB                     ;lcd4bitBus.c: 124:     LCDbits.EN = 0;
  5846                           	bcf	(8),5	;volatile
  5847  02DB  1288               	line	125
  5848                           	
  5849                           l1555:	
  5850  02DC                     ;lcd4bitBus.c: 125:     if( cmd == 0x01 || cmd == 0x02 )
  5851                           		decf	((lcdcmd@cmd)),w
  5852  02DC  0372               	btfsc	status,2
  5853  02DD  1903               	goto	u561
  5854  02DE  2AE0               	goto	u560
  5855  02DF  2AE1               u561:
  5856  02E0                     	goto	l1559
  5857  02E0  2AE8               u560:
  5858  02E1                     	
  5859                           l1557:	
  5860  02E1                     		movlw	2
  5861  02E1  3002               	xorwf	((lcdcmd@cmd)),w
  5862  02E2  0672               	btfss	status,2
  5863  02E3  1D03               	goto	u571
  5864  02E4  2AE6               	goto	u570
  5865  02E5  2AE7               u571:
  5866  02E6                     	goto	l1561
  5867  02E6  2AF2               u570:
  5868  02E7                     	goto	l1559
  5869  02E7  2AE8               	
  5870                           l77:	
  5871  02E8                     	line	126
  5872                           	
  5873                           l1559:	
  5874  02E8                     ;lcd4bitBus.c: 126:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5875                           	opt asmopt_push
  5876                           opt asmopt_off
  5877                           movlw	3
  5878  02E8  3003               movwf	((??_lcdcmd+0)+0+1),f
  5879  02E9  00F1               	movlw	151
  5880  02EA  3097               movwf	((??_lcdcmd+0)+0),f
  5881  02EB  00F0               	u1267:
  5882  02EC                     decfsz	((??_lcdcmd+0)+0),f
  5883  02EC  0BF0               	goto	u1267
  5884  02ED  2AEC               	decfsz	((??_lcdcmd+0)+0+1),f
  5885  02EE  0BF1               	goto	u1267
  5886  02EF  2AEC               	nop2
  5887  02F0  2AF1               opt asmopt_pop
  5888                           
  5889                           	goto	l1563
  5890  02F1  2AF7               	line	127
  5891                           ;lcd4bitBus.c: 127:     else
  5892                           	
  5893                           l75:	
  5894  02F2                     	line	128
  5895                           	
  5896                           l1561:	
  5897  02F2                     ;lcd4bitBus.c: 128:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5898                           	opt asmopt_push
  5899                           opt asmopt_off
  5900                           	movlw	13
  5901  02F2  300D               movwf	((??_lcdcmd+0)+0),f
  5902  02F3  00F0               	u1277:
  5903  02F4                     decfsz	(??_lcdcmd+0)+0,f
  5904  02F4  0BF0               	goto	u1277
  5905  02F5  2AF4               opt asmopt_pop
  5906                           
  5907                           	goto	l1563
  5908  02F6  2AF7               	
  5909                           l78:	
  5910  02F7                     	line	129
  5911                           	
  5912                           l1563:	
  5913  02F7                     ;lcd4bitBus.c: 129:     LCDbits.EN = 1;
  5914                           	bcf	status, 5	;RP0=0, select bank0
  5915  02F7  1283               	bcf	status, 6	;RP1=0, select bank0
  5916  02F8  1303               	bsf	(8),5	;volatile
  5917  02F9  1688               	line	132
  5918                           	
  5919                           l1565:	
  5920  02FA                     ;lcd4bitBus.c: 132:     if( cmd != (0x20 | 0x00) )
  5921                           		movlw	32
  5922  02FA  3020               	xorwf	((lcdcmd@cmd)),w
  5923  02FB  0672               	btfsc	status,2
  5924  02FC  1903               	goto	u581
  5925  02FD  2AFF               	goto	u580
  5926  02FE  2B00               u581:
  5927  02FF                     	goto	l84
  5928  02FF  2B29               u580:
  5929  0300                     	line	134
  5930                           	
  5931                           l1567:	
  5932  0300                     ;lcd4bitBus.c: 133:     {;lcd4bitBus.c: 134:         LCDbits.RS = 0;
  5933                           	bcf	(8),4	;volatile
  5934  0300  1208               	line	135
  5935                           	
  5936                           l1569:	
  5937  0301                     ;lcd4bitBus.c: 135:         LCDbits.BUS = nibble.LO;
  5938                           	movf	(lcdcmd@nibble),w	;volatile
  5939  0301  0873               	andlw	(1<<4)-1
  5940  0302  390F               	movwf	(??_lcdcmd+0)+0
  5941  0303  00F0               	movf	(8),w	;volatile
  5942  0304  0808               	xorwf	(??_lcdcmd+0)+0,w
  5943  0305  0670               	andlw	not ((1<<4)-1)
  5944  0306  39F0               	xorwf	(??_lcdcmd+0)+0,w
  5945  0307  0670               	movwf	(8)	;volatile
  5946  0308  0088               	line	136
  5947                           	
  5948                           l1571:	
  5949  0309                     ;lcd4bitBus.c: 136:         LCDbits.EN = 0;
  5950                           	bcf	(8),5	;volatile
  5951  0309  1288               	line	137
  5952                           ;lcd4bitBus.c: 137:         if( cmd == 0x01 || cmd == 0x02 )
  5953                           		decf	((lcdcmd@cmd)),w
  5954  030A  0372               	btfsc	status,2
  5955  030B  1903               	goto	u591
  5956  030C  2B0E               	goto	u590
  5957  030D  2B0F               u591:
  5958  030E                     	goto	l1575
  5959  030E  2B16               u590:
  5960  030F                     	
  5961                           l1573:	
  5962  030F                     		movlw	2
  5963  030F  3002               	xorwf	((lcdcmd@cmd)),w
  5964  0310  0672               	btfss	status,2
  5965  0311  1D03               	goto	u601
  5966  0312  2B14               	goto	u600
  5967  0313  2B15               u601:
  5968  0314                     	goto	l1577
  5969  0314  2B20               u600:
  5970  0315                     	goto	l1575
  5971  0315  2B16               	
  5972                           l82:	
  5973  0316                     	line	138
  5974                           	
  5975                           l1575:	
  5976  0316                     ;lcd4bitBus.c: 138:             _delay((unsigned long)((2)*(4000000/4000.0)));
  5977                           	opt asmopt_push
  5978                           opt asmopt_off
  5979                           movlw	3
  5980  0316  3003               movwf	((??_lcdcmd+0)+0+1),f
  5981  0317  00F1               	movlw	151
  5982  0318  3097               movwf	((??_lcdcmd+0)+0),f
  5983  0319  00F0               	u1287:
  5984  031A                     decfsz	((??_lcdcmd+0)+0),f
  5985  031A  0BF0               	goto	u1287
  5986  031B  2B1A               	decfsz	((??_lcdcmd+0)+0+1),f
  5987  031C  0BF1               	goto	u1287
  5988  031D  2B1A               	nop2
  5989  031E  2B1F               opt asmopt_pop
  5990                           
  5991                           	goto	l1579
  5992  031F  2B25               	line	139
  5993                           ;lcd4bitBus.c: 139:         else
  5994                           	
  5995                           l80:	
  5996  0320                     	line	140
  5997                           	
  5998                           l1577:	
  5999  0320                     ;lcd4bitBus.c: 140:             _delay((unsigned long)((40)*(4000000/4000000.0)));
  6000                           	opt asmopt_push
  6001                           opt asmopt_off
  6002                           	movlw	13
  6003  0320  300D               movwf	((??_lcdcmd+0)+0),f
  6004  0321  00F0               	u1297:
  6005  0322                     decfsz	(??_lcdcmd+0)+0,f
  6006  0322  0BF0               	goto	u1297
  6007  0323  2B22               opt asmopt_pop
  6008                           
  6009                           	goto	l1579
  6010  0324  2B25               	
  6011                           l83:	
  6012  0325                     	line	141
  6013                           	
  6014                           l1579:	
  6015  0325                     ;lcd4bitBus.c: 141:         LCDbits.EN = 1;
  6016                           	bcf	status, 5	;RP0=0, select bank0
  6017  0325  1283               	bcf	status, 6	;RP1=0, select bank0
  6018  0326  1303               	bsf	(8),5	;volatile
  6019  0327  1688               	goto	l84
  6020  0328  2B29               	line	142
  6021                           ;lcd4bitBus.c: 142:     }
  6022                           	
  6023                           l79:	
  6024  0329                     	line	143
  6025                           	
  6026                           l84:	
  6027  0329                     	return
  6028  0329  0008               	opt stack 0
  6029                           GLOBAL	__end_of_lcdcmd
  6030                           	__end_of_lcdcmd:
  6031  032A                     	signat	_lcdcmd,4217
  6032                           	global	_initKeyboard
  6033                           
  6034 ;; *************** function _initKeyboard *****************
  6035 ;; Defined at:
  6036 ;;		line 103 in file "keyboard.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6050 ;;      Params:         0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  6063                           	file	"keyboard.c"
  6064                           	line	103
  6065                           global __ptext16
  6066                           __ptext16:	;psect for function _initKeyboard
  6067  00E1                     psect	text16
  6068                           	file	"keyboard.c"
  6069                           	line	103
  6070                           	global	__size_of_initKeyboard
  6071                           	__size_of_initKeyboard	equ	__end_of_initKeyboard-_initKeyboard
  6072  0013                     	
  6073                           _initKeyboard:	
  6074  00E1                     ;incstack = 0
  6075                           	opt	stack 7
  6076                           ; Regs used in _initKeyboard: [wreg+status,2]
  6077                           	line	105
  6078                           	
  6079                           l1707:	
  6080  00E1                     ;keyboard.c: 105:     PORTB = 0xFF;
  6081                           	movlw	low(0FFh)
  6082  00E1  30FF               	bcf	status, 5	;RP0=0, select bank0
  6083  00E2  1283               	bcf	status, 6	;RP1=0, select bank0
  6084  00E3  1303               	movwf	(6)	;volatile
  6085  00E4  0086               	line	106
  6086                           	
  6087                           l1709:	
  6088  00E5                     ;keyboard.c: 106:     ANSELH = 0;
  6089                           	bsf	status, 5	;RP0=1, select bank3
  6090  00E5  1683               	bsf	status, 6	;RP1=1, select bank3
  6091  00E6  1703               	clrf	(393)^0180h	;volatile
  6092  00E7  0189               	line	107
  6093                           	
  6094                           l1711:	
  6095  00E8                     ;keyboard.c: 107:     TRISB = 0x0F;
  6096                           	movlw	low(0Fh)
  6097  00E8  300F               	bsf	status, 5	;RP0=1, select bank1
  6098  00E9  1683               	bcf	status, 6	;RP1=0, select bank1
  6099  00EA  1303               	movwf	(134)^080h	;volatile
  6100  00EB  0086               	line	108
  6101                           	
  6102                           l1713:	
  6103  00EC                     ;keyboard.c: 108:     WPUB = 0xFF;
  6104                           	movlw	low(0FFh)
  6105  00EC  30FF               	movwf	(149)^080h	;volatile
  6106  00ED  0095               	line	109
  6107                           	
  6108                           l1715:	
  6109  00EE                     ;keyboard.c: 109:     OPTION_REGbits.nRBPU = 0;
  6110                           	bcf	(129)^080h,7	;volatile
  6111  00EE  1381               	line	111
  6112                           	
  6113                           l1717:	
  6114  00EF                     ;keyboard.c: 111:     prevKey = 0;
  6115                           	bcf	status, 5	;RP0=0, select bank0
  6116  00EF  1283               	bcf	status, 6	;RP1=0, select bank0
  6117  00F0  1303               	clrf	(_prevKey)
  6118  00F1  01A4               	line	112
  6119                           	
  6120                           l1719:	
  6121  00F2                     ;keyboard.c: 112:     currKey = 0;
  6122                           	clrf	(_currKey)
  6123  00F2  01A3               	line	113
  6124                           	
  6125                           l62:	
  6126  00F3                     	return
  6127  00F3  0008               	opt stack 0
  6128                           GLOBAL	__end_of_initKeyboard
  6129                           	__end_of_initKeyboard:
  6130  00F4                     	signat	_initKeyboard,89
  6131                           	global	_getFIFO
  6132                           
  6133 ;; *************** function _getFIFO *****************
  6134 ;; Defined at:
  6135 ;;		line 23 in file "fifo.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;		None
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  aux             1    1[COMMON] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      unsigned char 
  6142 ;; Registers used:
  6143 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6149 ;;      Params:         0       0       0       0       0
  6150 ;;      Locals:         1       0       0       0       0
  6151 ;;      Temps:          1       0       0       0       0
  6152 ;;      Totals:         2       0       0       0       0
  6153 ;;Total ram usage:        2 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; This function calls:
  6156 ;;		Nothing
  6157 ;; This function is called by:
  6158 ;;		_main
  6159 ;;		_fifo2lcd
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6163                           	file	"fifo.c"
  6164                           	line	23
  6165                           global __ptext17
  6166                           __ptext17:	;psect for function _getFIFO
  6167  0107                     psect	text17
  6168                           	file	"fifo.c"
  6169                           	line	23
  6170                           	global	__size_of_getFIFO
  6171                           	__size_of_getFIFO	equ	__end_of_getFIFO-_getFIFO
  6172  0017                     	
  6173                           _getFIFO:	
  6174  0107                     ;incstack = 0
  6175                           	opt	stack 7
  6176                           ; Regs used in _getFIFO: [wreg-fsr0h+status,2+status,0]
  6177                           	line	25
  6178                           	
  6179                           l1639:	
  6180  0107                     ;fifo.c: 25:     unsigned char aux = 0;
  6181                           	clrf	(getFIFO@aux)
  6182  0107  01F1               	line	27
  6183                           	
  6184                           l1641:	
  6185  0108                     ;fifo.c: 27:     if( fifoTail != fifoHead )
  6186                           	movf	(_fifoTail),w
  6187  0108  087C               	xorwf	(_fifoHead),w
  6188  0109  067D               	skipnz
  6189  010A  1903               	goto	u661
  6190  010B  290D               	goto	u660
  6191  010C  290E               u661:
  6192  010D                     	goto	l1647
  6193  010D  291B               u660:
  6194  010E                     	line	29
  6195                           	
  6196                           l1643:	
  6197  010E                     ;fifo.c: 28:     {;fifo.c: 29:         aux = fifo[ fifoTail ];
  6198                           	movf	(_fifoTail),w
  6199  010E  087C               	addlw	low(_fifo|((0x0)<<8))&0ffh
  6200  010F  3E25               	movwf	fsr0
  6201  0110  0084               	bcf	status, 7	;select IRP bank0
  6202  0111  1383               	movf	indf,w
  6203  0112  0800               	movwf	(??_getFIFO+0)+0
  6204  0113  00F0               	movf	(??_getFIFO+0)+0,w
  6205  0114  0870               	movwf	(getFIFO@aux)
  6206  0115  00F1               	line	30
  6207                           	
  6208                           l1645:	
  6209  0116                     ;fifo.c: 30:         ++fifoTail;
  6210                           	movlw	low(01h)
  6211  0116  3001               	movwf	(??_getFIFO+0)+0
  6212  0117  00F0               	movf	(??_getFIFO+0)+0,w
  6213  0118  0870               	addwf	(_fifoTail),f
  6214  0119  07FC               	goto	l1647
  6215  011A  291B               	line	31
  6216                           ;fifo.c: 31:     }
  6217                           	
  6218                           l12:	
  6219  011B                     	line	32
  6220                           	
  6221                           l1647:	
  6222  011B                     ;fifo.c: 32:     return( aux );
  6223                           	movf	(getFIFO@aux),w
  6224  011B  0871               	goto	l13
  6225  011C  291D               	
  6226                           l1649:	
  6227  011D                     	line	33
  6228                           	
  6229                           l13:	
  6230  011D                     	return
  6231  011D  0008               	opt stack 0
  6232                           GLOBAL	__end_of_getFIFO
  6233                           	__end_of_getFIFO:
  6234  011E                     	signat	_getFIFO,89
  6235                           	global	_displayFIFO
  6236                           
  6237 ;; *************** function _displayFIFO *****************
  6238 ;; Defined at:
  6239 ;;		line 40 in file "fifo.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;		None
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      PTR void 
  6246 ;; Registers used:
  6247 ;;		wreg
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         0       0       0       0       0
  6254 ;;      Locals:         0       0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0
  6256 ;;      Totals:         0       0       0       0       0
  6257 ;;Total ram usage:        0 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_main
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6266                           	line	40
  6267                           global __ptext18
  6268                           __ptext18:	;psect for function _displayFIFO
  6269  00A6                     psect	text18
  6270                           	file	"fifo.c"
  6271                           	line	40
  6272                           	global	__size_of_displayFIFO
  6273                           	__size_of_displayFIFO	equ	__end_of_displayFIFO-_displayFIFO
  6274  0003                     	
  6275                           _displayFIFO:	
  6276  00A6                     ;incstack = 0
  6277                           	opt	stack 7
  6278                           ; Regs used in _displayFIFO: [wreg]
  6279                           	line	42
  6280                           	
  6281                           l1651:	
  6282  00A6                     ;fifo.c: 42:     return( fifo );
  6283                           	movlw	(low(_fifo|((0x0)<<8)))&0ffh
  6284  00A6  3025               	goto	l19
  6285  00A7  28A8               	
  6286                           l1653:	
  6287  00A8                     	line	43
  6288                           	
  6289                           l19:	
  6290  00A8                     	return
  6291  00A8  0008               	opt stack 0
  6292                           GLOBAL	__end_of_displayFIFO
  6293                           	__end_of_displayFIFO:
  6294  00A9                     	signat	_displayFIFO,89
  6295                           	global	_delFIFO
  6296                           
  6297 ;; *************** function _delFIFO *****************
  6298 ;; Defined at:
  6299 ;;		line 45 in file "fifo.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  n               1    wreg     unsigned char 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  n               1    1[COMMON] unsigned char 
  6304 ;;  ret             1    2[COMMON] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1    wreg      unsigned char 
  6307 ;; Registers used:
  6308 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6314 ;;      Params:         0       0       0       0       0
  6315 ;;      Locals:         2       0       0       0       0
  6316 ;;      Temps:          1       0       0       0       0
  6317 ;;      Totals:         3       0       0       0       0
  6318 ;;Total ram usage:        3 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_main
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6327                           	line	45
  6328                           global __ptext19
  6329                           __ptext19:	;psect for function _delFIFO
  6330  011E                     psect	text19
  6331                           	file	"fifo.c"
  6332                           	line	45
  6333                           	global	__size_of_delFIFO
  6334                           	__size_of_delFIFO	equ	__end_of_delFIFO-_delFIFO
  6335  0021                     	
  6336                           _delFIFO:	
  6337  011E                     ;incstack = 0
  6338                           	opt	stack 7
  6339                           ; Regs used in _delFIFO: [wreg-fsr0h+status,2+status,0]
  6340                           ;delFIFO@n stored from wreg
  6341                           	movwf	(delFIFO@n)
  6342  011E  00F1               	line	48
  6343                           	
  6344                           l1655:	
  6345  011F                     ;fifo.c: 45: unsigned char delFIFO( unsigned char n );fifo.c: 46: {;fifo.c: 47:     unsi
                                 gned char ret;;fifo.c: 48:     while( n && fifoHead )
  6346                           	goto	l22
  6347  011F  2930               	
  6348                           l23:	
  6349  0120                     	line	50
  6350                           	
  6351                           l1657:	
  6352  0120                     ;fifo.c: 49:     {;fifo.c: 50:         --fifoHead;
  6353                           	movlw	01h
  6354  0120  3001               	subwf	(_fifoHead),f
  6355  0121  02FD               	line	51
  6356                           	
  6357                           l1659:	
  6358  0122                     ;fifo.c: 51:         ret = fifo[fifoHead];
  6359                           	movf	(_fifoHead),w
  6360  0122  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  6361  0123  3E25               	movwf	fsr0
  6362  0124  0084               	bcf	status, 7	;select IRP bank0
  6363  0125  1383               	movf	indf,w
  6364  0126  0800               	movwf	(??_delFIFO+0)+0
  6365  0127  00F0               	movf	(??_delFIFO+0)+0,w
  6366  0128  0870               	movwf	(delFIFO@ret)
  6367  0129  00F2               	line	52
  6368                           	
  6369                           l1661:	
  6370  012A                     ;fifo.c: 52:         fifo[ fifoHead ] = 0;
  6371                           	movf	(_fifoHead),w
  6372  012A  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  6373  012B  3E25               	movwf	fsr0
  6374  012C  0084               	clrf	indf
  6375  012D  0180               	line	53
  6376                           ;fifo.c: 53:         --n;
  6377                           	movlw	01h
  6378  012E  3001               	subwf	(delFIFO@n),f
  6379  012F  02F1               	line	54
  6380                           ;fifo.c: 54:     }
  6381                           	
  6382                           l22:	
  6383  0130                     	line	48
  6384                           ;fifo.c: 48:     while( n && fifoHead )
  6385                           	movf	((delFIFO@n)),w
  6386  0130  0871               	btfsc	status,2
  6387  0131  1903               	goto	u671
  6388  0132  2934               	goto	u670
  6389  0133  2935               u671:
  6390  0134                     	goto	l1665
  6391  0134  293C               u670:
  6392  0135                     	
  6393                           l1663:	
  6394  0135                     	movf	((_fifoHead)),w
  6395  0135  087D               	btfss	status,2
  6396  0136  1D03               	goto	u681
  6397  0137  2939               	goto	u680
  6398  0138  293A               u681:
  6399  0139                     	goto	l1657
  6400  0139  2920               u680:
  6401  013A                     	goto	l1665
  6402  013A  293C               	
  6403                           l25:	
  6404  013B                     	goto	l1665
  6405  013B  293C               	
  6406                           l26:	
  6407  013C                     	line	55
  6408                           	
  6409                           l1665:	
  6410  013C                     ;fifo.c: 55:     return( ret );
  6411                           	movf	(delFIFO@ret),w
  6412  013C  0872               	goto	l27
  6413  013D  293E               	
  6414                           l1667:	
  6415  013E                     	line	56
  6416                           	
  6417                           l27:	
  6418  013E                     	return
  6419  013E  0008               	opt stack 0
  6420                           GLOBAL	__end_of_delFIFO
  6421                           	__end_of_delFIFO:
  6422  013F                     	signat	_delFIFO,4217
  6423                           	global	_currentKey
  6424                           
  6425 ;; *************** function _currentKey *****************
  6426 ;; Defined at:
  6427 ;;		line 65 in file "keyboard.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      unsigned char 
  6434 ;; Registers used:
  6435 ;;		wreg
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6441 ;;      Params:         0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0
  6444 ;;      Totals:         0       0       0       0       0
  6445 ;;Total ram usage:        0 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_main
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6454                           	file	"keyboard.c"
  6455                           	line	65
  6456                           global __ptext20
  6457                           __ptext20:	;psect for function _currentKey
  6458  00A9                     psect	text20
  6459                           	file	"keyboard.c"
  6460                           	line	65
  6461                           	global	__size_of_currentKey
  6462                           	__size_of_currentKey	equ	__end_of_currentKey-_currentKey
  6463  0005                     	
  6464                           _currentKey:	
  6465  00A9                     ;incstack = 0
  6466                           	opt	stack 7
  6467                           ; Regs used in _currentKey: [wreg]
  6468                           	line	67
  6469                           	
  6470                           l1673:	
  6471  00A9                     ;keyboard.c: 67:     return( currKey );
  6472                           	bcf	status, 5	;RP0=0, select bank0
  6473  00A9  1283               	bcf	status, 6	;RP1=0, select bank0
  6474  00AA  1303               	movf	(_currKey),w
  6475  00AB  0823               	goto	l51
  6476  00AC  28AD               	
  6477                           l1675:	
  6478  00AD                     	line	68
  6479                           	
  6480                           l51:	
  6481  00AD                     	return
  6482  00AD  0008               	opt stack 0
  6483                           GLOBAL	__end_of_currentKey
  6484                           	__end_of_currentKey:
  6485  00AE                     	signat	_currentKey,89
  6486                           global	___latbits
  6487                           ___latbits	equ	2
  6488  0002                     	global	btemp
  6489                           	btemp set 07Eh
  6490  007E                     
  6491                           	DABS	1,126,2	;btemp
  6492                           	global	wtemp0
  6493                           	wtemp0 set btemp+0
  6494  007E                     	end


Data Sizes:
    Strings     54
    Constant    16
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     16      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
		 -> main@atuador(BANK0[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
		 -> main@sensor(BANK0[1]), 

    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 

    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 

    lcd@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[12]), STR_3(CODE[17]), STR_2(CODE[12]), STR_1(CODE[13]), 
		 -> fifo(BANK0[16]), 

    sp__displayFIFO	PTR void  size(1) Largest target is 16
		 -> fifo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_lcd
    _serialIOscan->_serialIObyteShift
    _screen_menu->_lcd
    _screen_car->_lcd
    _lcd->_lcdxy
    _lcdxy->_lcdcmd
    _clearLCD->_lcdcmd
    _initLCD->_lcdcmd

Critical Paths under _main in BANK0

    _main->_screen_car

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0    5938
                                              3 BANK0     13    13      0
                           _clearLCD
                         _currentKey
                            _delFIFO
                        _displayFIFO
                            _getFIFO
                       _initKeyboard
                            _initLCD
                       _initSerialIO
                       _keyboardScan
                                _lcd
                        _previousKey
                            _putFIFO
                         _screen_car
                        _screen_menu
                       _serialIOscan
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         5     5      0     205
                                              4 COMMON     5     5      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _screen_menu                                          0     0      0    1213
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _screen_car                                           3     3      0    1390
                                              0 BANK0      3     3      0
                           _clearLCD
                                _lcd
 ---------------------------------------------------------------------------------
 (2) _lcd                                                  5     2      3    1213
                                              7 COMMON     5     2      3
                        _displayFIFO (ARG)
                             _lcddat
                              _lcdxy
 ---------------------------------------------------------------------------------
 (3) _lcdxy                                                3     2      1     297
                                              4 COMMON     3     2      1
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (3) _lcddat                                               3     3      0      67
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _clearLCD                                             0     0      0     177
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (1) _putFIFO                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _previousKey                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _keyboardScan                                        11    11      0     210
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         4     2      2     251
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              5     5      0     177
                                              4 COMMON     3     3      0
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (4) _lcdcmd                                               4     4      0     177
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initKeyboard                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getFIFO                                              2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayFIFO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delFIFO                                              3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _currentKey                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearLCD
     _lcdcmd
   _currentKey
   _delFIFO
   _displayFIFO
   _getFIFO
   _initKeyboard
   _initLCD
     _lcdcmd
   _initSerialIO
   _keyboardScan
   _lcd
     _displayFIFO (ARG)
     _lcddat (ARG)
     _lcdxy (ARG)
       _lcdcmd
   _previousKey
   _putFIFO
   _screen_car
     _clearLCD
       _lcdcmd
     _lcd
       _displayFIFO (ARG)
       _lcddat (ARG)
       _lcdxy (ARG)
         _lcdcmd
   _screen_menu
     _lcd
       _displayFIFO (ARG)
       _lcddat (ARG)
       _lcdxy (ARG)
         _lcdcmd
   _serialIOscan
     _serialIObyteShift
     _serialIOload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      25       5       46.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Nov 06 16:35:36 2019

              ?_displayFIFO 0070                           l9 00E0                           pc 0002  
                        l12 011B                          l13 011D                          l22 0130  
                        l23 0120                          l25 013B                          l26 013C  
                        l51 00AD                          l27 013E                          l19 00A8  
                        l62 00F3                          l54 0334                          l55 039D  
                        l80 0320                          l56 0351                          l48 00B2  
                        l57 0392                          l82 0316                          l58 0387  
                        l90 0106                          l83 0325                          l75 02F2  
                        l59 03A8                          l84 0329                          l77 02E8  
                        l93 01B5                          l78 02F7                          l94 01A0  
                        l79 0329                          l87 0168                          l95 01C6  
                        l96 01C6                          l99 0234                          fsr 0004  
                       l102 00D2                         l200 04B6                         l201 04BC  
                       l122 00BE                         l210 04EC                         l202 04C5  
                       l211 04F5                         l203 04C6                         l220 055F  
                       l212 04F6                         l204 04CC                         l221 0575  
                       l213 050B                         l205 04D5                         l310 018E  
                       l302 00B7                         l230 05E6                         l222 057A  
                       l214 0510                         l206 04D6                         l119 02CA  
                       l311 0193                         l231 05EC                         l223 0590  
                       l215 0525                         l207 04DC                         l320 01FA  
                       l240 061C                         l232 05F5                         l224 0595  
                       l216 052A                         l208 04E5                         l305 0189  
                       l241 0625                         l233 05F6                         l225 05AB  
                       l217 053F                         l209 04E6                         l306 0170  
                       l314 0263                         l242 07E7                         l250 06F5  
                       l234 05FC                         l226 05B0                         l218 0544  
                       l170 04B4                         l162 03CE                         l307 017B  
                       l315 0243                         l243 079C                         l251 06F6  
                       l163 0627                         l235 0605                         l227 05C6  
                       l219 055A                         l171 040B                         l308 017C  
                       l316 026C                         l260 0742                         l252 0707  
                       l244 06C0                         l236 0606                         l228 05CB  
                       l172 04B3                         l180 04AF                         l164 03D9  
                       l309 0185                         l317 0271                         l261 0743  
                       l253 0711                         l245 06CF                         l165 06A1  
                       l237 060C                         l229 05E1                         l181 0442  
                       l173 0416                         l270 0790                         l262 0744  
                       l254 0712                         l246 06D9                         l238 0615  
                       l174 04B2                         l182 04AE                         l190 04AA  
                       l166 03E0                         l247 07D6                         l271 0754  
                       l263 0745                         l255 0723                         l239 0616  
                       l191 0479                         l183 044D                         l175 0421  
                       l167 03F5                         l280 07EE                         l272 0757  
                       l264 0746                         l256 072D                         l248 06DA  
                       l168 04B5                         l176 04B1                         l184 04AD  
                       l192 04A9                         l281 07EE                         l273 0759  
                       l265 0747                         l257 072E                         l249 06EB  
                       l193 0484                         l185 0458                         l177 042C  
                       l169 0400                         l274 075C                         l266 0748  
                       l258 0740                         l178 04B0                         l186 04AC  
                       l194 04A8                         l275 075E                         l267 074F  
                       l259 0741                         l195 048F                         l187 0463  
                       l179 0437                         l268 0767                         l276 0761  
                       l188 04AB                         l196 04A7                         l277 0763  
                       l269 0750                         l197 049A                         l189 046E  
                       l278 0796                         l198 04A6                         l279 07ED  
                       l199 04A5                         u600 0315                         u601 0314  
                       u620 01C5                         u621 01C4                         u710 034F  
                       u630 0179                         u711 034E                         u615 00F8  
                       u631 0178                         u560 02E1                         u704 033A  
                       u640 0180                         u800 0406                         u561 02E0  
                       u705 0338                         u641 017F                         u801 0405  
                       u570 02E7                         u730 0370                         u650 018E  
                       u810 0411                         u571 02E6                         u731 036F  
                       u651 018D                         u811 0410                         u660 010E  
                       u580 0300                         u724 0362                         u900 0474  
                       u820 041C                         u661 010D                         u581 02FF  
                       u725 035F                         u901 0473                         u821 041B  
                       u670 0135                         u590 030F                         u750 0391  
                       u910 047F                         u830 0427                         u671 0134  
                       u591 030E                         u751 0390                         u911 047E  
                       u831 0426                         u680 013A                         u760 039C  
                       u920 048A                         u840 0432                         u681 0139  
                       u761 039B                         u745 0373                         u921 0489  
                       u841 0431                         u690 0332                         u770 026B  
                       u930 0495                         u850 043D                         u691 0331  
                       u771 026A                         u931 0494                         u851 043C  
                       u940 04A0                         u860 0448                         u780 03F0  
                       u941 049F                         u861 0447                         u781 03EF  
                       u950 04C0                         u870 0453                         u790 03FB  
                       u951 04BF                         u871 0452                         u791 03FA  
                       u960 04D0                         u880 045E                         u961 04CF  
                       u881 045D                         u970 04E0                         u890 0469  
                       u971 04DF                         u891 0468                         u980 04F0  
                       u981 04EF                         u990 05F0                         u991 05EF  
                       _lcd 0194                         fsr0 0004                         indf 0000  
              __CFG_LVP$OFF 0000                lcddat@nibble 0072                        l2001 072E  
                      l2011 0757                        l2003 0734                        l2013 075C  
                      l2021 0790                        l2005 0739                        l2023 0796  
                      l2015 0761                        l2007 0748                        l2031 07E7  
                      l2025 079B                        l2017 0766                        l2009 0750  
                      l2019 0767                        l2027 079C                        l2029 07D6  
                      l1601 00F5                        l1611 00B8                        l1603 0195  
                      l1701 0396                        l1605 01A0                        l1621 0179  
                      l1613 00B3                        l2181 0776                        l1711 00E8  
                      l1551 02D3                        l1703 039D                        l1607 01B0  
                      l1631 0191                        l1623 0180                        l1615 016A  
                      l2183 07A4                        l1641 0108                        l1713 00EC  
                      l1561 02F2                        l1553 02DB                        l1705 03A8  
                      l1609 01B5                        l1721 01FB                        l1633 0193  
                      l1625 0185                        l1617 016E                        l2177 0631  
                      l1651 00A6                        l1643 010E                        l1715 00EE  
                      l1707 00E1                        l1571 0309                        l1563 02F7  
                      l1555 02DC                        l1547 02CC                        l1731 0272  
                      l1635 00D4                        l1723 0206                        l1627 0186  
                      l1619 0173                        l2179 0699                        l1811 03BA  
                      l1661 012A                        l1653 00A8                        l1645 0116  
                      l1717 00EF                        l1709 00E5                        l1573 030F  
                      l1565 02FA                        l1557 02E1                        l1549 02D0  
                      l1741 0285                        l1733 0276                        l1637 00DC  
                      l1581 0140                        l1725 0215                        l1629 0189  
                      l1901 04E0                        l1821 03E0                        l1813 03BF  
                      l1805 03A9                        l1663 0135                        l1655 011F  
                      l1647 011B                        l1639 0107                        l1719 00F2  
                      l1575 0316                        l1567 0300                        l1559 02E8  
                      l1751 02B1                        l1743 028B                        l1735 0277  
                      l1671 00B2                        l1591 0154                        l1583 0144  
                      l1727 022F                        l1911 0510                        l1903 04E7  
                      l1831 0400                        l1823 03EA                        l1815 03CE  
                      l1807 03B0                        l1673 00A9                        l1665 013C  
                      l1657 0120                        l1649 011D                        l1577 0320  
                      l1569 0301                        l1753 02BE                        l1745 0298  
                      l1737 0278                        l1761 01D7                        l1681 0333  
                      l1593 0157                        l1585 0147                        l1729 00C7  
                      l1921 055A                        l1913 0525                        l1905 04F0  
                      l1841 041C                        l1833 0406                        l1825 03F0  
                      l1817 03D3                        l1809 03B5                        ?_lcd 0077  
                      l1675 00AD                        l1667 013E                        l1659 0122  
                      l1579 0325                        l1755 02C4                        l1747 029E  
                      l1739 027C                        l1771 01E6                        l1763 01DA  
                      l1691 0351                        l1683 0334                        l1595 0160  
                      l1587 014F                        l1931 0595                        l1923 055F  
                      l1915 052A                        l1907 04F6                        l1851 0437  
                      l1843 0421                        l1835 040B                        l1827 03F5  
                      l1819 03D9                        l1749 02AB                        l1781 01F5  
                      l1773 01E9                        l1765 01DD                        l1757 01C8  
                      l1693 0370                        l1685 0348                        l1677 032A  
                      l1669 00AE                        l1597 0161                        l1589 0150  
                      l1941 05E1                        l1933 05AB                        l1925 0575  
                      l1917 053F                        l1909 050B                        l1861 0453  
                      l1853 043D                        l1845 0427                        l1837 0411  
                      l1829 03FB                        l1783 01F8                        l1775 01EC  
                      l1767 01E0                        l1759 01D6                        l1695 0387  
                      l1687 0349                        l1679 032C                        l1599 0165  
                      l1791 0241                        l1951 0607                        l1943 05E7  
                      l1935 05B0                        l1927 057A                        l1919 0544  
                      l1871 046E                        l1863 0458                        l1855 0442  
                      l1847 042C                        l1839 0416                        l1785 01F9  
                      l1777 01EF                        l1769 01E3                        l1697 038B  
                      l1689 0350                        l1793 0243                        l1953 0610  
                      l1945 05F0                        l1937 05C6                        l1929 0590  
                      l1881 048A                        l1873 0474                        l1865 045E  
                      l1857 0448                        l1849 0432                        l1961 0627  
                      l1779 01F2                        l1699 0392                        l1795 025E  
                      l1787 0235                        l1971 06C4                        l1955 0617  
                      l1947 05F7                        l1939 05CB                        l1891 04B7  
                      l1883 048F                        l1875 0479                        l1867 0463  
                      l1859 044D                        l1963 06A1                        l1797 0263  
                      l1789 023C                        l1981 06E4                        l1973 06C8  
                      l1965 06AB                        l1957 0620                        l1949 0600  
                      l1893 04C0                        l1885 0495                        l1877 047F  
                      l1869 0469                        l1799 026C                        l1991 0707  
                      l1983 06EB                        l1975 06CF                        l1967 06B5  
                      l1959 0626                        l1895 04C7                        l1887 049A  
                      l1879 0484                        l1993 0712                        l1985 06F6  
                      l1977 06DA                        l1969 06C0                        l1897 04D0  
                      l1889 04A0                        l1995 0718                        l1987 06FC  
                      l1979 06E0                        l1899 04D7                        l1997 071C  
                      l1989 0700                        l1999 0723                 main@atuador 003F  
                      STR_1 0034                        STR_2 004D                        STR_3 0023  
                      STR_4 0041                        u1000 0600                        u1001 05FF  
                      u1010 0610                        u1011 060F                        u1020 0620  
                      u1021 061F                        u1030 06AB                        u1031 06AA  
                      u1040 06B5                        u1041 06B4                        u1050 06C8  
                      u1051 06C7                        u1107 0518                        u1060 06E4  
                      u1061 06E3                        u1117 0532                        u1070 0700  
                      u1207 0152                        u1071 06FF                        u1127 054C  
                      u1080 071C                        u1217 0163                        u1081 071B  
                      u1137 0567                        u1227 0280                        u1147 0582  
                      u1237 0291                        u1157 059D                        u1247 02A4  
                      u1167 05B8                        u1257 02B7                        u1177 05D3  
                      u1097 04FE                        u1267 02EC                        u1187 020E  
                      u1277 02F4                        u1197 0229                        u1287 031A  
                      u1297 0322                        _WPUB 0095                lcdcmd@nibble 0073  
                      _fifo 0025                        _main 03A9                        lcd@x 007B  
                      lcd@y 0077                        btemp 007E                        start 0000  
                     ??_lcd 007A                       ?_main 0070               __CFG_WDTE$OFF 0000  
           __end_of_delFIFO 013F                       _PORTB 0006             __end_of_getFIFO 011E  
                     _TRISB 0086                       _TRISD 0088             __end_of_initLCD 02CB  
                     _lcdxy 00F4                       main@a 003B                       main@b 003C  
                     main@c 003D                       main@d 003E             __end_of_putFIFO 00E1  
                     pclath 000A                       status 0003                       wtemp0 007E  
            __CFG_MCLRE$OFF 0000             __initialization 07F1                __end_of_main 07F1  
             ?_initKeyboard 0070                      ??_main 0038               ?_initSerialIO 0070  
                    ?_lcdxy 0074                      _ANSELH 0189                ?_screen_menu 0070  
             ?_keyboardScan 0070            __end_of_clearLCD 00BF              ??_initKeyboard 0070  
                 ??_delFIFO 0070                      _lcddat 013F                      _lcdcmd 02CB  
                 ??_getFIFO 0070        __size_of_displayFIFO 0003                      lcd@ptr 0078  
            ??_initSerialIO 0072                      lcdxy@x 0076                      lcdxy@y 0074  
                 ??_initLCD 0074                   ??_putFIFO 0070              ??_keyboardScan 0070  
              ?_previousKey 0070     __end_of__initialization 07FC           _serialIObyteShift 0169  
        ?_serialIObyteShift 0070              __pcstackCOMMON 0070               __end_of_lcdxy 0107  
       ??_serialIObyteShift 0070              _OPTION_REGbits 0081           initSerialIO@ptrIn 0073  
                   ??_lcdxy 0075                  delFIFO@ret 0072                  __pbssBANK0 0020  
 __end_of_serialIObyteShift 0194                  __pmaintext 03A9                     ?_lcddat 0070  
                   ?_lcdcmd 0070     serialIObyteShift@dataIn 0071                     _LCDbits 0008  
                 ?_clearLCD 0070        __end_of_initKeyboard 00F4                  __stringtab 0003  
             ?_serialIOload 0070               ?_serialIOscan 0070        __end_of_initSerialIO 01FB  
      __size_of_screen_menu 000C                  getFIFO@aux 0071                     _delFIFO 011E  
           __size_of_lcddat 002A                  _currentKey 00A9             __size_of_lcdcmd 005F  
                   _getFIFO 0107                   _ANSELbits 0188        __end_of_keyboardScan 03A9  
                   __ptext1 0235                     __ptext2 00B3                     __ptext3 0169  
                   __ptext4 00C7                     __ptext5 01FB                     __ptext6 0194  
                   __ptext7 00F4                     __ptext8 013F                     __ptext9 00B8  
                   _initLCD 0272                     _currKey 0023                __size_of_lcd 0033  
                ??_clearLCD 0074                     _putFIFO 00D3                     _prevKey 0024  
                   clrloop0 00C0        end_of_initialization 07FC              ??_serialIOload 0070  
            ??_serialIOscan 0074  __size_of_serialIObyteShift 002B                  _screen_car 01FB  
      __size_of_previousKey 0005                   _PORTAbits 0005                   _PORTEbits 0009  
              _KEYBOARDbits 0006                   _TRISAbits 0085                   _TRISEbits 0089  
           keyboardScan@aux 0078                  main@estado 0042                  main@sensor 0040  
             ??_displayFIFO 0070                 ?_currentKey 0070              __end_of_lcddat 0169  
            __end_of_lcdcmd 032A         start_initialization 07F1       __size_of_initKeyboard 0013  
               __end_of_lcd 01C7       __size_of_initSerialIO 0034          initSerialIO@length 0071  
               ?_screen_car 0070          initSerialIO@ptrOut 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __size_of_keyboardScan 007F              _keyboardMatrix 0013                    ??_lcddat 0070  
                  ??_lcdcmd 0070                _initKeyboard 00E1        __end_of_serialIOload 00B8  
      __end_of_serialIOscan 0272         __end_of_displayFIFO 00A9                _initSerialIO 01C7  
               __pbssCOMMON 007C                   ___latbits 0002               __pcstackBANK0 0035  
         __size_of_clearLCD 0007         __size_of_currentKey 0005                _keyboardScan 032A  
    __end_of_keyboardMatrix 0023                    ?_delFIFO 0070               serialIOscan@i 0078  
             serialIOscan@j 0077                    ?_getFIFO 0070                   __pstrings 0003  
                  ?_initLCD 0070         __size_of_screen_car 003A                    ?_putFIFO 0070  
  serialIObyteShift@dataBit 0073    serialIObyteShift@dataOut 0072              __size_of_lcdxy 0013  
             ??_screen_menu 007C                   clear_ram0 00BF                    _SERIALIO 0009  
               _displayFIFO 00A6                 __stringbase 0012                   lcddat@dat 0071  
                 lcdcmd@cmd 0072                 _lenSerialIO 0020                   main@tecla 0041  
             ??_previousKey 0070         __end_of_screen_menu 00D3       __size_of_serialIOload 0005  
     __size_of_serialIOscan 003D                ??_currentKey 0070            __size_of_delFIFO 0021  
          __size_of_getFIFO 0017          __end_of__stringtab 0013                    delFIFO@n 0071  
          __size_of_initLCD 0059                    _clearLCD 00B8                    _fifoHead 007D  
          __size_of_putFIFO 000E                    _fifoTail 007C                    __ptext10 00D3  
                  __ptext11 00AE                    __ptext20 00A9                    __ptext12 032A  
                  __ptext13 01C7                    __ptext14 0272                    __ptext15 02CB  
                  __ptext16 00E1                    __ptext17 0107                    __ptext18 00A6  
                  __ptext19 011E                _serialIOload 00B3                _serialIOscan 0235  
             __size_of_main 0448          __end_of_currentKey 00AE                ??_screen_car 0035  
       __end_of_previousKey 00B3               keyboardScan@i 0079               keyboardScan@j 007A  
                  main@rest 0044          __end_of_screen_car 0235                 _screen_menu 00C7  
                  putFIFO@c 0071                   stringcode 000D                _ptrSerialOut 0021  
                  stringdir 000D                    stringtab 0003                 _ptrSerialIn 0022  
               _previousKey 00AE  
